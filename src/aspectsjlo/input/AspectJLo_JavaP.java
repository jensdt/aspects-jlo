// $ANTLR 3.3 Nov 30, 2010 12:45:30 JavaP.g 2011-06-01 00:08:08

package aspectsjlo.input;

import aspectsjava.model.advice.*;
import aspectsjava.model.pointcut.expression.within.*;
import aspectsjava.model.pointcut.expression.methodinvocation.annotated.AnnotatedMethodInvocationExpression;
import aspectsjava.model.pointcut.expression.methodinvocation.annotated.AnnotationReference;
import aspectsjava.model.pointcut.expression.methodinvocation.signature.MethodReference;
import aspectsjava.model.pointcut.expression.methodinvocation.signature.QualifiedMethodHeader;
import aspectsjava.model.pointcut.expression.methodinvocation.signature.SignatureMethodInvocationPointcutExpression;
import aspectsjava.model.pointcut.expression.methodinvocation.signature.SimpleNameDeclarationWithParameterTypesHeader;


	import chameleon.aspects.*;
	import chameleon.aspects.advice.*;
	import chameleon.aspects.advice.AdviceReturnStatement;
	import chameleon.aspects.advice.types.*;
	import chameleon.aspects.pointcut.*;
	import chameleon.aspects.pointcut.expression.*;

import chameleon.aspects.pointcut.expression.generic.*;
	import chameleon.aspects.pointcut.expression.namedpointcut.*;
	import chameleon.aspects.pointcut.expression.dynamicexpression.*;
import chameleon.aspects.pointcut.expression.staticexpression.*;
	import chameleon.aspects.pointcut.expression.staticexpression.within.*;
	import chameleon.aspects.pointcut.expression.staticexpression.catchclause.*;
	import chameleon.aspects.pointcut.expression.staticexpression.fieldAccess.*;
	import chameleon.aspects.pointcut.expression.staticexpression.cast.*;

import aspectsjlo.model.pointcut.expression.*;

import chameleon.exception.ModelException;
import chameleon.exception.ChameleonProgrammerException;

import chameleon.core.lookup.LookupStrategyFactory;

import chameleon.core.compilationunit.CompilationUnit;

import chameleon.core.declaration.SimpleNameDeclarationWithParametersSignature;
import chameleon.core.declaration.SimpleNameDeclarationWithParametersHeader;
import chameleon.core.declaration.SimpleNameSignature;
import chameleon.core.declaration.Signature;
import chameleon.core.declaration.QualifiedName;
import chameleon.core.declaration.CompositeQualifiedName;
import chameleon.core.declaration.TargetDeclaration;

import chameleon.core.element.Element;

import chameleon.core.expression.Expression;
import chameleon.core.expression.MethodInvocation;
import chameleon.core.expression.Literal;
import chameleon.core.expression.Assignable;
import chameleon.core.expression.NamedTarget;
import chameleon.core.expression.NamedTargetExpression;
import chameleon.core.expression.InvocationTarget;
import chameleon.core.expression.TargetedExpression;
import chameleon.core.expression.VariableReference;

import chameleon.core.language.Language;

import chameleon.core.member.Member;

import chameleon.core.method.Method;
import chameleon.core.method.Implementation;
import chameleon.core.method.RegularImplementation;

import chameleon.core.method.exception.ExceptionClause;
import chameleon.core.method.exception.TypeExceptionDeclaration;

import chameleon.core.modifier.Modifier;

import chameleon.core.namespace.Namespace;
import chameleon.core.namespace.RootNamespace;
import chameleon.core.namespace.NamespaceOrTypeReference;
import chameleon.core.namespace.NamespaceReference;

import chameleon.core.namespacepart.NamespacePart;
import chameleon.core.namespacepart.Import;
import chameleon.core.namespacepart.TypeImport;
import chameleon.core.namespacepart.DemandImport;

import chameleon.core.reference.CrossReference;

import chameleon.core.statement.Block;
import chameleon.core.statement.Statement;

import chameleon.oo.type.ClassBody;
import chameleon.oo.type.RegularType;
import chameleon.oo.type.Type;
import chameleon.oo.type.TypeReference;
import chameleon.oo.type.TypeElement;
import chameleon.oo.type.TypeWithBody;
import chameleon.oo.type.ParameterBlock;

import chameleon.oo.type.generics.TypeParameter;
import chameleon.oo.type.generics.FormalTypeParameter;
import chameleon.oo.type.generics.ActualTypeArgument;
import chameleon.oo.type.generics.BasicTypeArgument;
import chameleon.oo.type.generics.TypeConstraint;
import chameleon.oo.type.generics.ExtendsConstraint;
import chameleon.oo.type.generics.ExtendsWildcard;
import chameleon.oo.type.generics.SuperWildcard;
import chameleon.oo.type.inheritance.SubtypeRelation;

import chameleon.core.variable.Variable;
import chameleon.core.variable.FormalParameter;
import chameleon.core.variable.VariableDeclaration;
import chameleon.core.variable.VariableDeclarator;

import chameleon.input.InputProcessor;
import chameleon.input.Position2D;

import chameleon.support.expression.RegularLiteral;
import chameleon.support.expression.NullLiteral;
import chameleon.support.expression.AssignmentExpression;
import chameleon.support.expression.ConditionalExpression;
import chameleon.support.expression.ConditionalAndExpression;
import chameleon.support.expression.ConditionalOrExpression;
import chameleon.support.expression.InstanceofExpression;
import chameleon.support.expression.ThisLiteral;
import chameleon.support.expression.FilledArrayIndex;
import chameleon.support.expression.EmptyArrayIndex;
import chameleon.support.expression.ArrayIndex;
import chameleon.support.expression.ClassCastExpression;
import chameleon.support.expression.SuperTarget;

import chameleon.support.member.simplename.method.NormalMethod;
import chameleon.support.member.simplename.variable.MemberVariableDeclarator;
import chameleon.support.member.simplename.operator.infix.InfixOperatorInvocation;
import chameleon.support.member.simplename.operator.prefix.PrefixOperatorInvocation;
import chameleon.support.member.simplename.operator.postfix.PostfixOperatorInvocation;
import chameleon.support.member.simplename.method.RegularMethodInvocation;

import chameleon.support.modifier.Abstract;
import chameleon.support.modifier.Final;
import chameleon.support.modifier.Private;
import chameleon.support.modifier.Protected;
import chameleon.support.modifier.Public;
import chameleon.support.modifier.Static;
import chameleon.support.modifier.Native;
import chameleon.support.modifier.Enum;
import chameleon.support.modifier.Interface;

import chameleon.support.statement.StatementExpression;
import chameleon.support.statement.LocalClassStatement;
import chameleon.support.statement.AssertStatement;
import chameleon.support.statement.IfThenElseStatement;
import chameleon.support.statement.ForStatement;
import chameleon.support.statement.ForControl;
import chameleon.support.statement.ForInit;
import chameleon.support.statement.SimpleForControl;
import chameleon.support.statement.EnhancedForControl;
import chameleon.support.statement.StatementExprList;
import chameleon.support.statement.TryStatement;
import chameleon.support.statement.CatchClause;
import chameleon.support.statement.FinallyClause;
import chameleon.support.statement.DoStatement;
import chameleon.support.statement.WhileStatement;
import chameleon.support.statement.SwitchStatement;
import chameleon.support.statement.SwitchCase;
import chameleon.support.statement.SwitchLabel;
import chameleon.support.statement.CaseLabel;
import chameleon.support.statement.DefaultLabel;
import chameleon.support.statement.EnumLabel;
import chameleon.support.statement.ReturnStatement;
import chameleon.support.statement.ThrowStatement;
import chameleon.support.statement.BreakStatement;
import chameleon.support.statement.ContinueStatement;
import chameleon.support.statement.SynchronizedStatement;
import chameleon.support.statement.EmptyStatement;
import chameleon.support.statement.LabeledStatement;

import chameleon.support.type.EmptyTypeElement;
import chameleon.support.type.StaticInitializer;

import chameleon.support.variable.LocalVariableDeclarator;

import chameleon.support.input.ChameleonParser;

import chameleon.util.Util;

import jnome.core.expression.ArrayInitializer;
import jnome.core.expression.ClassLiteral;
import jnome.core.expression.ArrayAccessExpression;
import jnome.core.expression.ArrayCreationExpression;
import jnome.core.expression.invocation.ConstructorInvocation;
import jnome.core.expression.invocation.JavaMethodInvocation;
import jnome.core.expression.invocation.ThisConstructorDelegation;
import jnome.core.expression.invocation.SuperConstructorDelegation;

import jnome.core.imports.SingleStaticImport;

import jnome.core.language.Java;

import jnome.core.modifier.StrictFP;
import jnome.core.modifier.Transient;
import jnome.core.modifier.Volatile;
import jnome.core.modifier.Synchronized;
import jnome.core.modifier.JavaConstructor;
import jnome.core.modifier.Implements;
import jnome.core.modifier.AnnotationModifier;
import jnome.core.modifier.AnnotationType;

import jnome.core.type.JavaTypeReference;
import jnome.core.type.ArrayTypeReference;
import jnome.core.type.BasicJavaTypeReference;
import jnome.core.type.JavaIntersectionTypeReference;
import jnome.core.type.PureWildcard;

import jnome.core.enumeration.EnumConstant;

import jnome.core.variable.JavaVariableDeclaration;
import jnome.core.variable.MultiFormalParameter;

import jnome.input.JavaFactory;

import subobjectjava.model.component.ComponentRelation;
import subobjectjava.model.component.ConfigurationBlock;
import subobjectjava.model.component.ConfigurationClause;
import subobjectjava.model.component.RenamingClause;
import subobjectjava.model.component.OverridesClause;
import subobjectjava.model.expression.SubobjectConstructorCall;
import subobjectjava.model.expression.ComponentParameterCall;
import subobjectjava.model.expression.OuterTarget;
import subobjectjava.model.expression.RootTarget;
import subobjectjava.model.component.ComponentParameter;
import subobjectjava.model.component.FormalComponentParameter;
import subobjectjava.model.component.SingleFormalComponentParameter;
import subobjectjava.model.component.MultiFormalComponentParameter;
import subobjectjava.model.component.ActualComponentArgument;
import subobjectjava.model.component.SingleActualComponentArgument;
import subobjectjava.model.component.MultiActualComponentArgument;
import subobjectjava.model.component.ComponentParameterTypeReference;
import subobjectjava.model.component.ComponentNameActualArgument;
import subobjectjava.model.component.ParameterReferenceActualArgument;
import subobjectjava.model.component.Export;
import subobjectjava.model.component.InstantiatedMemberSubobjectParameter;

import java.util.List;
import java.util.ArrayList;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.tree.*;

/** A Java 1.5 grammar for ANTLR v3 derived from the spec
 *
 *  This is a very close representation of the spec; the changes
 *  are comestic (remove left recursion) and also fixes (the spec
 *  isn't exactly perfect).  I have run this on the 1.4.2 source
 *  and some nasty looking enums from 1.5, but have not really
 *  tested for 1.5 compatibility.
 *
 *  I built this with: java -Xmx100M org.antlr.Tool java.g 
 *  and got two errors that are ok (for now):
 *  java.g:691:9: Decision can match input such as
 *    "'0'..'9'{'E', 'e'}{'+', '-'}'0'..'9'{'D', 'F', 'd', 'f'}"
 *    using multiple alternatives: 3, 4
 *  As a result, alternative(s) 4 were disabled for that input
 *  java.g:734:35: Decision can match input such as "{'$', 'A'..'Z',
 *    '_', 'a'..'z', '\u00C0'..'\u00D6', '\u00D8'..'\u00F6',
 *    '\u00F8'..'\u1FFF', '\u3040'..'\u318F', '\u3300'..'\u337F',
 *    '\u3400'..'\u3D2D', '\u4E00'..'\u9FFF', '\uF900'..'\uFAFF'}"
 *    using multiple alternatives: 1, 2
 *  As a result, alternative(s) 2 were disabled for that input
 *
 *  You can turn enum on/off as a keyword :)
 *
 *  Version 1.0 -- initial release July 5, 2006 (requires 3.0b2 or higher)
 *
 *  Primary author: Terence Parr, July 2006
 *
 *  Version 1.0.1 -- corrections by Koen Vanderkimpen & Marko van Dooren,
 *      October 25, 2006;
 *      fixed normalInterfaceDeclaration: now uses typeParameters instead
 *          of typeParameter (according to JLS, 3rd edition)
 *      fixed castExpression: no longer allows expression next to type
 *          (according to semantics in JLS, in contrast with syntax in JLS)
 *
 *  Version 1.0.2 -- Terence Parr, Nov 27, 2006
 *      java spec I built this from had some bizarre for-loop control.
 *          Looked weird and so I looked elsewhere...Yep, it's messed up.
 *          simplified.
 *
 *  Version 1.0.3 -- Chris Hogue, Feb 26, 2007
 *      Factored out an annotationName rule and used it in the annotation rule.
 *          Not sure why, but typeName wasn't recognizing references to inner
 *          annotations (e.g. @InterfaceName.InnerAnnotation())
 *      Factored out the elementValue section of an annotation reference.  Created 
 *          elementValuePair and elementValuePairs rules, then used them in the 
 *          annotation rule.  Allows it to recognize annotation references with 
 *          multiple, comma separated attributes.
 *      Updated elementValueArrayInitializer so that it allows multiple elements.
 *          (It was only allowing 0 or 1 element).
 *      Updated localVariableDeclaration to allow annotations.  Interestingly the JLS
 *          doesn't appear to indicate this is legal, but it does work as of at least
 *          JDK 1.5.0_06.
 *      Moved the identifierRule portion of annotationTypeElementRest to annotationMethodRest.
 *          Because annotationConstantRest already references variableDeclarator which 
 *          has the identifierRule portion in it, the parser would fail on constants in 
 *          annotation definitions because it expected two identifiers.  
 *      Added optional trailing ';' to the alternatives in annotationTypeElementRest.
 *          Wouldn't handle an inner interface that has a trailing ';'.
 *      Swapped the expression and type rule reference order in castExpression to 
 *          make it check for genericized casts first.  It was failing to recognize a
 *          statement like  "Class<Byte> TYPE = (Class<Byte>)...;" because it was seeing
 *          'Class<Byte' in the cast expression as a less than expression, then failing 
 *          on the '>'.
 *      Changed createdName to use typeArguments instead of nonWildcardTypeArguments.
 *          Again, JLS doesn't seem to allow this, but java.lang.Class has an example of
 *          of this construct.
 *      Changed the 'this' alternative in primary to allow 'identifierSuffix' rather than
 *          just 'arguments'.  The case it couldn't handle was a call to an explicit
 *          generic method invocation (e.g. this.<E>doSomething()).  Using identifierSuffix
 *          may be overly aggressive--perhaps should create a more constrained thisSuffix rule?
 *      
 *  Version 1.0.4 -- Hiroaki Nakamura, May 3, 2007
 *
 *  Fixed formalParameterDecls, localVariableDeclaration, forInit,
 *  and forVarControl to use variableModifier* not 'final'? (annotation)?
 *
 *  Version 1.0.5 -- Terence, June 21, 2007
 *  --a[i].foo didn't work. Fixed unaryExpression
 *
 *  Version 1.0.6 -- John Ridgway, March 17, 2008
 *      Made "assert" a switchable keyword like "enum".
 *      Fixed compilationUnit to disallow "annotation importDeclaration ...".
 *      Changed "identifierRule ('.' identifierRule)*" to "qualifiedName" in more 
 *          places.
 *      Changed modifier* and/or variableModifier* to classOrInterfaceModifiers,
 *          modifiers or variableModifiers, as appropriate.
 *      Renamed "bound" to "typeBound" to better match language in the JLS.
 *      Added "memberDeclaration" which rewrites to methodDeclaration or 
 *      fieldDeclaration and pulled type into memberDeclaration.  So we parse 
 *          type and then move on to decide whether we're dealing with a field
 *          or a method.
 *      Modified "constructorDeclaration" to use "constructorBody" instead of
 *          "methodBody".  constructorBody starts with explicitConstructorInvocation,
 *          then goes on to blockStatement*.  Pulling explicitConstructorInvocation
 *          out of expressions allowed me to simplify "primary".
 *      Changed variableDeclarator to simplify it.
 *      Changed type to use classOrInterfaceType, thus simplifying it; of course
 *          I then had to add classOrInterfaceType, but it is used in several 
 *          places.
 *      Fixed annotations, old version allowed "@X(y,z)", which is illegal.
 *      Added optional comma to end of "elementValueArrayInitializer"; as per JLS.
 *      Changed annotationTypeElementRest to use normalClassDeclaration and 
 *          normalInterfaceDeclaration rather than classDeclaration and 
 *          interfaceDeclaration, thus getting rid of a couple of grammar ambiguities.
 *      Split localVariableDeclaration into localVariableDeclarationStatement
 *          (includes the terminating semi-colon) and localVariableDeclaration.  
 *          This allowed me to use localVariableDeclaration in "forInit" clauses,
 *           simplifying them.
 *      Changed switchBlockStatementGroup to use multiple labels.  This adds an
 *          ambiguity, but if one uses appropriately greedy parsing it yields the
 *           parse that is closest to the meaning of the switch statement.
 *      Renamed "forVarControl" to "enhancedForControl" -- JLS language.
 *      Added semantic predicates to test for shift operations rather than other
 *          things.  Thus, for instance, the string "< <" will never be treated
 *          as a left-shift operator.
 *      In "creator" we rule out "nonWildcardTypeArguments" on arrayCreation, 
 *          which are illegal.
 *      Moved "nonWildcardTypeArguments into innerCreator.
 *      Removed 'super' superSuffix from explicitGenericInvocation, since that
 *          is only used in explicitConstructorInvocation at the beginning of a
 *           constructorBody.  (This is part of the simplification of expressions
 *           mentioned earlier.)
 *      Simplified primary (got rid of those things that are only used in
 *          explicitConstructorInvocation).
 *      Lexer -- removed "Exponent?" from FloatingPointLiteral choice 4, since it
 *          led to an ambiguity.
 *
 *      This grammar successfully parses every .java file in the JDK 1.5 source 
 *          tree (excluding those whose file names include '-', which are not
 *          valid Java compilation units).
 *
 *  Known remaining problems:
 *      "Letter" and "JavaIDDigit" are wrong.  The actual specification of
 *      "Letter" should be "a character for which the method
 *      Character.isJavaidentifierRuleStart(int) returns true."  A "Java 
 *      letter-or-digit is a character for which the method 
 *      Character.isJavaidentifierRulePart(int) returns true."
 */
public class AspectJLo_JavaP extends ChameleonParser {
    public static final int EOF=-1;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__50=50;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__59=59;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__90=90;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__99=99;
    public static final int T__100=100;
    public static final int T__101=101;
    public static final int T__102=102;
    public static final int T__103=103;
    public static final int T__104=104;
    public static final int T__105=105;
    public static final int T__106=106;
    public static final int T__107=107;
    public static final int T__108=108;
    public static final int T__109=109;
    public static final int T__110=110;
    public static final int T__111=111;
    public static final int T__112=112;
    public static final int T__113=113;
    public static final int T__114=114;
    public static final int T__115=115;
    public static final int T__116=116;
    public static final int T__117=117;
    public static final int T__118=118;
    public static final int T__119=119;
    public static final int T__120=120;
    public static final int T__121=121;
    public static final int T__122=122;
    public static final int T__123=123;
    public static final int T__124=124;
    public static final int T__125=125;
    public static final int T__126=126;
    public static final int T__127=127;
    public static final int T__128=128;
    public static final int T__129=129;
    public static final int T__130=130;
    public static final int T__131=131;
    public static final int T__132=132;
    public static final int T__133=133;
    public static final int T__134=134;
    public static final int T__135=135;
    public static final int T__136=136;
    public static final int T__137=137;
    public static final int T__138=138;
    public static final int T__139=139;
    public static final int T__140=140;
    public static final int T__141=141;
    public static final int T__142=142;
    public static final int T__143=143;
    public static final int T__144=144;
    public static final int Identifier=4;
    public static final int ENUM=5;
    public static final int FloatingPointLiteral=6;
    public static final int CharacterLiteral=7;
    public static final int StringLiteral=8;
    public static final int HexLiteral=9;
    public static final int OctalLiteral=10;
    public static final int DecimalLiteral=11;
    public static final int ASSERT=12;
    public static final int HexDigit=13;
    public static final int IntegerTypeSuffix=14;
    public static final int Exponent=15;
    public static final int FloatTypeSuffix=16;
    public static final int EscapeSequence=17;
    public static final int UnicodeEscape=18;
    public static final int OctalEscape=19;
    public static final int Export=20;
    public static final int Connector=21;
    public static final int Connect=22;
    public static final int Name=23;
    public static final int Overrides=24;
    public static final int Letter=25;
    public static final int JavaIDDigit=26;
    public static final int WS=27;
    public static final int COMMENT=28;
    public static final int LINE_COMMENT=29;
    public static final int IdentifierWithWC=30;

    // delegates
    // delegators
    public AspectJLoParser gAspectJLo;
    public AspectJLoParser gParent;

    protected static class TargetScope_scope {
        InvocationTarget target;
        Token start;
    }
    protected Stack TargetScope_stack = new Stack();
    protected static class MethodScope_scope {
        Method method;
        Token start;
    }
    protected Stack MethodScope_stack = new Stack();


        public AspectJLo_JavaP(TokenStream input, AspectJLoParser gAspectJLo) {
            this(input, new RecognizerSharedState(), gAspectJLo);
        }
        public AspectJLo_JavaP(TokenStream input, RecognizerSharedState state, AspectJLoParser gAspectJLo) {
            super(input, state);
            this.gAspectJLo = gAspectJLo;
             
            gParent = gAspectJLo;
        }
        
    protected TreeAdaptor adaptor = new CommonTreeAdaptor();

    public void setTreeAdaptor(TreeAdaptor adaptor) {
        this.adaptor = adaptor;
    }
    public TreeAdaptor getTreeAdaptor() {
        return adaptor;
    }

    public String[] getTokenNames() { return AspectJLoParser.tokenNames; }
    public String getGrammarFileName() { return "JavaP.g"; }


    	@Override
    	public Object compilationUnit() throws RecognitionException {
    		throw new RuntimeException();
    	}
    	
      public RegularMethodInvocation invocation(String name, InvocationTarget target) {
        return new JavaMethodInvocation(name, target);
      }

      private JavaFactory _javaFactory = new JavaFactory();
      
      public JavaFactory factory() {
        return _javaFactory;
      }
      
      public void setFactory(JavaFactory factory) {
        _javaFactory = factory;
      }

      public InvocationTarget cloneTargetOfTarget(NamedTarget target) {
        InvocationTarget result = null;
        if(target != null) {
          InvocationTarget targetOfTarget = target.getTarget();
          if(targetOfTarget != null) {
            result = targetOfTarget.clone();
          }
        }
        return result;
      }
      
      public RegularType createType(SimpleNameSignature signature) {
         return factory().createRegularType(signature);
      }
      
      public NormalMethod createNormalMethod(SimpleNameDeclarationWithParametersHeader header, TypeReference returnType) {
         return factory().createNormalMethod(header, returnType);
      }

      public InvocationTarget cloneTarget(InvocationTarget target) {
        InvocationTarget result = null;
        if(target != null) {
            result = target.clone();
        }
        return result;
      }

      public static class ClassCreatorRest {
        public ClassCreatorRest(List<Expression> args) {
          _args = args; // NO ENCAPSULATION, BUT IT IS JUST THE PARSER.
        }
        
        public List<Expression> arguments() {
          return _args;
        }
        
        private List<Expression> _args;
        
        public void setBody(ClassBody body) {
          _body = body;
        }
        
        public ClassBody body() {
          return _body;
        }
        
        private ClassBody _body;
      }
      

      public static class StupidVariableDeclaratorId {
           public StupidVariableDeclaratorId(String name, int dimension, CommonToken nameToken) {
             _name = name;
             _dimension = dimension;
             _token = nameToken;
           }
           private final String _name;
           private final int _dimension;
           
           public CommonToken nameToken() {
             return _token;
           }
           
           private CommonToken _token;
           
           public String name() {
             return _name;
           }
           
           public int dimension() {
             return _dimension;
           }
      }
      

      public void processType(NamespacePart np, Type type){
        if(np == null) {throw new IllegalArgumentException("namespace part given to processType is null.");}
        if(type == null) {return;}  //throw new IllegalArgumentException("type given to processType is null.");}
        np.add(type);
        // inherit from java.lang.Object if there is no explicit extends relation
        String fqn = type.getFullyQualifiedName();
        if(fqn != null) {
          if(type.nonMemberInheritanceRelations().isEmpty() && (! fqn.equals("java.lang.Object"))){
            type.addInheritanceRelation(new SubtypeRelation(createTypeReference(new NamespaceOrTypeReference("java.lang"),"Object")));
          }
        }

      }
      
      public JavaTypeReference myToArray(JavaTypeReference ref, StupidVariableDeclaratorId id) {
        int dim = id.dimension(); 
        if(dim > 0) {
          return new ArrayTypeReference(ref,dim);
        } else {
          return ref;
        }
      }
      
      public void addNonTopLevelObjectInheritance(Type type) {
        if(type.nonMemberInheritanceRelations().isEmpty()){
          type.addInheritanceRelation(new SubtypeRelation(createTypeReference(new NamespaceOrTypeReference("java.lang"),"Object")));
        }
      }
      
      public JavaTypeReference typeRef(String qn) {
        return ((Java)language()).createTypeReference(qn);
      }

      public JavaTypeReference createTypeReference(CrossReference<?, ? extends TargetDeclaration> target, String name) {
        return ((Java)language()).createTypeReference(target,name);
      }
      
      public JavaTypeReference createTypeReference(CrossReference<?, ? extends TargetDeclaration> target, SimpleNameSignature signature) {
        return ((Java)language()).createTypeReference(target,signature);
      }

      public JavaTypeReference createTypeReference(NamedTarget target) {
        return ((Java)language()).createTypeReference(target);
      }
      
      public Java java() {
        return (Java)language();
      }


    public static class packageDeclaration_return extends ParserRuleReturnScope {
        public NamespacePart element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "packageDeclaration"
    // JavaP.g:400:1: packageDeclaration returns [NamespacePart element] : pkgkw= 'package' qn= qualifiedName ';' ;
    public final AspectJLo_JavaP.packageDeclaration_return packageDeclaration() throws RecognitionException {
        AspectJLo_JavaP.packageDeclaration_return retval = new AspectJLo_JavaP.packageDeclaration_return();
        retval.start = input.LT(1);
        int packageDeclaration_StartIndex = input.index();
        Object root_0 = null;

        Token pkgkw=null;
        Token char_literal1=null;
        AspectJLo_JavaP.qualifiedName_return qn = null;


        Object pkgkw_tree=null;
        Object char_literal1_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return retval; }
            // JavaP.g:401:5: (pkgkw= 'package' qn= qualifiedName ';' )
            // JavaP.g:401:9: pkgkw= 'package' qn= qualifiedName ';'
            {
            root_0 = (Object)adaptor.nil();

            pkgkw=(Token)match(input,31,FOLLOW_31_in_packageDeclaration487); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            pkgkw_tree = (Object)adaptor.create(pkgkw);
            adaptor.addChild(root_0, pkgkw_tree);
            }
            pushFollow(FOLLOW_qualifiedName_in_packageDeclaration491);
            qn=qualifiedName();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, qn.getTree());
            char_literal1=(Token)match(input,32,FOLLOW_32_in_packageDeclaration493); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal1_tree = (Object)adaptor.create(char_literal1);
            adaptor.addChild(root_0, char_literal1_tree);
            }
            if ( state.backtracking==0 ) {
              try{
                         retval.element = new NamespacePart(getDefaultNamespace().getOrCreateNamespace((qn!=null?input.toString(qn.start,qn.stop):null)));
                         setKeyword(retval.element,pkgkw);
                       }
                       catch(ModelException exc) {
                         //this should not happen, something is wrong with the parser
                         throw new ChameleonProgrammerException(exc);
                       }
                      
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, packageDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "packageDeclaration"

    public static class importDeclaration_return extends ParserRuleReturnScope {
        public Import element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "importDeclaration"
    // JavaP.g:413:1: importDeclaration returns [Import element] : im= 'import' (st= 'static' )? qn= qualifiedName ( '.' '*' )? ';' ;
    public final AspectJLo_JavaP.importDeclaration_return importDeclaration() throws RecognitionException {
        AspectJLo_JavaP.importDeclaration_return retval = new AspectJLo_JavaP.importDeclaration_return();
        retval.start = input.LT(1);
        int importDeclaration_StartIndex = input.index();
        Object root_0 = null;

        Token im=null;
        Token st=null;
        Token char_literal2=null;
        Token char_literal3=null;
        Token char_literal4=null;
        AspectJLo_JavaP.qualifiedName_return qn = null;


        Object im_tree=null;
        Object st_tree=null;
        Object char_literal2_tree=null;
        Object char_literal3_tree=null;
        Object char_literal4_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return retval; }
            // JavaP.g:414:5: (im= 'import' (st= 'static' )? qn= qualifiedName ( '.' '*' )? ';' )
            // JavaP.g:414:9: im= 'import' (st= 'static' )? qn= qualifiedName ( '.' '*' )? ';'
            {
            root_0 = (Object)adaptor.nil();

            im=(Token)match(input,33,FOLLOW_33_in_importDeclaration533); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            im_tree = (Object)adaptor.create(im);
            adaptor.addChild(root_0, im_tree);
            }
            // JavaP.g:414:23: (st= 'static' )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==34) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // JavaP.g:0:0: st= 'static'
                    {
                    st=(Token)match(input,34,FOLLOW_34_in_importDeclaration537); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    st_tree = (Object)adaptor.create(st);
                    adaptor.addChild(root_0, st_tree);
                    }

                    }
                    break;

            }

            pushFollow(FOLLOW_qualifiedName_in_importDeclaration542);
            qn=qualifiedName();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, qn.getTree());
            if ( state.backtracking==0 ) {
              if(st == null) {
                         retval.element = new TypeImport(typeRef((qn!=null?input.toString(qn.start,qn.stop):null)));
                         setKeyword(retval.element,im);
                       } else {
                         retval.element = new SingleStaticImport(typeRef(Util.getAllButLastPart((qn!=null?input.toString(qn.start,qn.stop):null))),Util.getLastPart((qn!=null?input.toString(qn.start,qn.stop):null)));
                         setKeyword(retval.element,im);
                       }
                      
            }
            // JavaP.g:423:10: ( '.' '*' )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==35) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // JavaP.g:423:11: '.' '*'
                    {
                    char_literal2=(Token)match(input,35,FOLLOW_35_in_importDeclaration566); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal2_tree = (Object)adaptor.create(char_literal2);
                    adaptor.addChild(root_0, char_literal2_tree);
                    }
                    char_literal3=(Token)match(input,36,FOLLOW_36_in_importDeclaration568); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal3_tree = (Object)adaptor.create(char_literal3);
                    adaptor.addChild(root_0, char_literal3_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new DemandImport(new NamespaceReference((qn!=null?input.toString(qn.start,qn.stop):null)));
                                   setKeyword(retval.element,im);
                                  
                    }

                    }
                    break;

            }

            char_literal4=(Token)match(input,32,FOLLOW_32_in_importDeclaration587); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal4_tree = (Object)adaptor.create(char_literal4);
            adaptor.addChild(root_0, char_literal4_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, importDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "importDeclaration"

    public static class typeDeclaration_return extends ParserRuleReturnScope {
        public Type element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeDeclaration"
    // JavaP.g:430:1: typeDeclaration returns [Type element] : (cd= classOrInterfaceDeclaration | ';' );
    public final AspectJLo_JavaP.typeDeclaration_return typeDeclaration() throws RecognitionException {
        AspectJLo_JavaP.typeDeclaration_return retval = new AspectJLo_JavaP.typeDeclaration_return();
        retval.start = input.LT(1);
        int typeDeclaration_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal5=null;
        AspectJLo_JavaP.classOrInterfaceDeclaration_return cd = null;


        Object char_literal5_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return retval; }
            // JavaP.g:431:5: (cd= classOrInterfaceDeclaration | ';' )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==ENUM||LA11_0==34||(LA11_0>=37 && LA11_0<=43)||LA11_0==52||LA11_0==79) ) {
                alt11=1;
            }
            else if ( (LA11_0==32) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // JavaP.g:431:9: cd= classOrInterfaceDeclaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_classOrInterfaceDeclaration_in_typeDeclaration617);
                    cd=classOrInterfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, cd.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = cd.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:432:9: ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal5=(Token)match(input,32,FOLLOW_32_in_typeDeclaration629); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal5_tree = (Object)adaptor.create(char_literal5);
                    adaptor.addChild(root_0, char_literal5_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, typeDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "typeDeclaration"

    public static class classOrInterfaceDeclaration_return extends ParserRuleReturnScope {
        public Type element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "classOrInterfaceDeclaration"
    // JavaP.g:438:1: classOrInterfaceDeclaration returns [Type element] : mods= classOrInterfaceModifiers (cd= classDeclaration | id= interfaceDeclaration ) ;
    public final AspectJLo_JavaP.classOrInterfaceDeclaration_return classOrInterfaceDeclaration() throws RecognitionException {
        AspectJLo_JavaP.classOrInterfaceDeclaration_return retval = new AspectJLo_JavaP.classOrInterfaceDeclaration_return();
        retval.start = input.LT(1);
        int classOrInterfaceDeclaration_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.classOrInterfaceModifiers_return mods = null;

        AspectJLo_JavaP.classDeclaration_return cd = null;

        AspectJLo_JavaP.interfaceDeclaration_return id = null;



        Token start = null; 
              Token end = null;
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return retval; }
            // JavaP.g:445:5: (mods= classOrInterfaceModifiers (cd= classDeclaration | id= interfaceDeclaration ) )
            // JavaP.g:445:9: mods= classOrInterfaceModifiers (cd= classDeclaration | id= interfaceDeclaration )
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_classOrInterfaceModifiers_in_classOrInterfaceDeclaration669);
            mods=classOrInterfaceModifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, mods.getTree());
            if ( state.backtracking==0 ) {
              if(mods != null) {start=mods.start;}
            }
            // JavaP.g:447:10: (cd= classDeclaration | id= interfaceDeclaration )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==ENUM||LA12_0==43) ) {
                alt12=1;
            }
            else if ( (LA12_0==52||LA12_0==79) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // JavaP.g:447:11: cd= classDeclaration
                    {
                    pushFollow(FOLLOW_classDeclaration_in_classOrInterfaceDeclaration702);
                    cd=classDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, cd.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element=cd.element; end = cd.stop; if(mods == null) {start=cd.start;}
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:449:13: id= interfaceDeclaration
                    {
                    pushFollow(FOLLOW_interfaceDeclaration_in_classOrInterfaceDeclaration738);
                    id=interfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, id.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element=id.element; end=id.stop; if(mods == null) {start=id.start;}
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              if(retval.element != null) {
                         for(Modifier mod:mods.element) {
                           retval.element.addModifier(mod);
                         }
                       }
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {

                check_null(retval.element);
                setLocation(retval.element, start, end);

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, classOrInterfaceDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "classOrInterfaceDeclaration"

    public static class classOrInterfaceModifiers_return extends ParserRuleReturnScope {
        public List<Modifier> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "classOrInterfaceModifiers"
    // JavaP.g:458:1: classOrInterfaceModifiers returns [List<Modifier> element] : (mod= classOrInterfaceModifier )* ;
    public final AspectJLo_JavaP.classOrInterfaceModifiers_return classOrInterfaceModifiers() throws RecognitionException {
        AspectJLo_JavaP.classOrInterfaceModifiers_return retval = new AspectJLo_JavaP.classOrInterfaceModifiers_return();
        retval.start = input.LT(1);
        int classOrInterfaceModifiers_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.classOrInterfaceModifier_return mod = null;



        retval.element = new ArrayList<Modifier>();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return retval; }
            // JavaP.g:460:5: ( (mod= classOrInterfaceModifier )* )
            // JavaP.g:460:9: (mod= classOrInterfaceModifier )*
            {
            root_0 = (Object)adaptor.nil();

            // JavaP.g:460:9: (mod= classOrInterfaceModifier )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==79) ) {
                    int LA13_2 = input.LA(2);

                    if ( (LA13_2==Identifier||(LA13_2>=Export && LA13_2<=Overrides)) ) {
                        alt13=1;
                    }


                }
                else if ( (LA13_0==34||(LA13_0>=37 && LA13_0<=42)) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // JavaP.g:460:10: mod= classOrInterfaceModifier
            	    {
            	    pushFollow(FOLLOW_classOrInterfaceModifier_in_classOrInterfaceModifiers804);
            	    mod=classOrInterfaceModifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, mod.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.add(mod.element);
            	    }

            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, classOrInterfaceModifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "classOrInterfaceModifiers"

    public static class classOrInterfaceModifier_return extends ParserRuleReturnScope {
        public Modifier element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "classOrInterfaceModifier"
    // JavaP.g:463:1: classOrInterfaceModifier returns [Modifier element] : (a= annotation | 'public' | 'protected' | 'private' | 'abstract' | 'static' | 'final' | 'strictfp' );
    public final AspectJLo_JavaP.classOrInterfaceModifier_return classOrInterfaceModifier() throws RecognitionException {
        AspectJLo_JavaP.classOrInterfaceModifier_return retval = new AspectJLo_JavaP.classOrInterfaceModifier_return();
        retval.start = input.LT(1);
        int classOrInterfaceModifier_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal6=null;
        Token string_literal7=null;
        Token string_literal8=null;
        Token string_literal9=null;
        Token string_literal10=null;
        Token string_literal11=null;
        Token string_literal12=null;
        AspectJLo_JavaP.annotation_return a = null;


        Object string_literal6_tree=null;
        Object string_literal7_tree=null;
        Object string_literal8_tree=null;
        Object string_literal9_tree=null;
        Object string_literal10_tree=null;
        Object string_literal11_tree=null;
        Object string_literal12_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return retval; }
            // JavaP.g:465:5: (a= annotation | 'public' | 'protected' | 'private' | 'abstract' | 'static' | 'final' | 'strictfp' )
            int alt14=8;
            switch ( input.LA(1) ) {
            case 79:
                {
                alt14=1;
                }
                break;
            case 37:
                {
                alt14=2;
                }
                break;
            case 38:
                {
                alt14=3;
                }
                break;
            case 39:
                {
                alt14=4;
                }
                break;
            case 40:
                {
                alt14=5;
                }
                break;
            case 34:
                {
                alt14=6;
                }
                break;
            case 41:
                {
                alt14=7;
                }
                break;
            case 42:
                {
                alt14=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // JavaP.g:465:9: a= annotation
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_annotation_in_classOrInterfaceModifier837);
                    a=annotation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, a.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = a.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:466:9: 'public'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal6=(Token)match(input,37,FOLLOW_37_in_classOrInterfaceModifier851); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal6_tree = (Object)adaptor.create(string_literal6);
                    adaptor.addChild(root_0, string_literal6_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new Public();
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:467:9: 'protected'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal7=(Token)match(input,38,FOLLOW_38_in_classOrInterfaceModifier867); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal7_tree = (Object)adaptor.create(string_literal7);
                    adaptor.addChild(root_0, string_literal7_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new Protected();
                    }

                    }
                    break;
                case 4 :
                    // JavaP.g:468:9: 'private'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal8=(Token)match(input,39,FOLLOW_39_in_classOrInterfaceModifier880); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal8_tree = (Object)adaptor.create(string_literal8);
                    adaptor.addChild(root_0, string_literal8_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new Private();
                    }

                    }
                    break;
                case 5 :
                    // JavaP.g:469:9: 'abstract'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal9=(Token)match(input,40,FOLLOW_40_in_classOrInterfaceModifier895); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal9_tree = (Object)adaptor.create(string_literal9);
                    adaptor.addChild(root_0, string_literal9_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new Abstract();
                    }

                    }
                    break;
                case 6 :
                    // JavaP.g:470:9: 'static'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal10=(Token)match(input,34,FOLLOW_34_in_classOrInterfaceModifier909); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal10_tree = (Object)adaptor.create(string_literal10);
                    adaptor.addChild(root_0, string_literal10_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new Static();
                    }

                    }
                    break;
                case 7 :
                    // JavaP.g:471:9: 'final'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal11=(Token)match(input,41,FOLLOW_41_in_classOrInterfaceModifier925); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal11_tree = (Object)adaptor.create(string_literal11);
                    adaptor.addChild(root_0, string_literal11_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new Final();
                    }

                    }
                    break;
                case 8 :
                    // JavaP.g:472:9: 'strictfp'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal12=(Token)match(input,42,FOLLOW_42_in_classOrInterfaceModifier942); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal12_tree = (Object)adaptor.create(string_literal12);
                    adaptor.addChild(root_0, string_literal12_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new StrictFP();
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              setLocation(retval.element, (CommonToken)retval.start, (CommonToken)retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, classOrInterfaceModifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "classOrInterfaceModifier"

    public static class modifiers_return extends ParserRuleReturnScope {
        public List<Modifier> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "modifiers"
    // JavaP.g:475:1: modifiers returns [List<Modifier> element] : (mod= modifier )* ;
    public final AspectJLo_JavaP.modifiers_return modifiers() throws RecognitionException {
        AspectJLo_JavaP.modifiers_return retval = new AspectJLo_JavaP.modifiers_return();
        retval.start = input.LT(1);
        int modifiers_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.modifier_return mod = null;



        retval.element = new ArrayList<Modifier>();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return retval; }
            // JavaP.g:477:5: ( (mod= modifier )* )
            // JavaP.g:477:9: (mod= modifier )*
            {
            root_0 = (Object)adaptor.nil();

            // JavaP.g:477:9: (mod= modifier )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==79) ) {
                    int LA15_2 = input.LA(2);

                    if ( (LA15_2==Identifier||(LA15_2>=Export && LA15_2<=Overrides)) ) {
                        alt15=1;
                    }


                }
                else if ( (LA15_0==34||(LA15_0>=37 && LA15_0<=42)||(LA15_0>=58 && LA15_0<=61)) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // JavaP.g:477:10: mod= modifier
            	    {
            	    pushFollow(FOLLOW_modifier_in_modifiers977);
            	    mod=modifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, mod.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.add(mod.element);
            	    }

            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, modifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "modifiers"

    public static class classDeclaration_return extends ParserRuleReturnScope {
        public Type element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "classDeclaration"
    // JavaP.g:480:1: classDeclaration returns [Type element] : (cd= normalClassDeclaration | ed= enumDeclaration );
    public final AspectJLo_JavaP.classDeclaration_return classDeclaration() throws RecognitionException {
        AspectJLo_JavaP.classDeclaration_return retval = new AspectJLo_JavaP.classDeclaration_return();
        retval.start = input.LT(1);
        int classDeclaration_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.normalClassDeclaration_return cd = null;

        AspectJLo_JavaP.enumDeclaration_return ed = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return retval; }
            // JavaP.g:482:5: (cd= normalClassDeclaration | ed= enumDeclaration )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==43) ) {
                alt16=1;
            }
            else if ( (LA16_0==ENUM) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // JavaP.g:482:9: cd= normalClassDeclaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_normalClassDeclaration_in_classDeclaration1009);
                    cd=normalClassDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, cd.getTree());
                    if ( state.backtracking==0 ) {
                       retval.element = cd.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:483:9: ed= enumDeclaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_enumDeclaration_in_classDeclaration1023);
                    ed=enumDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, ed.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = ed.element;
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              check_null(retval.element);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, classDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "classDeclaration"

    public static class normalClassDeclaration_return extends ParserRuleReturnScope {
        public RegularType element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "normalClassDeclaration"
    // JavaP.g:486:1: normalClassDeclaration returns [RegularType element] : clkw= 'class' t= nameAndParams (extkw= 'extends' sc= type )? (impkw= 'implements' trefs= typeList )? body= classBody ;
    public final AspectJLo_JavaP.normalClassDeclaration_return normalClassDeclaration() throws RecognitionException {
        AspectJLo_JavaP.normalClassDeclaration_return retval = new AspectJLo_JavaP.normalClassDeclaration_return();
        retval.start = input.LT(1);
        int normalClassDeclaration_StartIndex = input.index();
        Object root_0 = null;

        Token clkw=null;
        Token extkw=null;
        Token impkw=null;
        AspectJLo_JavaP.nameAndParams_return t = null;

        AspectJLo_JavaP.type_return sc = null;

        AspectJLo_JavaP.typeList_return trefs = null;

        AspectJLo_JavaP.classBody_return body = null;


        Object clkw_tree=null;
        Object extkw_tree=null;
        Object impkw_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return retval; }
            // JavaP.g:487:5: (clkw= 'class' t= nameAndParams (extkw= 'extends' sc= type )? (impkw= 'implements' trefs= typeList )? body= classBody )
            // JavaP.g:487:9: clkw= 'class' t= nameAndParams (extkw= 'extends' sc= type )? (impkw= 'implements' trefs= typeList )? body= classBody
            {
            root_0 = (Object)adaptor.nil();

            clkw=(Token)match(input,43,FOLLOW_43_in_normalClassDeclaration1054); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            clkw_tree = (Object)adaptor.create(clkw);
            adaptor.addChild(root_0, clkw_tree);
            }
            pushFollow(FOLLOW_nameAndParams_in_normalClassDeclaration1058);
            t=nameAndParams();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, t.getTree());
            if ( state.backtracking==0 ) {
              retval.element=t.element;
            }
            // JavaP.g:488:9: (extkw= 'extends' sc= type )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==44) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // JavaP.g:488:10: extkw= 'extends' sc= type
                    {
                    extkw=(Token)match(input,44,FOLLOW_44_in_normalClassDeclaration1073); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    extkw_tree = (Object)adaptor.create(extkw);
                    adaptor.addChild(root_0, extkw_tree);
                    }
                    pushFollow(FOLLOW_type_in_normalClassDeclaration1077);
                    sc=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, sc.getTree());
                    if ( state.backtracking==0 ) {
                      SubtypeRelation extRelation = new SubtypeRelation(sc.element); 
                                   retval.element.addInheritanceRelation(extRelation);
                                   setKeyword(extRelation,extkw);
                                  
                    }

                    }
                    break;

            }

            // JavaP.g:493:9: (impkw= 'implements' trefs= typeList )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==45) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // JavaP.g:493:10: impkw= 'implements' trefs= typeList
                    {
                    impkw=(Token)match(input,45,FOLLOW_45_in_normalClassDeclaration1108); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    impkw_tree = (Object)adaptor.create(impkw);
                    adaptor.addChild(root_0, impkw_tree);
                    }
                    pushFollow(FOLLOW_typeList_in_normalClassDeclaration1112);
                    trefs=typeList();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, trefs.getTree());
                    if ( state.backtracking==0 ) {
                      for(TypeReference ref: trefs.element) {
                                      SubtypeRelation rel = new SubtypeRelation(ref);
                                      retval.element.addInheritanceRelation(rel);
                                      rel.addModifier(new Implements());
                                      setKeyword(rel, impkw);
                                   }
                                  
                    }

                    }
                    break;

            }

            pushFollow(FOLLOW_classBody_in_normalClassDeclaration1142);
            body=classBody();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, body.getTree());
            if ( state.backtracking==0 ) {

                            if(body.element != null) {
                              retval.element.body().addAll(body.element.elements());
                            }
                           
            }
            if ( state.backtracking==0 ) {

                       setKeyword(retval.element,clkw);
                       // FIXME: the implements keyword should not be attached to the class, but there is only one.
                       setKeyword(retval.element,impkw);
                      
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, normalClassDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "normalClassDeclaration"

    public static class nameAndParams_return extends ParserRuleReturnScope {
        public RegularType element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "nameAndParams"
    // JavaP.g:513:1: nameAndParams returns [RegularType element] : tt= createClassHereBecauseANTLRisAnnoying (params= typeParameters )? ;
    public final AspectJLo_JavaP.nameAndParams_return nameAndParams() throws RecognitionException {
        AspectJLo_JavaP.nameAndParams_return retval = new AspectJLo_JavaP.nameAndParams_return();
        retval.start = input.LT(1);
        int nameAndParams_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.createClassHereBecauseANTLRisAnnoying_return tt = null;

        AspectJLo_JavaP.typeParameters_return params = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return retval; }
            // JavaP.g:514:3: (tt= createClassHereBecauseANTLRisAnnoying (params= typeParameters )? )
            // JavaP.g:515:5: tt= createClassHereBecauseANTLRisAnnoying (params= typeParameters )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_createClassHereBecauseANTLRisAnnoying_in_nameAndParams1183);
            tt=createClassHereBecauseANTLRisAnnoying();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, tt.getTree());
            if ( state.backtracking==0 ) {
              retval.element=tt.element;
            }
            // JavaP.g:515:75: (params= typeParameters )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==46) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // JavaP.g:515:76: params= typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_nameAndParams1190);
                    params=typeParameters();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, params.getTree());
                    if ( state.backtracking==0 ) {
                      for(FormalTypeParameter par: params.element){retval.element.addParameter(TypeParameter.class,par);}
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, nameAndParams_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "nameAndParams"

    public static class createClassHereBecauseANTLRisAnnoying_return extends ParserRuleReturnScope {
        public RegularType element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "createClassHereBecauseANTLRisAnnoying"
    // JavaP.g:518:1: createClassHereBecauseANTLRisAnnoying returns [RegularType element] : name= identifierRule ;
    public final AspectJLo_JavaP.createClassHereBecauseANTLRisAnnoying_return createClassHereBecauseANTLRisAnnoying() throws RecognitionException {
        AspectJLo_JavaP.createClassHereBecauseANTLRisAnnoying_return retval = new AspectJLo_JavaP.createClassHereBecauseANTLRisAnnoying_return();
        retval.start = input.LT(1);
        int createClassHereBecauseANTLRisAnnoying_StartIndex = input.index();
        Object root_0 = null;

        AspectJLoParser.identifierRule_return name = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return retval; }
            // JavaP.g:519:4: (name= identifierRule )
            // JavaP.g:519:7: name= identifierRule
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifierRule_in_createClassHereBecauseANTLRisAnnoying1222);
            name=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            if ( state.backtracking==0 ) {
              retval.element = createType(new SimpleNameSignature((name!=null?input.toString(name.start,name.stop):null))); setName(retval.element,name.start);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, createClassHereBecauseANTLRisAnnoying_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "createClassHereBecauseANTLRisAnnoying"

    public static class typeParameters_return extends ParserRuleReturnScope {
        public List<FormalTypeParameter> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeParameters"
    // JavaP.g:522:1: typeParameters returns [List<FormalTypeParameter> element] : '<' par= typeParameter ( ',' par= typeParameter )* '>' ;
    public final AspectJLo_JavaP.typeParameters_return typeParameters() throws RecognitionException {
        AspectJLo_JavaP.typeParameters_return retval = new AspectJLo_JavaP.typeParameters_return();
        retval.start = input.LT(1);
        int typeParameters_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal13=null;
        Token char_literal14=null;
        Token char_literal15=null;
        AspectJLo_JavaP.typeParameter_return par = null;


        Object char_literal13_tree=null;
        Object char_literal14_tree=null;
        Object char_literal15_tree=null;

        retval.element = new ArrayList<FormalTypeParameter>();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return retval; }
            // JavaP.g:524:5: ( '<' par= typeParameter ( ',' par= typeParameter )* '>' )
            // JavaP.g:524:9: '<' par= typeParameter ( ',' par= typeParameter )* '>'
            {
            root_0 = (Object)adaptor.nil();

            char_literal13=(Token)match(input,46,FOLLOW_46_in_typeParameters1254); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal13_tree = (Object)adaptor.create(char_literal13);
            adaptor.addChild(root_0, char_literal13_tree);
            }
            pushFollow(FOLLOW_typeParameter_in_typeParameters1258);
            par=typeParameter();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, par.getTree());
            if ( state.backtracking==0 ) {
              retval.element.add(par.element);
            }
            // JavaP.g:524:65: ( ',' par= typeParameter )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0==47) ) {
                    alt20=1;
                }


                switch (alt20) {
            	case 1 :
            	    // JavaP.g:524:66: ',' par= typeParameter
            	    {
            	    char_literal14=(Token)match(input,47,FOLLOW_47_in_typeParameters1262); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal14_tree = (Object)adaptor.create(char_literal14);
            	    adaptor.addChild(root_0, char_literal14_tree);
            	    }
            	    pushFollow(FOLLOW_typeParameter_in_typeParameters1266);
            	    par=typeParameter();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, par.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.add(par.element);
            	    }

            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);

            char_literal15=(Token)match(input,48,FOLLOW_48_in_typeParameters1271); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal15_tree = (Object)adaptor.create(char_literal15);
            adaptor.addChild(root_0, char_literal15_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, typeParameters_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "typeParameters"

    public static class typeParameter_return extends ParserRuleReturnScope {
        public FormalTypeParameter element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeParameter"
    // JavaP.g:527:1: typeParameter returns [FormalTypeParameter element] : name= identifierRule (extkw= 'extends' bound= typeBound )? ;
    public final AspectJLo_JavaP.typeParameter_return typeParameter() throws RecognitionException {
        AspectJLo_JavaP.typeParameter_return retval = new AspectJLo_JavaP.typeParameter_return();
        retval.start = input.LT(1);
        int typeParameter_StartIndex = input.index();
        Object root_0 = null;

        Token extkw=null;
        AspectJLoParser.identifierRule_return name = null;

        AspectJLo_JavaP.typeBound_return bound = null;


        Object extkw_tree=null;


        Token stop = null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return retval; }
            // JavaP.g:531:5: (name= identifierRule (extkw= 'extends' bound= typeBound )? )
            // JavaP.g:531:9: name= identifierRule (extkw= 'extends' bound= typeBound )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifierRule_in_typeParameter1300);
            name=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new FormalTypeParameter(new SimpleNameSignature((name!=null?input.toString(name.start,name.stop):null))); stop=name.start;
            }
            // JavaP.g:531:126: (extkw= 'extends' bound= typeBound )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==44) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // JavaP.g:531:127: extkw= 'extends' bound= typeBound
                    {
                    extkw=(Token)match(input,44,FOLLOW_44_in_typeParameter1306); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    extkw_tree = (Object)adaptor.create(extkw);
                    adaptor.addChild(root_0, extkw_tree);
                    }
                    pushFollow(FOLLOW_typeBound_in_typeParameter1310);
                    bound=typeBound();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, bound.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element.addConstraint(bound.element); stop=bound.stop;
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              setKeyword(retval.element,extkw);
                       setLocation(retval.element, name.start, stop);
                       setName(retval.element,name.start);
                      
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, typeParameter_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "typeParameter"

    public static class typeBound_return extends ParserRuleReturnScope {
        public ExtendsConstraint element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeBound"
    // JavaP.g:538:1: typeBound returns [ExtendsConstraint element] : tp= type ( '&' tpp= type )* ;
    public final AspectJLo_JavaP.typeBound_return typeBound() throws RecognitionException {
        AspectJLo_JavaP.typeBound_return retval = new AspectJLo_JavaP.typeBound_return();
        retval.start = input.LT(1);
        int typeBound_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal16=null;
        AspectJLo_JavaP.type_return tp = null;

        AspectJLo_JavaP.type_return tpp = null;


        Object char_literal16_tree=null;

        retval.element = new ExtendsConstraint();
        JavaIntersectionTypeReference ref = null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return retval; }
            // JavaP.g:542:5: (tp= type ( '&' tpp= type )* )
            // JavaP.g:542:9: tp= type ( '&' tpp= type )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_in_typeBound1360);
            tp=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, tp.getTree());
            if ( state.backtracking==0 ) {
              retval.element.setTypeReference(tp.element);
            }
            // JavaP.g:544:10: ( '&' tpp= type )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==49) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // JavaP.g:544:11: '&' tpp= type
            	    {
            	    char_literal16=(Token)match(input,49,FOLLOW_49_in_typeBound1384); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal16_tree = (Object)adaptor.create(char_literal16);
            	    adaptor.addChild(root_0, char_literal16_tree);
            	    }
            	    pushFollow(FOLLOW_type_in_typeBound1388);
            	    tpp=type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, tpp.getTree());
            	    if ( state.backtracking==0 ) {

            	                 if(ref == null) {
            	                   ref = new JavaIntersectionTypeReference();
            	                   ref.add(retval.element.typeReference());
            	                   retval.element.setTypeReference(ref);
            	                 }
            	                 ref.add(tpp.element);
            	                
            	    }

            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, typeBound_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "typeBound"

    protected static class enumDeclaration_scope {
        Type enumType;
    }
    protected Stack enumDeclaration_stack = new Stack();

    public static class enumDeclaration_return extends ParserRuleReturnScope {
        public RegularType element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enumDeclaration"
    // JavaP.g:556:1: enumDeclaration returns [RegularType element] : ENUM name= identifierRule ( 'implements' trefs= typeList )? body= enumBody ;
    public final AspectJLo_JavaP.enumDeclaration_return enumDeclaration() throws RecognitionException {
        enumDeclaration_stack.push(new enumDeclaration_scope());
        AspectJLo_JavaP.enumDeclaration_return retval = new AspectJLo_JavaP.enumDeclaration_return();
        retval.start = input.LT(1);
        int enumDeclaration_StartIndex = input.index();
        Object root_0 = null;

        Token ENUM17=null;
        Token string_literal18=null;
        AspectJLoParser.identifierRule_return name = null;

        AspectJLo_JavaP.typeList_return trefs = null;

        AspectJLo_JavaP.enumBody_return body = null;


        Object ENUM17_tree=null;
        Object string_literal18_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return retval; }
            // JavaP.g:560:5: ( ENUM name= identifierRule ( 'implements' trefs= typeList )? body= enumBody )
            // JavaP.g:560:9: ENUM name= identifierRule ( 'implements' trefs= typeList )? body= enumBody
            {
            root_0 = (Object)adaptor.nil();

            ENUM17=(Token)match(input,ENUM,FOLLOW_ENUM_in_enumDeclaration1439); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ENUM17_tree = (Object)adaptor.create(ENUM17);
            adaptor.addChild(root_0, ENUM17_tree);
            }
            pushFollow(FOLLOW_identifierRule_in_enumDeclaration1443);
            name=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            if ( state.backtracking==0 ) {
              retval.element = createType(new SimpleNameSignature((name!=null?input.toString(name.start,name.stop):null))); 
                                            retval.element.addModifier(new Enum()); 
                                            ((enumDeclaration_scope)enumDeclaration_stack.peek()).enumType =retval.element;
                                            setName(retval.element,name.start);
            }
            // JavaP.g:564:19: ( 'implements' trefs= typeList )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==45) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // JavaP.g:564:20: 'implements' trefs= typeList
                    {
                    string_literal18=(Token)match(input,45,FOLLOW_45_in_enumDeclaration1466); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal18_tree = (Object)adaptor.create(string_literal18);
                    adaptor.addChild(root_0, string_literal18_tree);
                    }
                    pushFollow(FOLLOW_typeList_in_enumDeclaration1470);
                    trefs=typeList();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, trefs.getTree());
                    if ( state.backtracking==0 ) {
                      for(TypeReference ref: trefs.element)
                                                     {
                                                      SubtypeRelation rel = new SubtypeRelation(ref);
                                                      retval.element.addInheritanceRelation(rel);
                                                      rel.addModifier(new Implements());
                                                      } 
                                                
                    }

                    }
                    break;

            }

            pushFollow(FOLLOW_enumBody_in_enumDeclaration1545);
            body=enumBody();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, body.getTree());
            if ( state.backtracking==0 ) {
              retval.element.setBody(body.element);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, enumDeclaration_StartIndex); }
            enumDeclaration_stack.pop();
        }
        return retval;
    }
    // $ANTLR end "enumDeclaration"

    public static class enumBody_return extends ParserRuleReturnScope {
        public ClassBody element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enumBody"
    // JavaP.g:577:1: enumBody returns [ClassBody element] : '{' (csts= enumConstants )? ( ',' )? (decls= enumBodyDeclarations )? '}' ;
    public final AspectJLo_JavaP.enumBody_return enumBody() throws RecognitionException {
        AspectJLo_JavaP.enumBody_return retval = new AspectJLo_JavaP.enumBody_return();
        retval.start = input.LT(1);
        int enumBody_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal19=null;
        Token char_literal20=null;
        Token char_literal21=null;
        AspectJLo_JavaP.enumConstants_return csts = null;

        AspectJLo_JavaP.enumBodyDeclarations_return decls = null;


        Object char_literal19_tree=null;
        Object char_literal20_tree=null;
        Object char_literal21_tree=null;

        retval.element = new ClassBody();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return retval; }
            // JavaP.g:579:5: ( '{' (csts= enumConstants )? ( ',' )? (decls= enumBodyDeclarations )? '}' )
            // JavaP.g:579:9: '{' (csts= enumConstants )? ( ',' )? (decls= enumBodyDeclarations )? '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal19=(Token)match(input,50,FOLLOW_50_in_enumBody1575); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal19_tree = (Object)adaptor.create(char_literal19);
            adaptor.addChild(root_0, char_literal19_tree);
            }
            // JavaP.g:579:13: (csts= enumConstants )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==Identifier||(LA24_0>=Export && LA24_0<=Overrides)||LA24_0==79) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // JavaP.g:579:14: csts= enumConstants
                    {
                    pushFollow(FOLLOW_enumConstants_in_enumBody1580);
                    csts=enumConstants();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, csts.getTree());
                    if ( state.backtracking==0 ) {

                                   for(EnumConstant el: csts.element) {
                                      retval.element.add(el);
                                   }
                                  
                    }

                    }
                    break;

            }

            // JavaP.g:584:17: ( ',' )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==47) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // JavaP.g:0:0: ','
                    {
                    char_literal20=(Token)match(input,47,FOLLOW_47_in_enumBody1598); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal20_tree = (Object)adaptor.create(char_literal20);
                    adaptor.addChild(root_0, char_literal20_tree);
                    }

                    }
                    break;

            }

            // JavaP.g:584:22: (decls= enumBodyDeclarations )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==32) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // JavaP.g:584:23: decls= enumBodyDeclarations
                    {
                    pushFollow(FOLLOW_enumBodyDeclarations_in_enumBody1604);
                    decls=enumBodyDeclarations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, decls.getTree());
                    if ( state.backtracking==0 ) {
                      for(TypeElement el: decls.element){retval.element.add(el);}
                    }

                    }
                    break;

            }

            char_literal21=(Token)match(input,51,FOLLOW_51_in_enumBody1610); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal21_tree = (Object)adaptor.create(char_literal21);
            adaptor.addChild(root_0, char_literal21_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, enumBody_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "enumBody"

    public static class enumConstants_return extends ParserRuleReturnScope {
        public List<EnumConstant> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enumConstants"
    // JavaP.g:587:1: enumConstants returns [List<EnumConstant> element] : ct= enumConstant ( ',' cst= enumConstant )* ;
    public final AspectJLo_JavaP.enumConstants_return enumConstants() throws RecognitionException {
        AspectJLo_JavaP.enumConstants_return retval = new AspectJLo_JavaP.enumConstants_return();
        retval.start = input.LT(1);
        int enumConstants_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal22=null;
        AspectJLo_JavaP.enumConstant_return ct = null;

        AspectJLo_JavaP.enumConstant_return cst = null;


        Object char_literal22_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return retval; }
            // JavaP.g:588:5: (ct= enumConstant ( ',' cst= enumConstant )* )
            // JavaP.g:588:9: ct= enumConstant ( ',' cst= enumConstant )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_enumConstant_in_enumConstants1635);
            ct=enumConstant();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ct.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new ArrayList<EnumConstant>(); retval.element.add(ct.element);
            }
            // JavaP.g:588:107: ( ',' cst= enumConstant )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==47) ) {
                    int LA27_1 = input.LA(2);

                    if ( (LA27_1==Identifier||(LA27_1>=Export && LA27_1<=Overrides)||LA27_1==79) ) {
                        alt27=1;
                    }


                }


                switch (alt27) {
            	case 1 :
            	    // JavaP.g:588:108: ',' cst= enumConstant
            	    {
            	    char_literal22=(Token)match(input,47,FOLLOW_47_in_enumConstants1640); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal22_tree = (Object)adaptor.create(char_literal22);
            	    adaptor.addChild(root_0, char_literal22_tree);
            	    }
            	    pushFollow(FOLLOW_enumConstant_in_enumConstants1644);
            	    cst=enumConstant();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, cst.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.add(cst.element);
            	    }

            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, enumConstants_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "enumConstants"

    public static class enumConstant_return extends ParserRuleReturnScope {
        public EnumConstant element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enumConstant"
    // JavaP.g:591:1: enumConstant returns [EnumConstant element] : ( annotations )? name= identifierRule (args= arguments )? (body= classBody )? ;
    public final AspectJLo_JavaP.enumConstant_return enumConstant() throws RecognitionException {
        AspectJLo_JavaP.enumConstant_return retval = new AspectJLo_JavaP.enumConstant_return();
        retval.start = input.LT(1);
        int enumConstant_StartIndex = input.index();
        Object root_0 = null;

        AspectJLoParser.identifierRule_return name = null;

        AspectJLo_JavaP.arguments_return args = null;

        AspectJLo_JavaP.classBody_return body = null;

        AspectJLo_JavaP.annotations_return annotations23 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return retval; }
            // JavaP.g:592:5: ( ( annotations )? name= identifierRule (args= arguments )? (body= classBody )? )
            // JavaP.g:592:9: ( annotations )? name= identifierRule (args= arguments )? (body= classBody )?
            {
            root_0 = (Object)adaptor.nil();

            // JavaP.g:592:9: ( annotations )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==79) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // JavaP.g:0:0: annotations
                    {
                    pushFollow(FOLLOW_annotations_in_enumConstant1674);
                    annotations23=annotations();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, annotations23.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_identifierRule_in_enumConstant1679);
            name=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new EnumConstant(new SimpleNameSignature((name!=null?input.toString(name.start,name.stop):null)));
            }
            // JavaP.g:592:116: (args= arguments )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==72) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // JavaP.g:592:117: args= arguments
                    {
                    pushFollow(FOLLOW_arguments_in_enumConstant1686);
                    args=arguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, args.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element.addAllParameters(args.element);
                    }

                    }
                    break;

            }

            // JavaP.g:592:183: (body= classBody )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==50) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // JavaP.g:592:184: body= classBody
                    {
                    pushFollow(FOLLOW_classBody_in_enumConstant1695);
                    body=classBody();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, body.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element.setBody(body.element);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, enumConstant_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "enumConstant"

    public static class enumBodyDeclarations_return extends ParserRuleReturnScope {
        public List<TypeElement> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enumBodyDeclarations"
    // JavaP.g:595:1: enumBodyDeclarations returns [List<TypeElement> element] : ';' (decl= classBodyDeclaration )* ;
    public final AspectJLo_JavaP.enumBodyDeclarations_return enumBodyDeclarations() throws RecognitionException {
        AspectJLo_JavaP.enumBodyDeclarations_return retval = new AspectJLo_JavaP.enumBodyDeclarations_return();
        retval.start = input.LT(1);
        int enumBodyDeclarations_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal24=null;
        AspectJLo_JavaP.classBodyDeclaration_return decl = null;


        Object char_literal24_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return retval; }
            // JavaP.g:596:5: ( ';' (decl= classBodyDeclaration )* )
            // JavaP.g:596:9: ';' (decl= classBodyDeclaration )*
            {
            root_0 = (Object)adaptor.nil();

            char_literal24=(Token)match(input,32,FOLLOW_32_in_enumBodyDeclarations1726); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal24_tree = (Object)adaptor.create(char_literal24);
            adaptor.addChild(root_0, char_literal24_tree);
            }
            if ( state.backtracking==0 ) {
              retval.element= new ArrayList<TypeElement>();
            }
            // JavaP.g:596:61: (decl= classBodyDeclaration )*
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( ((LA31_0>=Identifier && LA31_0<=ENUM)||(LA31_0>=Export && LA31_0<=Overrides)||LA31_0==32||LA31_0==34||(LA31_0>=37 && LA31_0<=43)||LA31_0==46||LA31_0==50||(LA31_0>=52 && LA31_0<=53)||(LA31_0>=58 && LA31_0<=69)||LA31_0==79||LA31_0==120) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // JavaP.g:596:62: decl= classBodyDeclaration
            	    {
            	    pushFollow(FOLLOW_classBodyDeclaration_in_enumBodyDeclarations1733);
            	    decl=classBodyDeclaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, decl.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.add(decl.element);
            	    }

            	    }
            	    break;

            	default :
            	    break loop31;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, enumBodyDeclarations_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "enumBodyDeclarations"

    public static class interfaceDeclaration_return extends ParserRuleReturnScope {
        public Type element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interfaceDeclaration"
    // JavaP.g:599:1: interfaceDeclaration returns [Type element] : (id= normalInterfaceDeclaration | ad= annotationTypeDeclaration );
    public final AspectJLo_JavaP.interfaceDeclaration_return interfaceDeclaration() throws RecognitionException {
        AspectJLo_JavaP.interfaceDeclaration_return retval = new AspectJLo_JavaP.interfaceDeclaration_return();
        retval.start = input.LT(1);
        int interfaceDeclaration_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.normalInterfaceDeclaration_return id = null;

        AspectJLo_JavaP.annotationTypeDeclaration_return ad = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return retval; }
            // JavaP.g:601:5: (id= normalInterfaceDeclaration | ad= annotationTypeDeclaration )
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==52) ) {
                alt32=1;
            }
            else if ( (LA32_0==79) ) {
                alt32=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }
            switch (alt32) {
                case 1 :
                    // JavaP.g:601:9: id= normalInterfaceDeclaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_normalInterfaceDeclaration_in_interfaceDeclaration1770);
                    id=normalInterfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, id.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = id.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:602:9: ad= annotationTypeDeclaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_annotationTypeDeclaration_in_interfaceDeclaration1784);
                    ad=annotationTypeDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, ad.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = ad.element;
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              check_null(retval.element);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, interfaceDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interfaceDeclaration"

    public static class normalInterfaceDeclaration_return extends ParserRuleReturnScope {
        public RegularType element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "normalInterfaceDeclaration"
    // JavaP.g:605:1: normalInterfaceDeclaration returns [RegularType element] : ifkw= 'interface' name= identifierRule (params= typeParameters )? (extkw= 'extends' trefs= typeList )? body= classBody ;
    public final AspectJLo_JavaP.normalInterfaceDeclaration_return normalInterfaceDeclaration() throws RecognitionException {
        AspectJLo_JavaP.normalInterfaceDeclaration_return retval = new AspectJLo_JavaP.normalInterfaceDeclaration_return();
        retval.start = input.LT(1);
        int normalInterfaceDeclaration_StartIndex = input.index();
        Object root_0 = null;

        Token ifkw=null;
        Token extkw=null;
        AspectJLoParser.identifierRule_return name = null;

        AspectJLo_JavaP.typeParameters_return params = null;

        AspectJLo_JavaP.typeList_return trefs = null;

        AspectJLo_JavaP.classBody_return body = null;


        Object ifkw_tree=null;
        Object extkw_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return retval; }
            // JavaP.g:606:5: (ifkw= 'interface' name= identifierRule (params= typeParameters )? (extkw= 'extends' trefs= typeList )? body= classBody )
            // JavaP.g:606:9: ifkw= 'interface' name= identifierRule (params= typeParameters )? (extkw= 'extends' trefs= typeList )? body= classBody
            {
            root_0 = (Object)adaptor.nil();

            ifkw=(Token)match(input,52,FOLLOW_52_in_normalInterfaceDeclaration1815); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            ifkw_tree = (Object)adaptor.create(ifkw);
            adaptor.addChild(root_0, ifkw_tree);
            }
            pushFollow(FOLLOW_identifierRule_in_normalInterfaceDeclaration1819);
            name=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            if ( state.backtracking==0 ) {
              retval.element = createType(new SimpleNameSignature((name!=null?input.toString(name.start,name.stop):null))); 
                                                        retval.element.addModifier(new Interface());
                                                        setName(retval.element,name.start);
            }
            // JavaP.g:609:10: (params= typeParameters )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==46) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // JavaP.g:609:11: params= typeParameters
                    {
                    pushFollow(FOLLOW_typeParameters_in_normalInterfaceDeclaration1836);
                    params=typeParameters();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, params.getTree());
                    if ( state.backtracking==0 ) {
                      for(TypeParameter par: params.element){retval.element.addParameter(TypeParameter.class,par);}
                    }

                    }
                    break;

            }

            // JavaP.g:610:10: (extkw= 'extends' trefs= typeList )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==44) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // JavaP.g:610:11: extkw= 'extends' trefs= typeList
                    {
                    extkw=(Token)match(input,44,FOLLOW_44_in_normalInterfaceDeclaration1854); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    extkw_tree = (Object)adaptor.create(extkw);
                    adaptor.addChild(root_0, extkw_tree);
                    }
                    pushFollow(FOLLOW_typeList_in_normalInterfaceDeclaration1858);
                    trefs=typeList();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, trefs.getTree());
                    if ( state.backtracking==0 ) {

                                   for(TypeReference ref: trefs.element){
                                    retval.element.addInheritanceRelation(new SubtypeRelation(ref));
                                   } 
                                 
                    }

                    }
                    break;

            }

            pushFollow(FOLLOW_classBody_in_normalInterfaceDeclaration1898);
            body=classBody();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, body.getTree());
            if ( state.backtracking==0 ) {
              retval.element.setBody(body.element);
            }
            if ( state.backtracking==0 ) {

                        setKeyword(retval.element,extkw);
                        setKeyword(retval.element,ifkw);
                       
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, normalInterfaceDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "normalInterfaceDeclaration"

    public static class typeList_return extends ParserRuleReturnScope {
        public List<TypeReference> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeList"
    // JavaP.g:624:1: typeList returns [List<TypeReference> element] : tp= type ( ',' tpp= type )* ;
    public final AspectJLo_JavaP.typeList_return typeList() throws RecognitionException {
        AspectJLo_JavaP.typeList_return retval = new AspectJLo_JavaP.typeList_return();
        retval.start = input.LT(1);
        int typeList_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal25=null;
        AspectJLo_JavaP.type_return tp = null;

        AspectJLo_JavaP.type_return tpp = null;


        Object char_literal25_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return retval; }
            // JavaP.g:625:5: (tp= type ( ',' tpp= type )* )
            // JavaP.g:625:9: tp= type ( ',' tpp= type )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_in_typeList1940);
            tp=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, tp.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new ArrayList<TypeReference>(); retval.element.add(tp.element);
            }
            // JavaP.g:625:99: ( ',' tpp= type )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==47) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // JavaP.g:625:100: ',' tpp= type
            	    {
            	    char_literal25=(Token)match(input,47,FOLLOW_47_in_typeList1944); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal25_tree = (Object)adaptor.create(char_literal25);
            	    adaptor.addChild(root_0, char_literal25_tree);
            	    }
            	    pushFollow(FOLLOW_type_in_typeList1948);
            	    tpp=type();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, tpp.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.add(tpp.element);
            	    }

            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, typeList_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "typeList"

    public static class classBody_return extends ParserRuleReturnScope {
        public ClassBody element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "classBody"
    // JavaP.g:628:1: classBody returns [ClassBody element] : '{' (decl= classBodyDeclaration )* '}' ;
    public final AspectJLo_JavaP.classBody_return classBody() throws RecognitionException {
        AspectJLo_JavaP.classBody_return retval = new AspectJLo_JavaP.classBody_return();
        retval.start = input.LT(1);
        int classBody_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal26=null;
        Token char_literal27=null;
        AspectJLo_JavaP.classBodyDeclaration_return decl = null;


        Object char_literal26_tree=null;
        Object char_literal27_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return retval; }
            // JavaP.g:629:5: ( '{' (decl= classBodyDeclaration )* '}' )
            // JavaP.g:629:9: '{' (decl= classBodyDeclaration )* '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal26=(Token)match(input,50,FOLLOW_50_in_classBody1979); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal26_tree = (Object)adaptor.create(char_literal26);
            adaptor.addChild(root_0, char_literal26_tree);
            }
            if ( state.backtracking==0 ) {
              retval.element = new ClassBody();
            }
            // JavaP.g:629:49: (decl= classBodyDeclaration )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( ((LA36_0>=Identifier && LA36_0<=ENUM)||(LA36_0>=Export && LA36_0<=Overrides)||LA36_0==32||LA36_0==34||(LA36_0>=37 && LA36_0<=43)||LA36_0==46||LA36_0==50||(LA36_0>=52 && LA36_0<=53)||(LA36_0>=58 && LA36_0<=69)||LA36_0==79||LA36_0==120) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // JavaP.g:629:50: decl= classBodyDeclaration
            	    {
            	    pushFollow(FOLLOW_classBodyDeclaration_in_classBody1986);
            	    decl=classBodyDeclaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, decl.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.add(decl.element);
            	    }

            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

            char_literal27=(Token)match(input,51,FOLLOW_51_in_classBody1992); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal27_tree = (Object)adaptor.create(char_literal27);
            adaptor.addChild(root_0, char_literal27_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, classBody_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "classBody"

    public static class interfaceBody_return extends ParserRuleReturnScope {
        public ClassBody element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interfaceBody"
    // JavaP.g:632:1: interfaceBody returns [ClassBody element] : '{' (decl= interfaceBodyDeclaration )* '}' ;
    public final AspectJLo_JavaP.interfaceBody_return interfaceBody() throws RecognitionException {
        AspectJLo_JavaP.interfaceBody_return retval = new AspectJLo_JavaP.interfaceBody_return();
        retval.start = input.LT(1);
        int interfaceBody_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal28=null;
        Token char_literal29=null;
        AspectJLo_JavaP.interfaceBodyDeclaration_return decl = null;


        Object char_literal28_tree=null;
        Object char_literal29_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return retval; }
            // JavaP.g:633:5: ( '{' (decl= interfaceBodyDeclaration )* '}' )
            // JavaP.g:633:9: '{' (decl= interfaceBodyDeclaration )* '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal28=(Token)match(input,50,FOLLOW_50_in_interfaceBody2019); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal28_tree = (Object)adaptor.create(char_literal28);
            adaptor.addChild(root_0, char_literal28_tree);
            }
            if ( state.backtracking==0 ) {
              retval.element = new ClassBody();
            }
            // JavaP.g:634:13: (decl= interfaceBodyDeclaration )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( ((LA37_0>=Identifier && LA37_0<=ENUM)||(LA37_0>=Export && LA37_0<=Overrides)||LA37_0==32||LA37_0==34||(LA37_0>=37 && LA37_0<=43)||LA37_0==46||(LA37_0>=52 && LA37_0<=53)||(LA37_0>=58 && LA37_0<=69)||LA37_0==79||LA37_0==120) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // JavaP.g:634:14: decl= interfaceBodyDeclaration
            	    {
            	    pushFollow(FOLLOW_interfaceBodyDeclaration_in_interfaceBody2039);
            	    decl=interfaceBodyDeclaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, decl.getTree());
            	    if ( state.backtracking==0 ) {
            	      if(decl != null && decl.element != null) {retval.element.add(decl.element);}
            	    }

            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

            char_literal29=(Token)match(input,51,FOLLOW_51_in_interfaceBody2087); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal29_tree = (Object)adaptor.create(char_literal29);
            adaptor.addChild(root_0, char_literal29_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, interfaceBody_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interfaceBody"

    public static class classBodyDeclaration_return extends ParserRuleReturnScope {
        public TypeElement element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "classBodyDeclaration"
    // JavaP.g:640:1: classBodyDeclaration returns [TypeElement element] : (sckw= ';' | (stkw= 'static' )? bl= block | mods= modifiers decl= memberDecl );
    public final AspectJLo_JavaP.classBodyDeclaration_return classBodyDeclaration() throws RecognitionException {
        AspectJLo_JavaP.classBodyDeclaration_return retval = new AspectJLo_JavaP.classBodyDeclaration_return();
        retval.start = input.LT(1);
        int classBodyDeclaration_StartIndex = input.index();
        Object root_0 = null;

        Token sckw=null;
        Token stkw=null;
        AspectJLo_JavaP.block_return bl = null;

        AspectJLo_JavaP.modifiers_return mods = null;

        AspectJLoParser.memberDecl_return decl = null;


        Object sckw_tree=null;
        Object stkw_tree=null;


          Token start=null;
          Token stop=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return retval; }
            // JavaP.g:646:5: (sckw= ';' | (stkw= 'static' )? bl= block | mods= modifiers decl= memberDecl )
            int alt39=3;
            switch ( input.LA(1) ) {
            case 32:
                {
                alt39=1;
                }
                break;
            case 34:
                {
                int LA39_2 = input.LA(2);

                if ( (LA39_2==50) ) {
                    alt39=2;
                }
                else if ( ((LA39_2>=Identifier && LA39_2<=ENUM)||(LA39_2>=Export && LA39_2<=Overrides)||LA39_2==34||(LA39_2>=37 && LA39_2<=43)||LA39_2==46||(LA39_2>=52 && LA39_2<=53)||(LA39_2>=58 && LA39_2<=69)||LA39_2==79||LA39_2==120) ) {
                    alt39=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 39, 2, input);

                    throw nvae;
                }
                }
                break;
            case 50:
                {
                alt39=2;
                }
                break;
            case Identifier:
            case ENUM:
            case Export:
            case Connector:
            case Connect:
            case Name:
            case Overrides:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 46:
            case 52:
            case 53:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 79:
            case 120:
                {
                alt39=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // JavaP.g:646:9: sckw= ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    sckw=(Token)match(input,32,FOLLOW_32_in_classBodyDeclaration2120); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    sckw_tree = (Object)adaptor.create(sckw);
                    adaptor.addChild(root_0, sckw_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new EmptyTypeElement(); start=sckw; stop=sckw;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:647:9: (stkw= 'static' )? bl= block
                    {
                    root_0 = (Object)adaptor.nil();

                    // JavaP.g:647:13: (stkw= 'static' )?
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==34) ) {
                        alt38=1;
                    }
                    switch (alt38) {
                        case 1 :
                            // JavaP.g:0:0: stkw= 'static'
                            {
                            stkw=(Token)match(input,34,FOLLOW_34_in_classBodyDeclaration2134); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            stkw_tree = (Object)adaptor.create(stkw);
                            adaptor.addChild(root_0, stkw_tree);
                            }

                            }
                            break;

                    }

                    pushFollow(FOLLOW_block_in_classBodyDeclaration2139);
                    bl=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, bl.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new StaticInitializer(bl.element); start=stkw;stop=bl.stop;
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:648:9: mods= modifiers decl= memberDecl
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_modifiers_in_classBodyDeclaration2153);
                    mods=modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, mods.getTree());
                    pushFollow(FOLLOW_memberDecl_in_classBodyDeclaration2157);
                    decl=gAspectJLo.memberDecl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, decl.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = decl.element;
                              if(retval.element != null) { 
                                retval.element.addModifiers(mods.element); start=mods.start; stop=decl.stop;
                              }
                             
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              setLocation(retval.element, (CommonToken)start, (CommonToken)stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, classBodyDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "classBodyDeclaration"

    public static class voidMethodDeclaration_return extends ParserRuleReturnScope {
        public Method element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "voidMethodDeclaration"
    // JavaP.g:665:1: voidMethodDeclaration returns [Method element] : vt= voidType methodname= identifierRule voidMethodDeclaratorRest ;
    public final AspectJLo_JavaP.voidMethodDeclaration_return voidMethodDeclaration() throws RecognitionException {
        MethodScope_stack.push(new MethodScope_scope());

        AspectJLo_JavaP.voidMethodDeclaration_return retval = new AspectJLo_JavaP.voidMethodDeclaration_return();
        retval.start = input.LT(1);
        int voidMethodDeclaration_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.voidType_return vt = null;

        AspectJLoParser.identifierRule_return methodname = null;

        AspectJLo_JavaP.voidMethodDeclaratorRest_return voidMethodDeclaratorRest30 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return retval; }
            // JavaP.g:668:6: (vt= voidType methodname= identifierRule voidMethodDeclaratorRest )
            // JavaP.g:668:8: vt= voidType methodname= identifierRule voidMethodDeclaratorRest
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_voidType_in_voidMethodDeclaration2305);
            vt=voidType();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, vt.getTree());
            pushFollow(FOLLOW_identifierRule_in_voidMethodDeclaration2309);
            methodname=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, methodname.getTree());
            if ( state.backtracking==0 ) {
              retval.element = createNormalMethod(new SimpleNameDeclarationWithParametersHeader((methodname!=null?input.toString(methodname.start,methodname.stop):null)), vt.element); 
                  	  ((MethodScope_scope)MethodScope_stack.peek()).method = retval.element;
                  	  setName(retval.element,methodname.start);
                  	  
            }
            pushFollow(FOLLOW_voidMethodDeclaratorRest_in_voidMethodDeclaration2320);
            voidMethodDeclaratorRest30=voidMethodDeclaratorRest();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, voidMethodDeclaratorRest30.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              setName(retval.element, methodname.start);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, voidMethodDeclaration_StartIndex); }
            MethodScope_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "voidMethodDeclaration"

    public static class voidType_return extends ParserRuleReturnScope {
        public JavaTypeReference element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "voidType"
    // JavaP.g:675:1: voidType returns [JavaTypeReference element] : 'void' ;
    public final AspectJLo_JavaP.voidType_return voidType() throws RecognitionException {
        AspectJLo_JavaP.voidType_return retval = new AspectJLo_JavaP.voidType_return();
        retval.start = input.LT(1);
        int voidType_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal31=null;

        Object string_literal31_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return retval; }
            // JavaP.g:677:7: ( 'void' )
            // JavaP.g:677:10: 'void'
            {
            root_0 = (Object)adaptor.nil();

            string_literal31=(Token)match(input,53,FOLLOW_53_in_voidType2350); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal31_tree = (Object)adaptor.create(string_literal31);
            adaptor.addChild(root_0, string_literal31_tree);
            }
            if ( state.backtracking==0 ) {
              retval.element=typeRef("void");
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              setLocation(retval.element, (CommonToken)retval.start, (CommonToken)retval.stop, "__PRIMITIVE");
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, voidType_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "voidType"

    public static class constructorDeclaration_return extends ParserRuleReturnScope {
        public Method element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constructorDeclaration"
    // JavaP.g:680:1: constructorDeclaration returns [Method element] : consname= identifierRule constructorDeclaratorRest ;
    public final AspectJLo_JavaP.constructorDeclaration_return constructorDeclaration() throws RecognitionException {
        MethodScope_stack.push(new MethodScope_scope());

        AspectJLo_JavaP.constructorDeclaration_return retval = new AspectJLo_JavaP.constructorDeclaration_return();
        retval.start = input.LT(1);
        int constructorDeclaration_StartIndex = input.index();
        Object root_0 = null;

        AspectJLoParser.identifierRule_return consname = null;

        AspectJLo_JavaP.constructorDeclaratorRest_return constructorDeclaratorRest32 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return retval; }
            // JavaP.g:682:9: (consname= identifierRule constructorDeclaratorRest )
            // JavaP.g:682:11: consname= identifierRule constructorDeclaratorRest
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifierRule_in_constructorDeclaration2391);
            consname=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, consname.getTree());
            if ( state.backtracking==0 ) {

                           retval.element = createNormalMethod(new SimpleNameDeclarationWithParametersHeader((consname!=null?input.toString(consname.start,consname.stop):null)), typeRef((consname!=null?input.toString(consname.start,consname.stop):null))); 
                           retval.element.addModifier(new JavaConstructor());
                           ((MethodScope_scope)MethodScope_stack.peek()).method = retval.element;
                           setName(retval.element, consname.start);
                          
            }
            pushFollow(FOLLOW_constructorDeclaratorRest_in_constructorDeclaration2422);
            constructorDeclaratorRest32=constructorDeclaratorRest();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, constructorDeclaratorRest32.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, constructorDeclaration_StartIndex); }
            MethodScope_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "constructorDeclaration"

    public static class memberDeclaration_return extends ParserRuleReturnScope {
        public TypeElement element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "memberDeclaration"
    // JavaP.g:692:1: memberDeclaration returns [TypeElement element] : (method= methodDeclaration | field= fieldDeclaration );
    public final AspectJLo_JavaP.memberDeclaration_return memberDeclaration() throws RecognitionException {
        AspectJLo_JavaP.memberDeclaration_return retval = new AspectJLo_JavaP.memberDeclaration_return();
        retval.start = input.LT(1);
        int memberDeclaration_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.methodDeclaration_return method = null;

        AspectJLo_JavaP.fieldDeclaration_return field = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return retval; }
            // JavaP.g:693:5: (method= methodDeclaration | field= fieldDeclaration )
            int alt41=2;
            alt41 = dfa41.predict(input);
            switch (alt41) {
                case 1 :
                    // JavaP.g:693:9: method= methodDeclaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_methodDeclaration_in_memberDeclaration2448);
                    method=methodDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, method.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element=method.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:694:9: field= fieldDeclaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_fieldDeclaration_in_memberDeclaration2462);
                    field=fieldDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, field.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element=field.element;
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, memberDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "memberDeclaration"

    public static class genericMethodOrConstructorDecl_return extends ParserRuleReturnScope {
        public Method element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "genericMethodOrConstructorDecl"
    // JavaP.g:697:1: genericMethodOrConstructorDecl returns [Method element] : params= typeParameters rest= genericMethodOrConstructorRest ;
    public final AspectJLo_JavaP.genericMethodOrConstructorDecl_return genericMethodOrConstructorDecl() throws RecognitionException {
        AspectJLo_JavaP.genericMethodOrConstructorDecl_return retval = new AspectJLo_JavaP.genericMethodOrConstructorDecl_return();
        retval.start = input.LT(1);
        int genericMethodOrConstructorDecl_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.typeParameters_return params = null;

        AspectJLo_JavaP.genericMethodOrConstructorRest_return rest = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return retval; }
            // JavaP.g:698:5: (params= typeParameters rest= genericMethodOrConstructorRest )
            // JavaP.g:698:9: params= typeParameters rest= genericMethodOrConstructorRest
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_typeParameters_in_genericMethodOrConstructorDecl2489);
            params=typeParameters();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, params.getTree());
            pushFollow(FOLLOW_genericMethodOrConstructorRest_in_genericMethodOrConstructorDecl2493);
            rest=genericMethodOrConstructorRest();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, rest.getTree());
            if ( state.backtracking==0 ) {
              retval.element = rest.element; retval.element.header().addAllTypeParameters(params.element);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, genericMethodOrConstructorDecl_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "genericMethodOrConstructorDecl"

    public static class genericMethodOrConstructorRest_return extends ParserRuleReturnScope {
        public Method element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "genericMethodOrConstructorRest"
    // JavaP.g:701:1: genericMethodOrConstructorRest returns [Method element] : ( (t= type | 'void' ) name= identifierRule methodDeclaratorRest | name= identifierRule constructorDeclaratorRest );
    public final AspectJLo_JavaP.genericMethodOrConstructorRest_return genericMethodOrConstructorRest() throws RecognitionException {
        MethodScope_stack.push(new MethodScope_scope());

        AspectJLo_JavaP.genericMethodOrConstructorRest_return retval = new AspectJLo_JavaP.genericMethodOrConstructorRest_return();
        retval.start = input.LT(1);
        int genericMethodOrConstructorRest_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal33=null;
        AspectJLo_JavaP.type_return t = null;

        AspectJLoParser.identifierRule_return name = null;

        AspectJLo_JavaP.methodDeclaratorRest_return methodDeclaratorRest34 = null;

        AspectJLo_JavaP.constructorDeclaratorRest_return constructorDeclaratorRest35 = null;


        Object string_literal33_tree=null;

        TypeReference tref = null;
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return retval; }
            // JavaP.g:705:5: ( (t= type | 'void' ) name= identifierRule methodDeclaratorRest | name= identifierRule constructorDeclaratorRest )
            int alt43=2;
            switch ( input.LA(1) ) {
            case Identifier:
                {
                int LA43_1 = input.LA(2);

                if ( (LA43_1==Identifier||(LA43_1>=Export && LA43_1<=Overrides)||LA43_1==35||LA43_1==46||LA43_1==54) ) {
                    alt43=1;
                }
                else if ( (LA43_1==72) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 1, input);

                    throw nvae;
                }
                }
                break;
            case Export:
                {
                int LA43_2 = input.LA(2);

                if ( (LA43_2==Identifier||(LA43_2>=Export && LA43_2<=Overrides)||LA43_2==35||LA43_2==46||LA43_2==54) ) {
                    alt43=1;
                }
                else if ( (LA43_2==72) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 2, input);

                    throw nvae;
                }
                }
                break;
            case Connector:
                {
                int LA43_3 = input.LA(2);

                if ( (LA43_3==Identifier||(LA43_3>=Export && LA43_3<=Overrides)||LA43_3==35||LA43_3==46||LA43_3==54) ) {
                    alt43=1;
                }
                else if ( (LA43_3==72) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 3, input);

                    throw nvae;
                }
                }
                break;
            case Connect:
                {
                int LA43_4 = input.LA(2);

                if ( (LA43_4==Identifier||(LA43_4>=Export && LA43_4<=Overrides)||LA43_4==35||LA43_4==46||LA43_4==54) ) {
                    alt43=1;
                }
                else if ( (LA43_4==72) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 4, input);

                    throw nvae;
                }
                }
                break;
            case Name:
                {
                int LA43_5 = input.LA(2);

                if ( (LA43_5==Identifier||(LA43_5>=Export && LA43_5<=Overrides)||LA43_5==35||LA43_5==46||LA43_5==54) ) {
                    alt43=1;
                }
                else if ( (LA43_5==72) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 5, input);

                    throw nvae;
                }
                }
                break;
            case Overrides:
                {
                int LA43_6 = input.LA(2);

                if ( (LA43_6==Identifier||(LA43_6>=Export && LA43_6<=Overrides)||LA43_6==35||LA43_6==46||LA43_6==54) ) {
                    alt43=1;
                }
                else if ( (LA43_6==72) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 6, input);

                    throw nvae;
                }
                }
                break;
            case 53:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
                {
                alt43=1;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }

            switch (alt43) {
                case 1 :
                    // JavaP.g:705:9: (t= type | 'void' ) name= identifierRule methodDeclaratorRest
                    {
                    root_0 = (Object)adaptor.nil();

                    // JavaP.g:705:9: (t= type | 'void' )
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==Identifier||(LA42_0>=Export && LA42_0<=Overrides)||(LA42_0>=62 && LA42_0<=69)) ) {
                        alt42=1;
                    }
                    else if ( (LA42_0==53) ) {
                        alt42=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 42, 0, input);

                        throw nvae;
                    }
                    switch (alt42) {
                        case 1 :
                            // JavaP.g:705:10: t= type
                            {
                            pushFollow(FOLLOW_type_in_genericMethodOrConstructorRest2538);
                            t=type();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, t.getTree());
                            if ( state.backtracking==0 ) {
                              tref=t.element;
                            }

                            }
                            break;
                        case 2 :
                            // JavaP.g:705:36: 'void'
                            {
                            string_literal33=(Token)match(input,53,FOLLOW_53_in_genericMethodOrConstructorRest2543); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            string_literal33_tree = (Object)adaptor.create(string_literal33);
                            adaptor.addChild(root_0, string_literal33_tree);
                            }
                            if ( state.backtracking==0 ) {
                              tref = typeRef("void");
                            }

                            }
                            break;

                    }

                    pushFollow(FOLLOW_identifierRule_in_genericMethodOrConstructorRest2550);
                    name=gAspectJLo.identifierRule();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = createNormalMethod(new SimpleNameDeclarationWithParametersHeader((name!=null?input.toString(name.start,name.stop):null)),tref); 
                               ((MethodScope_scope)MethodScope_stack.peek()).method = retval.element;
                               setName(retval.element,name.start);
                              
                    }
                    pushFollow(FOLLOW_methodDeclaratorRest_in_genericMethodOrConstructorRest2563);
                    methodDeclaratorRest34=methodDeclaratorRest();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, methodDeclaratorRest34.getTree());

                    }
                    break;
                case 2 :
                    // JavaP.g:710:9: name= identifierRule constructorDeclaratorRest
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_identifierRule_in_genericMethodOrConstructorRest2575);
                    name=gAspectJLo.identifierRule();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = createNormalMethod(new SimpleNameDeclarationWithParametersHeader((name!=null?input.toString(name.start,name.stop):null)),typeRef((name!=null?input.toString(name.start,name.stop):null))); 
                               ((MethodScope_scope)MethodScope_stack.peek()).method = retval.element;
                               setName(retval.element,name.start);
                              
                    }
                    pushFollow(FOLLOW_constructorDeclaratorRest_in_genericMethodOrConstructorRest2588);
                    constructorDeclaratorRest35=constructorDeclaratorRest();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, constructorDeclaratorRest35.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              check_null(retval.element);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, genericMethodOrConstructorRest_StartIndex); }
            MethodScope_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "genericMethodOrConstructorRest"

    public static class methodDeclaration_return extends ParserRuleReturnScope {
        public Method element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "methodDeclaration"
    // JavaP.g:717:1: methodDeclaration returns [Method element] : t= type name= identifierRule methodDeclaratorRest ;
    public final AspectJLo_JavaP.methodDeclaration_return methodDeclaration() throws RecognitionException {
        MethodScope_stack.push(new MethodScope_scope());

        AspectJLo_JavaP.methodDeclaration_return retval = new AspectJLo_JavaP.methodDeclaration_return();
        retval.start = input.LT(1);
        int methodDeclaration_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.type_return t = null;

        AspectJLoParser.identifierRule_return name = null;

        AspectJLo_JavaP.methodDeclaratorRest_return methodDeclaratorRest36 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return retval; }
            // JavaP.g:719:5: (t= type name= identifierRule methodDeclaratorRest )
            // JavaP.g:719:9: t= type name= identifierRule methodDeclaratorRest
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_in_methodDeclaration2618);
            t=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, t.getTree());
            pushFollow(FOLLOW_identifierRule_in_methodDeclaration2622);
            name=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            if ( state.backtracking==0 ) {
              retval.element = createNormalMethod(new SimpleNameDeclarationWithParametersHeader((name!=null?input.toString(name.start,name.stop):null)),t.element); 
                       ((MethodScope_scope)MethodScope_stack.peek()).method = retval.element;
                       setName(retval.element,name.start);
                       
            }
            pushFollow(FOLLOW_methodDeclaratorRest_in_methodDeclaration2635);
            methodDeclaratorRest36=methodDeclaratorRest();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, methodDeclaratorRest36.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, methodDeclaration_StartIndex); }
            MethodScope_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "methodDeclaration"

    public static class fieldDeclaration_return extends ParserRuleReturnScope {
        public MemberVariableDeclarator element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "fieldDeclaration"
    // JavaP.g:726:1: fieldDeclaration returns [MemberVariableDeclarator element] : ref= type decls= variableDeclarators ';' ;
    public final AspectJLo_JavaP.fieldDeclaration_return fieldDeclaration() throws RecognitionException {
        AspectJLo_JavaP.fieldDeclaration_return retval = new AspectJLo_JavaP.fieldDeclaration_return();
        retval.start = input.LT(1);
        int fieldDeclaration_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal37=null;
        AspectJLo_JavaP.type_return ref = null;

        AspectJLo_JavaP.variableDeclarators_return decls = null;


        Object char_literal37_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return retval; }
            // JavaP.g:727:5: (ref= type decls= variableDeclarators ';' )
            // JavaP.g:727:9: ref= type decls= variableDeclarators ';'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_in_fieldDeclaration2660);
            ref=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ref.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new MemberVariableDeclarator(ref.element);
            }
            pushFollow(FOLLOW_variableDeclarators_in_fieldDeclaration2666);
            decls=variableDeclarators();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, decls.getTree());
            if ( state.backtracking==0 ) {
              for(VariableDeclaration decl: decls.element) {retval.element.add(decl);}
            }
            char_literal37=(Token)match(input,32,FOLLOW_32_in_fieldDeclaration2670); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal37_tree = (Object)adaptor.create(char_literal37);
            adaptor.addChild(root_0, char_literal37_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, fieldDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "fieldDeclaration"

    public static class interfaceBodyDeclaration_return extends ParserRuleReturnScope {
        public TypeElement element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interfaceBodyDeclaration"
    // JavaP.g:730:1: interfaceBodyDeclaration returns [TypeElement element] : (mods= modifiers decl= interfaceMemberDecl | ';' );
    public final AspectJLo_JavaP.interfaceBodyDeclaration_return interfaceBodyDeclaration() throws RecognitionException {
        AspectJLo_JavaP.interfaceBodyDeclaration_return retval = new AspectJLo_JavaP.interfaceBodyDeclaration_return();
        retval.start = input.LT(1);
        int interfaceBodyDeclaration_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal38=null;
        AspectJLo_JavaP.modifiers_return mods = null;

        AspectJLo_JavaP.interfaceMemberDecl_return decl = null;


        Object char_literal38_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return retval; }
            // JavaP.g:731:5: (mods= modifiers decl= interfaceMemberDecl | ';' )
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( ((LA44_0>=Identifier && LA44_0<=ENUM)||(LA44_0>=Export && LA44_0<=Overrides)||LA44_0==34||(LA44_0>=37 && LA44_0<=43)||LA44_0==46||(LA44_0>=52 && LA44_0<=53)||(LA44_0>=58 && LA44_0<=69)||LA44_0==79||LA44_0==120) ) {
                alt44=1;
            }
            else if ( (LA44_0==32) ) {
                alt44=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 44, 0, input);

                throw nvae;
            }
            switch (alt44) {
                case 1 :
                    // JavaP.g:731:9: mods= modifiers decl= interfaceMemberDecl
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_modifiers_in_interfaceBodyDeclaration2703);
                    mods=modifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, mods.getTree());
                    pushFollow(FOLLOW_interfaceMemberDecl_in_interfaceBodyDeclaration2707);
                    decl=interfaceMemberDecl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, decl.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = decl.element; for(Modifier mod: mods.element){retval.element.addModifier(mod);}
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:732:9: ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal38=(Token)match(input,32,FOLLOW_32_in_interfaceBodyDeclaration2719); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal38_tree = (Object)adaptor.create(char_literal38);
                    adaptor.addChild(root_0, char_literal38_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, interfaceBodyDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interfaceBodyDeclaration"

    public static class interfaceMemberDecl_return extends ParserRuleReturnScope {
        public TypeElement element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interfaceMemberDecl"
    // JavaP.g:735:1: interfaceMemberDecl returns [TypeElement element] : (decl= interfaceMethodOrFieldDecl | decl2= interfaceGenericMethodDecl | decl5= voidInterfaceMethodDeclaration | decl3= interfaceDeclaration | decl4= classDeclaration );
    public final AspectJLo_JavaP.interfaceMemberDecl_return interfaceMemberDecl() throws RecognitionException {
        AspectJLo_JavaP.interfaceMemberDecl_return retval = new AspectJLo_JavaP.interfaceMemberDecl_return();
        retval.start = input.LT(1);
        int interfaceMemberDecl_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.interfaceMethodOrFieldDecl_return decl = null;

        AspectJLo_JavaP.interfaceGenericMethodDecl_return decl2 = null;

        AspectJLo_JavaP.voidInterfaceMethodDeclaration_return decl5 = null;

        AspectJLo_JavaP.interfaceDeclaration_return decl3 = null;

        AspectJLo_JavaP.classDeclaration_return decl4 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return retval; }
            // JavaP.g:736:5: (decl= interfaceMethodOrFieldDecl | decl2= interfaceGenericMethodDecl | decl5= voidInterfaceMethodDeclaration | decl3= interfaceDeclaration | decl4= classDeclaration )
            int alt45=5;
            switch ( input.LA(1) ) {
            case Identifier:
            case Export:
            case Connector:
            case Connect:
            case Name:
            case Overrides:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
                {
                alt45=1;
                }
                break;
            case 46:
                {
                alt45=2;
                }
                break;
            case 53:
                {
                alt45=3;
                }
                break;
            case 52:
            case 79:
                {
                alt45=4;
                }
                break;
            case ENUM:
            case 43:
                {
                alt45=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }

            switch (alt45) {
                case 1 :
                    // JavaP.g:736:9: decl= interfaceMethodOrFieldDecl
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_interfaceMethodOrFieldDecl_in_interfaceMemberDecl2744);
                    decl=interfaceMethodOrFieldDecl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, decl.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = decl.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:737:9: decl2= interfaceGenericMethodDecl
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_interfaceGenericMethodDecl_in_interfaceMemberDecl2758);
                    decl2=interfaceGenericMethodDecl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, decl2.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = decl2.element;
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:738:9: decl5= voidInterfaceMethodDeclaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_voidInterfaceMethodDeclaration_in_interfaceMemberDecl2772);
                    decl5=voidInterfaceMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, decl5.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = decl5.element;
                    }

                    }
                    break;
                case 4 :
                    // JavaP.g:739:9: decl3= interfaceDeclaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_interfaceDeclaration_in_interfaceMemberDecl2786);
                    decl3=interfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, decl3.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = decl3.element; addNonTopLevelObjectInheritance(decl3.element);
                    }

                    }
                    break;
                case 5 :
                    // JavaP.g:740:9: decl4= classDeclaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_classDeclaration_in_interfaceMemberDecl2800);
                    decl4=classDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, decl4.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = decl4.element;  addNonTopLevelObjectInheritance(decl4.element);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, interfaceMemberDecl_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interfaceMemberDecl"

    public static class voidInterfaceMethodDeclaration_return extends ParserRuleReturnScope {
        public Method element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "voidInterfaceMethodDeclaration"
    // JavaP.g:743:1: voidInterfaceMethodDeclaration returns [Method element] : vt= voidType methodname= identifierRule voidInterfaceMethodDeclaratorRest ;
    public final AspectJLo_JavaP.voidInterfaceMethodDeclaration_return voidInterfaceMethodDeclaration() throws RecognitionException {
        MethodScope_stack.push(new MethodScope_scope());

        AspectJLo_JavaP.voidInterfaceMethodDeclaration_return retval = new AspectJLo_JavaP.voidInterfaceMethodDeclaration_return();
        retval.start = input.LT(1);
        int voidInterfaceMethodDeclaration_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.voidType_return vt = null;

        AspectJLoParser.identifierRule_return methodname = null;

        AspectJLo_JavaP.voidInterfaceMethodDeclaratorRest_return voidInterfaceMethodDeclaratorRest39 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return retval; }
            // JavaP.g:745:6: (vt= voidType methodname= identifierRule voidInterfaceMethodDeclaratorRest )
            // JavaP.g:745:8: vt= voidType methodname= identifierRule voidInterfaceMethodDeclaratorRest
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_voidType_in_voidInterfaceMethodDeclaration2836);
            vt=voidType();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, vt.getTree());
            pushFollow(FOLLOW_identifierRule_in_voidInterfaceMethodDeclaration2840);
            methodname=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, methodname.getTree());
            if ( state.backtracking==0 ) {
              retval.element = createNormalMethod(new SimpleNameDeclarationWithParametersHeader((methodname!=null?input.toString(methodname.start,methodname.stop):null)), vt.element); 
                  	   ((MethodScope_scope)MethodScope_stack.peek()).method = retval.element;
                  	   setName(retval.element,methodname.start);
                  	   
            }
            pushFollow(FOLLOW_voidInterfaceMethodDeclaratorRest_in_voidInterfaceMethodDeclaration2852);
            voidInterfaceMethodDeclaratorRest39=voidInterfaceMethodDeclaratorRest();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, voidInterfaceMethodDeclaratorRest39.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, voidInterfaceMethodDeclaration_StartIndex); }
            MethodScope_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "voidInterfaceMethodDeclaration"

    public static class interfaceMethodOrFieldDecl_return extends ParserRuleReturnScope {
        public TypeElement element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interfaceMethodOrFieldDecl"
    // JavaP.g:752:1: interfaceMethodOrFieldDecl returns [TypeElement element] : (cst= interfaceConstant | m= interfaceMethod );
    public final AspectJLo_JavaP.interfaceMethodOrFieldDecl_return interfaceMethodOrFieldDecl() throws RecognitionException {
        AspectJLo_JavaP.interfaceMethodOrFieldDecl_return retval = new AspectJLo_JavaP.interfaceMethodOrFieldDecl_return();
        retval.start = input.LT(1);
        int interfaceMethodOrFieldDecl_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.interfaceConstant_return cst = null;

        AspectJLo_JavaP.interfaceMethod_return m = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return retval; }
            // JavaP.g:753:5: (cst= interfaceConstant | m= interfaceMethod )
            int alt46=2;
            alt46 = dfa46.predict(input);
            switch (alt46) {
                case 1 :
                    // JavaP.g:753:9: cst= interfaceConstant
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_interfaceConstant_in_interfaceMethodOrFieldDecl2886);
                    cst=interfaceConstant();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, cst.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = cst.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:754:9: m= interfaceMethod
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_interfaceMethod_in_interfaceMethodOrFieldDecl2900);
                    m=interfaceMethod();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, m.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = m.element;
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, interfaceMethodOrFieldDecl_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interfaceMethodOrFieldDecl"

    public static class interfaceConstant_return extends ParserRuleReturnScope {
        public MemberVariableDeclarator element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interfaceConstant"
    // JavaP.g:758:1: interfaceConstant returns [MemberVariableDeclarator element] : ref= type decl= constantDeclarator ( ',' dec= constantDeclarator )* ';' ;
    public final AspectJLo_JavaP.interfaceConstant_return interfaceConstant() throws RecognitionException {
        AspectJLo_JavaP.interfaceConstant_return retval = new AspectJLo_JavaP.interfaceConstant_return();
        retval.start = input.LT(1);
        int interfaceConstant_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal40=null;
        Token char_literal41=null;
        AspectJLo_JavaP.type_return ref = null;

        AspectJLo_JavaP.constantDeclarator_return decl = null;

        AspectJLo_JavaP.constantDeclarator_return dec = null;


        Object char_literal40_tree=null;
        Object char_literal41_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return retval; }
            // JavaP.g:759:5: (ref= type decl= constantDeclarator ( ',' dec= constantDeclarator )* ';' )
            // JavaP.g:759:9: ref= type decl= constantDeclarator ( ',' dec= constantDeclarator )* ';'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_in_interfaceConstant2936);
            ref=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ref.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new MemberVariableDeclarator(ref.element);
            }
            pushFollow(FOLLOW_constantDeclarator_in_interfaceConstant2942);
            decl=constantDeclarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, decl.getTree());
            if ( state.backtracking==0 ) {
              retval.element.add(decl.element);
            }
            // JavaP.g:759:139: ( ',' dec= constantDeclarator )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==47) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // JavaP.g:759:140: ',' dec= constantDeclarator
            	    {
            	    char_literal40=(Token)match(input,47,FOLLOW_47_in_interfaceConstant2946); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal40_tree = (Object)adaptor.create(char_literal40);
            	    adaptor.addChild(root_0, char_literal40_tree);
            	    }
            	    pushFollow(FOLLOW_constantDeclarator_in_interfaceConstant2950);
            	    dec=constantDeclarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, dec.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.add(dec.element);
            	    }

            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            char_literal41=(Token)match(input,32,FOLLOW_32_in_interfaceConstant2956); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal41_tree = (Object)adaptor.create(char_literal41);
            adaptor.addChild(root_0, char_literal41_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, interfaceConstant_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interfaceConstant"

    public static class interfaceMethod_return extends ParserRuleReturnScope {
        public Method element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interfaceMethod"
    // JavaP.g:762:1: interfaceMethod returns [Method element] : tref= type methodname= identifierRule interfaceMethodDeclaratorRest ;
    public final AspectJLo_JavaP.interfaceMethod_return interfaceMethod() throws RecognitionException {
        MethodScope_stack.push(new MethodScope_scope());

        AspectJLo_JavaP.interfaceMethod_return retval = new AspectJLo_JavaP.interfaceMethod_return();
        retval.start = input.LT(1);
        int interfaceMethod_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.type_return tref = null;

        AspectJLoParser.identifierRule_return methodname = null;

        AspectJLo_JavaP.interfaceMethodDeclaratorRest_return interfaceMethodDeclaratorRest42 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return retval; }
            // JavaP.g:764:2: (tref= type methodname= identifierRule interfaceMethodDeclaratorRest )
            // JavaP.g:764:4: tref= type methodname= identifierRule interfaceMethodDeclaratorRest
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_type_in_interfaceMethod2981);
            tref=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, tref.getTree());
            pushFollow(FOLLOW_identifierRule_in_interfaceMethod2985);
            methodname=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, methodname.getTree());
            if ( state.backtracking==0 ) {
              retval.element = createNormalMethod(new SimpleNameDeclarationWithParametersHeader((methodname!=null?input.toString(methodname.start,methodname.stop):null)), tref.element); 
              	    ((MethodScope_scope)MethodScope_stack.peek()).method = retval.element;
              	    setName(retval.element,methodname.start);
              	   
            }
            pushFollow(FOLLOW_interfaceMethodDeclaratorRest_in_interfaceMethod2999);
            interfaceMethodDeclaratorRest42=interfaceMethodDeclaratorRest();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interfaceMethodDeclaratorRest42.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, interfaceMethod_StartIndex); }
            MethodScope_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "interfaceMethod"

    public static class methodDeclaratorRest_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "methodDeclaratorRest"
    // JavaP.g:773:1: methodDeclaratorRest : pars= formalParameters ( '[' ']' )* (thrkw= 'throws' names= qualifiedNameList )? (body= methodBody | ';' ) ;
    public final AspectJLo_JavaP.methodDeclaratorRest_return methodDeclaratorRest() throws RecognitionException {
        AspectJLo_JavaP.methodDeclaratorRest_return retval = new AspectJLo_JavaP.methodDeclaratorRest_return();
        retval.start = input.LT(1);
        int methodDeclaratorRest_StartIndex = input.index();
        Object root_0 = null;

        Token thrkw=null;
        Token char_literal43=null;
        Token char_literal44=null;
        Token char_literal45=null;
        AspectJLo_JavaP.formalParameters_return pars = null;

        AspectJLo_JavaP.qualifiedNameList_return names = null;

        AspectJLo_JavaP.methodBody_return body = null;


        Object thrkw_tree=null;
        Object char_literal43_tree=null;
        Object char_literal44_tree=null;
        Object char_literal45_tree=null;

        int count = 0;
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return retval; }
            // JavaP.g:775:5: (pars= formalParameters ( '[' ']' )* (thrkw= 'throws' names= qualifiedNameList )? (body= methodBody | ';' ) )
            // JavaP.g:775:9: pars= formalParameters ( '[' ']' )* (thrkw= 'throws' names= qualifiedNameList )? (body= methodBody | ';' )
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_formalParameters_in_methodDeclaratorRest3026);
            pars=formalParameters();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, pars.getTree());
            if ( state.backtracking==0 ) {
              for(FormalParameter par: pars.element){
                             ((MethodScope_scope)MethodScope_stack.peek()).method.header().addFormalParameter(par);
                          }
                         
            }
            // JavaP.g:780:9: ( '[' ']' )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==54) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // JavaP.g:780:10: '[' ']'
            	    {
            	    char_literal43=(Token)match(input,54,FOLLOW_54_in_methodDeclaratorRest3052); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal43_tree = (Object)adaptor.create(char_literal43);
            	    adaptor.addChild(root_0, char_literal43_tree);
            	    }
            	    char_literal44=(Token)match(input,55,FOLLOW_55_in_methodDeclaratorRest3054); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal44_tree = (Object)adaptor.create(char_literal44);
            	    adaptor.addChild(root_0, char_literal44_tree);
            	    }
            	    if ( state.backtracking==0 ) {
            	      count++;
            	    }

            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            if ( state.backtracking==0 ) {
              if(count > 0) {
                         JavaTypeReference original = (JavaTypeReference)((MethodScope_scope)MethodScope_stack.peek()).method.returnTypeReference();
                         ((MethodScope_scope)MethodScope_stack.peek()).method.setReturnTypeReference(new ArrayTypeReference(original,count));
                       }
                      
            }
            // JavaP.g:786:9: (thrkw= 'throws' names= qualifiedNameList )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==56) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // JavaP.g:786:10: thrkw= 'throws' names= qualifiedNameList
                    {
                    thrkw=(Token)match(input,56,FOLLOW_56_in_methodDeclaratorRest3082); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    thrkw_tree = (Object)adaptor.create(thrkw);
                    adaptor.addChild(root_0, thrkw_tree);
                    }
                    pushFollow(FOLLOW_qualifiedNameList_in_methodDeclaratorRest3086);
                    names=qualifiedNameList();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, names.getTree());
                    if ( state.backtracking==0 ) {
                       ExceptionClause clause = new ExceptionClause(); for(String name: names.element){clause.add(new TypeExceptionDeclaration(typeRef(name)));((MethodScope_scope)MethodScope_stack.peek()).method.setExceptionClause(clause);}
                    }

                    }
                    break;

            }

            // JavaP.g:787:9: (body= methodBody | ';' )
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==50) ) {
                alt50=1;
            }
            else if ( (LA50_0==32) ) {
                alt50=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;
            }
            switch (alt50) {
                case 1 :
                    // JavaP.g:787:13: body= methodBody
                    {
                    pushFollow(FOLLOW_methodBody_in_methodDeclaratorRest3106);
                    body=methodBody();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, body.getTree());
                    if ( state.backtracking==0 ) {
                      ((MethodScope_scope)MethodScope_stack.peek()).method.setImplementation(new RegularImplementation(body.element));
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:788:13: ';'
                    {
                    char_literal45=(Token)match(input,32,FOLLOW_32_in_methodDeclaratorRest3122); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal45_tree = (Object)adaptor.create(char_literal45);
                    adaptor.addChild(root_0, char_literal45_tree);
                    }
                    if ( state.backtracking==0 ) {
                      ((MethodScope_scope)MethodScope_stack.peek()).method.setImplementation(null);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              setKeyword(((MethodScope_scope)MethodScope_stack.peek()).method,thrkw);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, methodDeclaratorRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "methodDeclaratorRest"

    public static class voidMethodDeclaratorRest_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "voidMethodDeclaratorRest"
    // JavaP.g:793:1: voidMethodDeclaratorRest : pars= formalParameters (thrkw= 'throws' names= qualifiedNameList )? (body= methodBody | ';' ) ;
    public final AspectJLo_JavaP.voidMethodDeclaratorRest_return voidMethodDeclaratorRest() throws RecognitionException {
        AspectJLo_JavaP.voidMethodDeclaratorRest_return retval = new AspectJLo_JavaP.voidMethodDeclaratorRest_return();
        retval.start = input.LT(1);
        int voidMethodDeclaratorRest_StartIndex = input.index();
        Object root_0 = null;

        Token thrkw=null;
        Token char_literal46=null;
        AspectJLo_JavaP.formalParameters_return pars = null;

        AspectJLo_JavaP.qualifiedNameList_return names = null;

        AspectJLo_JavaP.methodBody_return body = null;


        Object thrkw_tree=null;
        Object char_literal46_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return retval; }
            // JavaP.g:794:5: (pars= formalParameters (thrkw= 'throws' names= qualifiedNameList )? (body= methodBody | ';' ) )
            // JavaP.g:794:9: pars= formalParameters (thrkw= 'throws' names= qualifiedNameList )? (body= methodBody | ';' )
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_formalParameters_in_voidMethodDeclaratorRest3169);
            pars=formalParameters();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, pars.getTree());
            if ( state.backtracking==0 ) {
              for(FormalParameter par: pars.element){((MethodScope_scope)MethodScope_stack.peek()).method.header().addFormalParameter(par);}
            }
            // JavaP.g:795:10: (thrkw= 'throws' names= qualifiedNameList )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==56) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // JavaP.g:795:11: thrkw= 'throws' names= qualifiedNameList
                    {
                    thrkw=(Token)match(input,56,FOLLOW_56_in_voidMethodDeclaratorRest3185); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    thrkw_tree = (Object)adaptor.create(thrkw);
                    adaptor.addChild(root_0, thrkw_tree);
                    }
                    pushFollow(FOLLOW_qualifiedNameList_in_voidMethodDeclaratorRest3189);
                    names=qualifiedNameList();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, names.getTree());
                    if ( state.backtracking==0 ) {
                       ExceptionClause clause = new ExceptionClause(); for(String name: names.element){clause.add(new TypeExceptionDeclaration(typeRef(name)));((MethodScope_scope)MethodScope_stack.peek()).method.setExceptionClause(clause);}
                    }

                    }
                    break;

            }

            // JavaP.g:796:9: (body= methodBody | ';' )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==50) ) {
                alt52=1;
            }
            else if ( (LA52_0==32) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }
            switch (alt52) {
                case 1 :
                    // JavaP.g:796:13: body= methodBody
                    {
                    pushFollow(FOLLOW_methodBody_in_voidMethodDeclaratorRest3209);
                    body=methodBody();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, body.getTree());
                    if ( state.backtracking==0 ) {
                      ((MethodScope_scope)MethodScope_stack.peek()).method.setImplementation(new RegularImplementation(body.element));
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:797:13: ';'
                    {
                    char_literal46=(Token)match(input,32,FOLLOW_32_in_voidMethodDeclaratorRest3225); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal46_tree = (Object)adaptor.create(char_literal46);
                    adaptor.addChild(root_0, char_literal46_tree);
                    }
                    if ( state.backtracking==0 ) {
                      ((MethodScope_scope)MethodScope_stack.peek()).method.setImplementation(null);
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              setKeyword(((MethodScope_scope)MethodScope_stack.peek()).method,thrkw);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, voidMethodDeclaratorRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "voidMethodDeclaratorRest"

    public static class interfaceMethodDeclaratorRest_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interfaceMethodDeclaratorRest"
    // JavaP.g:802:1: interfaceMethodDeclaratorRest : pars= formalParameters ( '[' ']' )* (thrkw= 'throws' names= qualifiedNameList )? ';' ;
    public final AspectJLo_JavaP.interfaceMethodDeclaratorRest_return interfaceMethodDeclaratorRest() throws RecognitionException {
        AspectJLo_JavaP.interfaceMethodDeclaratorRest_return retval = new AspectJLo_JavaP.interfaceMethodDeclaratorRest_return();
        retval.start = input.LT(1);
        int interfaceMethodDeclaratorRest_StartIndex = input.index();
        Object root_0 = null;

        Token thrkw=null;
        Token char_literal47=null;
        Token char_literal48=null;
        Token char_literal49=null;
        AspectJLo_JavaP.formalParameters_return pars = null;

        AspectJLo_JavaP.qualifiedNameList_return names = null;


        Object thrkw_tree=null;
        Object char_literal47_tree=null;
        Object char_literal48_tree=null;
        Object char_literal49_tree=null;

        int count = 0;
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return retval; }
            // JavaP.g:804:5: (pars= formalParameters ( '[' ']' )* (thrkw= 'throws' names= qualifiedNameList )? ';' )
            // JavaP.g:804:9: pars= formalParameters ( '[' ']' )* (thrkw= 'throws' names= qualifiedNameList )? ';'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_formalParameters_in_interfaceMethodDeclaratorRest3276);
            pars=formalParameters();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, pars.getTree());
            if ( state.backtracking==0 ) {
              for(FormalParameter par: pars.element){((MethodScope_scope)MethodScope_stack.peek()).method.header().addFormalParameter(par);}
            }
            // JavaP.g:805:8: ( '[' ']' )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==54) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // JavaP.g:805:9: '[' ']'
            	    {
            	    char_literal47=(Token)match(input,54,FOLLOW_54_in_interfaceMethodDeclaratorRest3288); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal47_tree = (Object)adaptor.create(char_literal47);
            	    adaptor.addChild(root_0, char_literal47_tree);
            	    }
            	    char_literal48=(Token)match(input,55,FOLLOW_55_in_interfaceMethodDeclaratorRest3290); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal48_tree = (Object)adaptor.create(char_literal48);
            	    adaptor.addChild(root_0, char_literal48_tree);
            	    }
            	    if ( state.backtracking==0 ) {
            	      count++;
            	    }

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
              if(count > 0) {
                        JavaTypeReference original = (JavaTypeReference)((MethodScope_scope)MethodScope_stack.peek()).method.returnTypeReference();
                        ((MethodScope_scope)MethodScope_stack.peek()).method.setReturnTypeReference(new ArrayTypeReference(original,count));
                      }
                     
            }
            // JavaP.g:811:9: (thrkw= 'throws' names= qualifiedNameList )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==56) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // JavaP.g:811:10: thrkw= 'throws' names= qualifiedNameList
                    {
                    thrkw=(Token)match(input,56,FOLLOW_56_in_interfaceMethodDeclaratorRest3317); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    thrkw_tree = (Object)adaptor.create(thrkw);
                    adaptor.addChild(root_0, thrkw_tree);
                    }
                    pushFollow(FOLLOW_qualifiedNameList_in_interfaceMethodDeclaratorRest3321);
                    names=qualifiedNameList();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, names.getTree());
                    if ( state.backtracking==0 ) {
                       ExceptionClause clause = new ExceptionClause(); for(String name: names.element){clause.add(new TypeExceptionDeclaration(typeRef(name)));((MethodScope_scope)MethodScope_stack.peek()).method.setExceptionClause(clause);}
                    }

                    }
                    break;

            }

            char_literal49=(Token)match(input,32,FOLLOW_32_in_interfaceMethodDeclaratorRest3327); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal49_tree = (Object)adaptor.create(char_literal49);
            adaptor.addChild(root_0, char_literal49_tree);
            }
            if ( state.backtracking==0 ) {
              setKeyword(((MethodScope_scope)MethodScope_stack.peek()).method,thrkw);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, interfaceMethodDeclaratorRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interfaceMethodDeclaratorRest"

    public static class interfaceGenericMethodDecl_return extends ParserRuleReturnScope {
        public TypeElement element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "interfaceGenericMethodDecl"
    // JavaP.g:815:1: interfaceGenericMethodDecl returns [TypeElement element] : typeParameters ( type | 'void' ) identifierRule interfaceMethodDeclaratorRest ;
    public final AspectJLo_JavaP.interfaceGenericMethodDecl_return interfaceGenericMethodDecl() throws RecognitionException {
        AspectJLo_JavaP.interfaceGenericMethodDecl_return retval = new AspectJLo_JavaP.interfaceGenericMethodDecl_return();
        retval.start = input.LT(1);
        int interfaceGenericMethodDecl_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal52=null;
        AspectJLo_JavaP.typeParameters_return typeParameters50 = null;

        AspectJLo_JavaP.type_return type51 = null;

        AspectJLoParser.identifierRule_return identifierRule53 = null;

        AspectJLo_JavaP.interfaceMethodDeclaratorRest_return interfaceMethodDeclaratorRest54 = null;


        Object string_literal52_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return retval; }
            // JavaP.g:816:5: ( typeParameters ( type | 'void' ) identifierRule interfaceMethodDeclaratorRest )
            // JavaP.g:816:9: typeParameters ( type | 'void' ) identifierRule interfaceMethodDeclaratorRest
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_typeParameters_in_interfaceGenericMethodDecl3363);
            typeParameters50=typeParameters();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, typeParameters50.getTree());
            // JavaP.g:816:24: ( type | 'void' )
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==Identifier||(LA55_0>=Export && LA55_0<=Overrides)||(LA55_0>=62 && LA55_0<=69)) ) {
                alt55=1;
            }
            else if ( (LA55_0==53) ) {
                alt55=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 55, 0, input);

                throw nvae;
            }
            switch (alt55) {
                case 1 :
                    // JavaP.g:816:25: type
                    {
                    pushFollow(FOLLOW_type_in_interfaceGenericMethodDecl3366);
                    type51=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, type51.getTree());

                    }
                    break;
                case 2 :
                    // JavaP.g:816:32: 'void'
                    {
                    string_literal52=(Token)match(input,53,FOLLOW_53_in_interfaceGenericMethodDecl3370); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal52_tree = (Object)adaptor.create(string_literal52);
                    adaptor.addChild(root_0, string_literal52_tree);
                    }

                    }
                    break;

            }

            pushFollow(FOLLOW_identifierRule_in_interfaceGenericMethodDecl3373);
            identifierRule53=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifierRule53.getTree());
            pushFollow(FOLLOW_interfaceMethodDeclaratorRest_in_interfaceGenericMethodDecl3383);
            interfaceMethodDeclaratorRest54=interfaceMethodDeclaratorRest();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, interfaceMethodDeclaratorRest54.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, interfaceGenericMethodDecl_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "interfaceGenericMethodDecl"

    public static class voidInterfaceMethodDeclaratorRest_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "voidInterfaceMethodDeclaratorRest"
    // JavaP.g:820:1: voidInterfaceMethodDeclaratorRest : pars= formalParameters ( 'throws' names= qualifiedNameList )? ';' ;
    public final AspectJLo_JavaP.voidInterfaceMethodDeclaratorRest_return voidInterfaceMethodDeclaratorRest() throws RecognitionException {
        AspectJLo_JavaP.voidInterfaceMethodDeclaratorRest_return retval = new AspectJLo_JavaP.voidInterfaceMethodDeclaratorRest_return();
        retval.start = input.LT(1);
        int voidInterfaceMethodDeclaratorRest_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal55=null;
        Token char_literal56=null;
        AspectJLo_JavaP.formalParameters_return pars = null;

        AspectJLo_JavaP.qualifiedNameList_return names = null;


        Object string_literal55_tree=null;
        Object char_literal56_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return retval; }
            // JavaP.g:821:5: (pars= formalParameters ( 'throws' names= qualifiedNameList )? ';' )
            // JavaP.g:821:9: pars= formalParameters ( 'throws' names= qualifiedNameList )? ';'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_formalParameters_in_voidInterfaceMethodDeclaratorRest3408);
            pars=formalParameters();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, pars.getTree());
            if ( state.backtracking==0 ) {
              for(FormalParameter par: pars.element){((MethodScope_scope)MethodScope_stack.peek()).method.header().addFormalParameter(par);}
            }
            // JavaP.g:822:6: ( 'throws' names= qualifiedNameList )?
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==56) ) {
                alt56=1;
            }
            switch (alt56) {
                case 1 :
                    // JavaP.g:822:7: 'throws' names= qualifiedNameList
                    {
                    string_literal55=(Token)match(input,56,FOLLOW_56_in_voidInterfaceMethodDeclaratorRest3418); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal55_tree = (Object)adaptor.create(string_literal55);
                    adaptor.addChild(root_0, string_literal55_tree);
                    }
                    pushFollow(FOLLOW_qualifiedNameList_in_voidInterfaceMethodDeclaratorRest3422);
                    names=qualifiedNameList();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, names.getTree());
                    if ( state.backtracking==0 ) {
                       ExceptionClause clause = new ExceptionClause(); for(String name: names.element){clause.add(new TypeExceptionDeclaration(typeRef(name)));((MethodScope_scope)MethodScope_stack.peek()).method.setExceptionClause(clause);}
                    }

                    }
                    break;

            }

            char_literal56=(Token)match(input,32,FOLLOW_32_in_voidInterfaceMethodDeclaratorRest3434); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal56_tree = (Object)adaptor.create(char_literal56);
            adaptor.addChild(root_0, char_literal56_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, voidInterfaceMethodDeclaratorRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "voidInterfaceMethodDeclaratorRest"

    public static class constructorDeclaratorRest_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constructorDeclaratorRest"
    // JavaP.g:826:1: constructorDeclaratorRest : pars= formalParameters ( 'throws' names= qualifiedNameList )? body= constructorBody ;
    public final AspectJLo_JavaP.constructorDeclaratorRest_return constructorDeclaratorRest() throws RecognitionException {
        AspectJLo_JavaP.constructorDeclaratorRest_return retval = new AspectJLo_JavaP.constructorDeclaratorRest_return();
        retval.start = input.LT(1);
        int constructorDeclaratorRest_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal57=null;
        AspectJLo_JavaP.formalParameters_return pars = null;

        AspectJLo_JavaP.qualifiedNameList_return names = null;

        AspectJLo_JavaP.constructorBody_return body = null;


        Object string_literal57_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return retval; }
            // JavaP.g:827:5: (pars= formalParameters ( 'throws' names= qualifiedNameList )? body= constructorBody )
            // JavaP.g:827:9: pars= formalParameters ( 'throws' names= qualifiedNameList )? body= constructorBody
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_formalParameters_in_constructorDeclaratorRest3459);
            pars=formalParameters();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, pars.getTree());
            if ( state.backtracking==0 ) {
              for(FormalParameter par: pars.element){((MethodScope_scope)MethodScope_stack.peek()).method.header().addFormalParameter(par);}
            }
            // JavaP.g:828:5: ( 'throws' names= qualifiedNameList )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==56) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // JavaP.g:828:6: 'throws' names= qualifiedNameList
                    {
                    string_literal57=(Token)match(input,56,FOLLOW_56_in_constructorDeclaratorRest3469); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal57_tree = (Object)adaptor.create(string_literal57);
                    adaptor.addChild(root_0, string_literal57_tree);
                    }
                    pushFollow(FOLLOW_qualifiedNameList_in_constructorDeclaratorRest3473);
                    names=qualifiedNameList();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, names.getTree());
                    if ( state.backtracking==0 ) {
                       ExceptionClause clause = new ExceptionClause(); for(String name: names.element){clause.add(new TypeExceptionDeclaration(typeRef(name)));((MethodScope_scope)MethodScope_stack.peek()).method.setExceptionClause(clause);}
                    }

                    }
                    break;

            }

            pushFollow(FOLLOW_constructorBody_in_constructorDeclaratorRest3486);
            body=constructorBody();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, body.getTree());
            if ( state.backtracking==0 ) {
              ((MethodScope_scope)MethodScope_stack.peek()).method.setImplementation(new RegularImplementation(body.element));
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, constructorDeclaratorRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constructorDeclaratorRest"

    public static class constantDeclarator_return extends ParserRuleReturnScope {
        public JavaVariableDeclaration element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constantDeclarator"
    // JavaP.g:832:1: constantDeclarator returns [JavaVariableDeclaration element] : name= identifierRule ( ( '[' ']' )* '=' init= variableInitializer ) ;
    public final AspectJLo_JavaP.constantDeclarator_return constantDeclarator() throws RecognitionException {
        AspectJLo_JavaP.constantDeclarator_return retval = new AspectJLo_JavaP.constantDeclarator_return();
        retval.start = input.LT(1);
        int constantDeclarator_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal58=null;
        Token char_literal59=null;
        Token char_literal60=null;
        AspectJLoParser.identifierRule_return name = null;

        AspectJLo_JavaP.variableInitializer_return init = null;


        Object char_literal58_tree=null;
        Object char_literal59_tree=null;
        Object char_literal60_tree=null;

        int count = 0;
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return retval; }
            // JavaP.g:835:5: (name= identifierRule ( ( '[' ']' )* '=' init= variableInitializer ) )
            // JavaP.g:835:9: name= identifierRule ( ( '[' ']' )* '=' init= variableInitializer )
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifierRule_in_constantDeclarator3521);
            name=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            // JavaP.g:835:29: ( ( '[' ']' )* '=' init= variableInitializer )
            // JavaP.g:835:30: ( '[' ']' )* '=' init= variableInitializer
            {
            // JavaP.g:835:30: ( '[' ']' )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==54) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // JavaP.g:835:31: '[' ']'
            	    {
            	    char_literal58=(Token)match(input,54,FOLLOW_54_in_constantDeclarator3525); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal58_tree = (Object)adaptor.create(char_literal58);
            	    adaptor.addChild(root_0, char_literal58_tree);
            	    }
            	    char_literal59=(Token)match(input,55,FOLLOW_55_in_constantDeclarator3527); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal59_tree = (Object)adaptor.create(char_literal59);
            	    adaptor.addChild(root_0, char_literal59_tree);
            	    }
            	    if ( state.backtracking==0 ) {
            	      count++;
            	    }

            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            char_literal60=(Token)match(input,57,FOLLOW_57_in_constantDeclarator3533); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal60_tree = (Object)adaptor.create(char_literal60);
            adaptor.addChild(root_0, char_literal60_tree);
            }
            pushFollow(FOLLOW_variableInitializer_in_constantDeclarator3537);
            init=variableInitializer();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, init.getTree());

            }

            if ( state.backtracking==0 ) {
              retval.element = new JavaVariableDeclaration((name!=null?input.toString(name.start,name.stop):null));
                      retval.element.setArrayDimension(count); 
                      retval.element.setInitialization(init.element);
                      setName(retval.element, name.start);
                      
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              setLocation(retval.element, (CommonToken)retval.start, (CommonToken)retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, constantDeclarator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constantDeclarator"

    public static class variableDeclarators_return extends ParserRuleReturnScope {
        public List<VariableDeclaration> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "variableDeclarators"
    // JavaP.g:843:1: variableDeclarators returns [List<VariableDeclaration> element] : decl= variableDeclarator ( ',' decll= variableDeclarator )* ;
    public final AspectJLo_JavaP.variableDeclarators_return variableDeclarators() throws RecognitionException {
        AspectJLo_JavaP.variableDeclarators_return retval = new AspectJLo_JavaP.variableDeclarators_return();
        retval.start = input.LT(1);
        int variableDeclarators_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal61=null;
        AspectJLo_JavaP.variableDeclarator_return decl = null;

        AspectJLo_JavaP.variableDeclarator_return decll = null;


        Object char_literal61_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return retval; }
            // JavaP.g:844:5: (decl= variableDeclarator ( ',' decll= variableDeclarator )* )
            // JavaP.g:844:9: decl= variableDeclarator ( ',' decll= variableDeclarator )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_variableDeclarator_in_variableDeclarators3577);
            decl=variableDeclarator();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, decl.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new ArrayList<VariableDeclaration>(); retval.element.add(decl.element);
            }
            // JavaP.g:844:123: ( ',' decll= variableDeclarator )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==47) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // JavaP.g:844:124: ',' decll= variableDeclarator
            	    {
            	    char_literal61=(Token)match(input,47,FOLLOW_47_in_variableDeclarators3581); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal61_tree = (Object)adaptor.create(char_literal61);
            	    adaptor.addChild(root_0, char_literal61_tree);
            	    }
            	    pushFollow(FOLLOW_variableDeclarator_in_variableDeclarators3585);
            	    decll=variableDeclarator();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, decll.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.add(decll.element);
            	    }

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, variableDeclarators_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "variableDeclarators"

    public static class variableDeclarator_return extends ParserRuleReturnScope {
        public JavaVariableDeclaration element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "variableDeclarator"
    // JavaP.g:847:1: variableDeclarator returns [JavaVariableDeclaration element] : id= variableDeclaratorId ( '=' init= variableInitializer )? ;
    public final AspectJLo_JavaP.variableDeclarator_return variableDeclarator() throws RecognitionException {
        AspectJLo_JavaP.variableDeclarator_return retval = new AspectJLo_JavaP.variableDeclarator_return();
        retval.start = input.LT(1);
        int variableDeclarator_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal62=null;
        AspectJLo_JavaP.variableDeclaratorId_return id = null;

        AspectJLo_JavaP.variableInitializer_return init = null;


        Object char_literal62_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return retval; }
            // JavaP.g:849:5: (id= variableDeclaratorId ( '=' init= variableInitializer )? )
            // JavaP.g:849:9: id= variableDeclaratorId ( '=' init= variableInitializer )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_variableDeclaratorId_in_variableDeclarator3618);
            id=variableDeclaratorId();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, id.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new JavaVariableDeclaration(id.element.name()); 
                            retval.element.setArrayDimension(id.element.dimension());
                            setName(retval.element, id.element.nameToken());
                            
            }
            // JavaP.g:853:17: ( '=' init= variableInitializer )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==57) ) {
                alt60=1;
            }
            switch (alt60) {
                case 1 :
                    // JavaP.g:853:18: '=' init= variableInitializer
                    {
                    char_literal62=(Token)match(input,57,FOLLOW_57_in_variableDeclarator3637); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal62_tree = (Object)adaptor.create(char_literal62);
                    adaptor.addChild(root_0, char_literal62_tree);
                    }
                    pushFollow(FOLLOW_variableInitializer_in_variableDeclarator3641);
                    init=variableInitializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, init.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element.setInitialization(init.element);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              setLocation(retval.element, (CommonToken)retval.start, (CommonToken)retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, variableDeclarator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "variableDeclarator"

    public static class variableDeclaratorId_return extends ParserRuleReturnScope {
        public StupidVariableDeclaratorId element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "variableDeclaratorId"
    // JavaP.g:858:1: variableDeclaratorId returns [StupidVariableDeclaratorId element] : name= identifierRule ( '[' ']' )* ;
    public final AspectJLo_JavaP.variableDeclaratorId_return variableDeclaratorId() throws RecognitionException {
        AspectJLo_JavaP.variableDeclaratorId_return retval = new AspectJLo_JavaP.variableDeclaratorId_return();
        retval.start = input.LT(1);
        int variableDeclaratorId_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal63=null;
        Token char_literal64=null;
        AspectJLoParser.identifierRule_return name = null;


        Object char_literal63_tree=null;
        Object char_literal64_tree=null;

        int count = 0;
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return retval; }
            // JavaP.g:860:5: (name= identifierRule ( '[' ']' )* )
            // JavaP.g:860:9: name= identifierRule ( '[' ']' )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifierRule_in_variableDeclaratorId3684);
            name=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            // JavaP.g:860:29: ( '[' ']' )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==54) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // JavaP.g:860:30: '[' ']'
            	    {
            	    char_literal63=(Token)match(input,54,FOLLOW_54_in_variableDeclaratorId3687); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal63_tree = (Object)adaptor.create(char_literal63);
            	    adaptor.addChild(root_0, char_literal63_tree);
            	    }
            	    char_literal64=(Token)match(input,55,FOLLOW_55_in_variableDeclaratorId3689); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal64_tree = (Object)adaptor.create(char_literal64);
            	    adaptor.addChild(root_0, char_literal64_tree);
            	    }
            	    if ( state.backtracking==0 ) {
            	      count++;
            	    }

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               retval.element = new StupidVariableDeclaratorId((name!=null?input.toString(name.start,name.stop):null), count,(CommonToken)name.start);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, variableDeclaratorId_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "variableDeclaratorId"

    public static class variableInitializer_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "variableInitializer"
    // JavaP.g:863:1: variableInitializer returns [Expression element] : (init= arrayInitializer | expr= expression );
    public final AspectJLo_JavaP.variableInitializer_return variableInitializer() throws RecognitionException {
        AspectJLo_JavaP.variableInitializer_return retval = new AspectJLo_JavaP.variableInitializer_return();
        retval.start = input.LT(1);
        int variableInitializer_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.arrayInitializer_return init = null;

        AspectJLoParser.expression_return expr = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return retval; }
            // JavaP.g:864:5: (init= arrayInitializer | expr= expression )
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==50) ) {
                alt62=1;
            }
            else if ( (LA62_0==Identifier||(LA62_0>=FloatingPointLiteral && LA62_0<=DecimalLiteral)||(LA62_0>=Export && LA62_0<=Overrides)||LA62_0==53||(LA62_0>=62 && LA62_0<=69)||(LA62_0>=71 && LA62_0<=72)||(LA62_0>=75 && LA62_0<=78)||(LA62_0>=111 && LA62_0<=112)||(LA62_0>=115 && LA62_0<=120)||(LA62_0>=122 && LA62_0<=125)) ) {
                alt62=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 62, 0, input);

                throw nvae;
            }
            switch (alt62) {
                case 1 :
                    // JavaP.g:864:9: init= arrayInitializer
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_arrayInitializer_in_variableInitializer3720);
                    init=arrayInitializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, init.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = init.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:865:9: expr= expression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_expression_in_variableInitializer3734);
                    expr=gAspectJLo.expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, expr.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = expr.element;
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 53, variableInitializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "variableInitializer"

    public static class arrayInitializer_return extends ParserRuleReturnScope {
        public ArrayInitializer element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "arrayInitializer"
    // JavaP.g:868:1: arrayInitializer returns [ArrayInitializer element] : '{' (init= variableInitializer ( ',' initt= variableInitializer )* ( ',' )? )? '}' ;
    public final AspectJLo_JavaP.arrayInitializer_return arrayInitializer() throws RecognitionException {
        AspectJLo_JavaP.arrayInitializer_return retval = new AspectJLo_JavaP.arrayInitializer_return();
        retval.start = input.LT(1);
        int arrayInitializer_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal65=null;
        Token char_literal66=null;
        Token char_literal67=null;
        Token char_literal68=null;
        AspectJLo_JavaP.variableInitializer_return init = null;

        AspectJLo_JavaP.variableInitializer_return initt = null;


        Object char_literal65_tree=null;
        Object char_literal66_tree=null;
        Object char_literal67_tree=null;
        Object char_literal68_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return retval; }
            // JavaP.g:869:5: ( '{' (init= variableInitializer ( ',' initt= variableInitializer )* ( ',' )? )? '}' )
            // JavaP.g:869:9: '{' (init= variableInitializer ( ',' initt= variableInitializer )* ( ',' )? )? '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal65=(Token)match(input,50,FOLLOW_50_in_arrayInitializer3767); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal65_tree = (Object)adaptor.create(char_literal65);
            adaptor.addChild(root_0, char_literal65_tree);
            }
            if ( state.backtracking==0 ) {
              retval.element = new ArrayInitializer();
            }
            // JavaP.g:869:56: (init= variableInitializer ( ',' initt= variableInitializer )* ( ',' )? )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==Identifier||(LA65_0>=FloatingPointLiteral && LA65_0<=DecimalLiteral)||(LA65_0>=Export && LA65_0<=Overrides)||LA65_0==50||LA65_0==53||(LA65_0>=62 && LA65_0<=69)||(LA65_0>=71 && LA65_0<=72)||(LA65_0>=75 && LA65_0<=78)||(LA65_0>=111 && LA65_0<=112)||(LA65_0>=115 && LA65_0<=120)||(LA65_0>=122 && LA65_0<=125)) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // JavaP.g:869:57: init= variableInitializer ( ',' initt= variableInitializer )* ( ',' )?
                    {
                    pushFollow(FOLLOW_variableInitializer_in_arrayInitializer3774);
                    init=variableInitializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, init.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element.addInitializer(init.element);
                    }
                    // JavaP.g:869:128: ( ',' initt= variableInitializer )*
                    loop63:
                    do {
                        int alt63=2;
                        int LA63_0 = input.LA(1);

                        if ( (LA63_0==47) ) {
                            int LA63_1 = input.LA(2);

                            if ( (LA63_1==Identifier||(LA63_1>=FloatingPointLiteral && LA63_1<=DecimalLiteral)||(LA63_1>=Export && LA63_1<=Overrides)||LA63_1==50||LA63_1==53||(LA63_1>=62 && LA63_1<=69)||(LA63_1>=71 && LA63_1<=72)||(LA63_1>=75 && LA63_1<=78)||(LA63_1>=111 && LA63_1<=112)||(LA63_1>=115 && LA63_1<=120)||(LA63_1>=122 && LA63_1<=125)) ) {
                                alt63=1;
                            }


                        }


                        switch (alt63) {
                    	case 1 :
                    	    // JavaP.g:869:129: ',' initt= variableInitializer
                    	    {
                    	    char_literal66=(Token)match(input,47,FOLLOW_47_in_arrayInitializer3778); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal66_tree = (Object)adaptor.create(char_literal66);
                    	    adaptor.addChild(root_0, char_literal66_tree);
                    	    }
                    	    pushFollow(FOLLOW_variableInitializer_in_arrayInitializer3782);
                    	    initt=variableInitializer();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, initt.getTree());
                    	    if ( state.backtracking==0 ) {
                    	      retval.element.addInitializer(initt.element);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop63;
                        }
                    } while (true);

                    // JavaP.g:869:208: ( ',' )?
                    int alt64=2;
                    int LA64_0 = input.LA(1);

                    if ( (LA64_0==47) ) {
                        alt64=1;
                    }
                    switch (alt64) {
                        case 1 :
                            // JavaP.g:869:209: ','
                            {
                            char_literal67=(Token)match(input,47,FOLLOW_47_in_arrayInitializer3788); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal67_tree = (Object)adaptor.create(char_literal67);
                            adaptor.addChild(root_0, char_literal67_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            char_literal68=(Token)match(input,51,FOLLOW_51_in_arrayInitializer3795); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal68_tree = (Object)adaptor.create(char_literal68);
            adaptor.addChild(root_0, char_literal68_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 54, arrayInitializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "arrayInitializer"

    public static class modifier_return extends ParserRuleReturnScope {
        public Modifier element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "modifier"
    // JavaP.g:872:1: modifier returns [Modifier element] : (mod= classOrInterfaceModifier | 'native' | 'synchronized' | 'transient' | 'volatile' );
    public final AspectJLo_JavaP.modifier_return modifier() throws RecognitionException {
        AspectJLo_JavaP.modifier_return retval = new AspectJLo_JavaP.modifier_return();
        retval.start = input.LT(1);
        int modifier_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal69=null;
        Token string_literal70=null;
        Token string_literal71=null;
        Token string_literal72=null;
        AspectJLo_JavaP.classOrInterfaceModifier_return mod = null;


        Object string_literal69_tree=null;
        Object string_literal70_tree=null;
        Object string_literal71_tree=null;
        Object string_literal72_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return retval; }
            // JavaP.g:878:5: (mod= classOrInterfaceModifier | 'native' | 'synchronized' | 'transient' | 'volatile' )
            int alt66=5;
            switch ( input.LA(1) ) {
            case 34:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 79:
                {
                alt66=1;
                }
                break;
            case 58:
                {
                alt66=2;
                }
                break;
            case 59:
                {
                alt66=3;
                }
                break;
            case 60:
                {
                alt66=4;
                }
                break;
            case 61:
                {
                alt66=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;
            }

            switch (alt66) {
                case 1 :
                    // JavaP.g:878:9: mod= classOrInterfaceModifier
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_classOrInterfaceModifier_in_modifier3826);
                    mod=classOrInterfaceModifier();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, mod.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = mod.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:879:9: 'native'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal69=(Token)match(input,58,FOLLOW_58_in_modifier3838); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal69_tree = (Object)adaptor.create(string_literal69);
                    adaptor.addChild(root_0, string_literal69_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new Native();
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:880:9: 'synchronized'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal70=(Token)match(input,59,FOLLOW_59_in_modifier3850); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal70_tree = (Object)adaptor.create(string_literal70);
                    adaptor.addChild(root_0, string_literal70_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new Synchronized();
                    }

                    }
                    break;
                case 4 :
                    // JavaP.g:881:9: 'transient'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal71=(Token)match(input,60,FOLLOW_60_in_modifier3862); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal71_tree = (Object)adaptor.create(string_literal71);
                    adaptor.addChild(root_0, string_literal71_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new Transient();
                    }

                    }
                    break;
                case 5 :
                    // JavaP.g:882:9: 'volatile'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal72=(Token)match(input,61,FOLLOW_61_in_modifier3874); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal72_tree = (Object)adaptor.create(string_literal72);
                    adaptor.addChild(root_0, string_literal72_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new Volatile();
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              setLocation(retval.element, (CommonToken)retval.start, (CommonToken)retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 55, modifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "modifier"

    public static class enumConstantName_return extends ParserRuleReturnScope {
        public String element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enumConstantName"
    // JavaP.g:885:1: enumConstantName returns [String element] : id= identifierRule ;
    public final AspectJLo_JavaP.enumConstantName_return enumConstantName() throws RecognitionException {
        AspectJLo_JavaP.enumConstantName_return retval = new AspectJLo_JavaP.enumConstantName_return();
        retval.start = input.LT(1);
        int enumConstantName_StartIndex = input.index();
        Object root_0 = null;

        AspectJLoParser.identifierRule_return id = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return retval; }
            // JavaP.g:886:5: (id= identifierRule )
            // JavaP.g:886:9: id= identifierRule
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifierRule_in_enumConstantName3901);
            id=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, id.getTree());
            if ( state.backtracking==0 ) {
              retval.element=(id!=null?input.toString(id.start,id.stop):null);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 56, enumConstantName_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "enumConstantName"

    public static class typeName_return extends ParserRuleReturnScope {
        public String element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeName"
    // JavaP.g:889:1: typeName returns [String element] : name= qualifiedName ;
    public final AspectJLo_JavaP.typeName_return typeName() throws RecognitionException {
        AspectJLo_JavaP.typeName_return retval = new AspectJLo_JavaP.typeName_return();
        retval.start = input.LT(1);
        int typeName_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.qualifiedName_return name = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return retval; }
            // JavaP.g:890:5: (name= qualifiedName )
            // JavaP.g:890:9: name= qualifiedName
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_qualifiedName_in_typeName3928);
            name=qualifiedName();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            if ( state.backtracking==0 ) {
              retval.element=name.element;
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 57, typeName_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "typeName"

    public static class type_return extends ParserRuleReturnScope {
        public JavaTypeReference element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "type"
    // JavaP.g:893:1: type returns [JavaTypeReference element] : (cd= classOrInterfaceType ( '[' ']' )* | pt= primitiveType ( '[' ']' )* );
    public final AspectJLo_JavaP.type_return type() throws RecognitionException {
        AspectJLo_JavaP.type_return retval = new AspectJLo_JavaP.type_return();
        retval.start = input.LT(1);
        int type_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal73=null;
        Token char_literal74=null;
        Token char_literal75=null;
        Token char_literal76=null;
        AspectJLo_JavaP.classOrInterfaceType_return cd = null;

        AspectJLo_JavaP.primitiveType_return pt = null;


        Object char_literal73_tree=null;
        Object char_literal74_tree=null;
        Object char_literal75_tree=null;
        Object char_literal76_tree=null;

        int dimension=0;
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return retval; }
            // JavaP.g:896:2: (cd= classOrInterfaceType ( '[' ']' )* | pt= primitiveType ( '[' ']' )* )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==Identifier||(LA69_0>=Export && LA69_0<=Overrides)) ) {
                alt69=1;
            }
            else if ( ((LA69_0>=62 && LA69_0<=69)) ) {
                alt69=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }
            switch (alt69) {
                case 1 :
                    // JavaP.g:896:4: cd= classOrInterfaceType ( '[' ']' )*
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_classOrInterfaceType_in_type3958);
                    cd=classOrInterfaceType();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, cd.getTree());
                    // JavaP.g:896:28: ( '[' ']' )*
                    loop67:
                    do {
                        int alt67=2;
                        int LA67_0 = input.LA(1);

                        if ( (LA67_0==54) ) {
                            alt67=1;
                        }


                        switch (alt67) {
                    	case 1 :
                    	    // JavaP.g:896:29: '[' ']'
                    	    {
                    	    char_literal73=(Token)match(input,54,FOLLOW_54_in_type3961); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal73_tree = (Object)adaptor.create(char_literal73);
                    	    adaptor.addChild(root_0, char_literal73_tree);
                    	    }
                    	    char_literal74=(Token)match(input,55,FOLLOW_55_in_type3963); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal74_tree = (Object)adaptor.create(char_literal74);
                    	    adaptor.addChild(root_0, char_literal74_tree);
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	      dimension++;
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop67;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      	         retval.element = cd.element.toArray(dimension);
                      	        
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:900:4: pt= primitiveType ( '[' ']' )*
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_primitiveType_in_type3986);
                    pt=primitiveType();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, pt.getTree());
                    // JavaP.g:900:21: ( '[' ']' )*
                    loop68:
                    do {
                        int alt68=2;
                        int LA68_0 = input.LA(1);

                        if ( (LA68_0==54) ) {
                            alt68=1;
                        }


                        switch (alt68) {
                    	case 1 :
                    	    // JavaP.g:900:22: '[' ']'
                    	    {
                    	    char_literal75=(Token)match(input,54,FOLLOW_54_in_type3989); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal75_tree = (Object)adaptor.create(char_literal75);
                    	    adaptor.addChild(root_0, char_literal75_tree);
                    	    }
                    	    char_literal76=(Token)match(input,55,FOLLOW_55_in_type3991); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal76_tree = (Object)adaptor.create(char_literal76);
                    	    adaptor.addChild(root_0, char_literal76_tree);
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	      dimension++;
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop68;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {
                      retval.element = pt.element.toArray(dimension);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              setLocation(retval.element, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 58, type_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "type"

    public static class classOrInterfaceType_return extends ParserRuleReturnScope {
        public JavaTypeReference element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "classOrInterfaceType"
    // JavaP.g:903:1: classOrInterfaceType returns [JavaTypeReference element] : name= identifierRule (args= typeArguments )? ( '.' namex= identifierRule (argsx= typeArguments )? )* ;
    public final AspectJLo_JavaP.classOrInterfaceType_return classOrInterfaceType() throws RecognitionException {
        AspectJLo_JavaP.classOrInterfaceType_return retval = new AspectJLo_JavaP.classOrInterfaceType_return();
        retval.start = input.LT(1);
        int classOrInterfaceType_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal77=null;
        AspectJLoParser.identifierRule_return name = null;

        AspectJLo_JavaP.typeArguments_return args = null;

        AspectJLoParser.identifierRule_return namex = null;

        AspectJLo_JavaP.typeArguments_return argsx = null;


        Object char_literal77_tree=null;

        NamespaceOrTypeReference target = null;
              Token stop = null;
             
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return retval; }
            // JavaP.g:910:2: (name= identifierRule (args= typeArguments )? ( '.' namex= identifierRule (argsx= typeArguments )? )* )
            // JavaP.g:910:4: name= identifierRule (args= typeArguments )? ( '.' namex= identifierRule (argsx= typeArguments )? )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifierRule_in_classOrInterfaceType4020);
            name=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            if ( state.backtracking==0 ) {

              	           retval.element = typeRef((name!=null?input.toString(name.start,name.stop):null)); 
              	           target =  new NamespaceOrTypeReference((name!=null?input.toString(name.start,name.stop):null));
              	           stop=name.start; 
              	          
            }
            // JavaP.g:916:10: (args= typeArguments )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==46) ) {
                int LA70_1 = input.LA(2);

                if ( (LA70_1==Identifier||(LA70_1>=Export && LA70_1<=Overrides)||(LA70_1>=62 && LA70_1<=70)) ) {
                    alt70=1;
                }
            }
            switch (alt70) {
                case 1 :
                    // JavaP.g:916:11: args= typeArguments
                    {
                    pushFollow(FOLLOW_typeArguments_in_classOrInterfaceType4049);
                    args=typeArguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, args.getTree());
                    if ( state.backtracking==0 ) {

                      	           // Add the type arguments
                      	           ((BasicJavaTypeReference)retval.element).addAllArguments(args.element);
                      	           // In this case, we know that the current element must be a type reference,
                      	           // so we set the target to null, and only create type references afterwards.
                      	           target = null;
                      	           stop=args.stop;
                      	          
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              setLocation(retval.element,name.start,stop);
            }
            // JavaP.g:926:10: ( '.' namex= identifierRule (argsx= typeArguments )? )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==35) ) {
                    int LA72_2 = input.LA(2);

                    if ( (LA72_2==Identifier||(LA72_2>=Export && LA72_2<=Overrides)) ) {
                        alt72=1;
                    }


                }


                switch (alt72) {
            	case 1 :
            	    // JavaP.g:926:11: '.' namex= identifierRule (argsx= typeArguments )?
            	    {
            	    char_literal77=(Token)match(input,35,FOLLOW_35_in_classOrInterfaceType4092); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal77_tree = (Object)adaptor.create(char_literal77);
            	    adaptor.addChild(root_0, char_literal77_tree);
            	    }
            	    pushFollow(FOLLOW_identifierRule_in_classOrInterfaceType4096);
            	    namex=gAspectJLo.identifierRule();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, namex.getTree());
            	    if ( state.backtracking==0 ) {

            	      	           if(target != null) {
            	      	             retval.element = createTypeReference(target,(namex!=null?input.toString(namex.start,namex.stop):null));
            	      	             // We must clone the target here, or else it will be removed from the
            	      	             // type reference we just created.
            	      	             target = new NamespaceOrTypeReference(target.clone(),(namex!=null?input.toString(namex.start,namex.stop):null));
            	      	           } else {
            	      	             throw new Error();
            	      	             //retval.element = createTypeReference(retval.element,(namex!=null?input.toString(namex.start,namex.stop):null));
            	      	           }
            	      	           stop=namex.start;
            	      	          
            	    }
            	    // JavaP.g:939:10: (argsx= typeArguments )?
            	    int alt71=2;
            	    int LA71_0 = input.LA(1);

            	    if ( (LA71_0==46) ) {
            	        int LA71_1 = input.LA(2);

            	        if ( (LA71_1==Identifier||(LA71_1>=Export && LA71_1<=Overrides)||(LA71_1>=62 && LA71_1<=70)) ) {
            	            alt71=1;
            	        }
            	    }
            	    switch (alt71) {
            	        case 1 :
            	            // JavaP.g:939:11: argsx= typeArguments
            	            {
            	            pushFollow(FOLLOW_typeArguments_in_classOrInterfaceType4125);
            	            argsx=typeArguments();

            	            state._fsp--;
            	            if (state.failed) return retval;
            	            if ( state.backtracking==0 ) adaptor.addChild(root_0, argsx.getTree());
            	            if ( state.backtracking==0 ) {

            	              	           // Add the type arguments
            	                           ((BasicJavaTypeReference)retval.element).addAllArguments(argsx.element);
            	              	           // In this case, we know that the current element must be a type reference,
            	              	           // so we se the target to the current type reference.
            	              	           target = null;
            	              	           stop = argsx.stop;
            	              	          
            	            }

            	            }
            	            break;

            	    }

            	    if ( state.backtracking==0 ) {
            	      setLocation(retval.element,name.start,stop);
            	    }

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 59, classOrInterfaceType_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "classOrInterfaceType"

    public static class primitiveType_return extends ParserRuleReturnScope {
        public JavaTypeReference element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "primitiveType"
    // JavaP.g:950:1: primitiveType returns [JavaTypeReference element] : ( 'boolean' | 'char' | 'byte' | 'short' | 'int' | 'long' | 'float' | 'double' );
    public final AspectJLo_JavaP.primitiveType_return primitiveType() throws RecognitionException {
        AspectJLo_JavaP.primitiveType_return retval = new AspectJLo_JavaP.primitiveType_return();
        retval.start = input.LT(1);
        int primitiveType_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal78=null;
        Token string_literal79=null;
        Token string_literal80=null;
        Token string_literal81=null;
        Token string_literal82=null;
        Token string_literal83=null;
        Token string_literal84=null;
        Token string_literal85=null;

        Object string_literal78_tree=null;
        Object string_literal79_tree=null;
        Object string_literal80_tree=null;
        Object string_literal81_tree=null;
        Object string_literal82_tree=null;
        Object string_literal83_tree=null;
        Object string_literal84_tree=null;
        Object string_literal85_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return retval; }
            // JavaP.g:952:5: ( 'boolean' | 'char' | 'byte' | 'short' | 'int' | 'long' | 'float' | 'double' )
            int alt73=8;
            switch ( input.LA(1) ) {
            case 62:
                {
                alt73=1;
                }
                break;
            case 63:
                {
                alt73=2;
                }
                break;
            case 64:
                {
                alt73=3;
                }
                break;
            case 65:
                {
                alt73=4;
                }
                break;
            case 66:
                {
                alt73=5;
                }
                break;
            case 67:
                {
                alt73=6;
                }
                break;
            case 68:
                {
                alt73=7;
                }
                break;
            case 69:
                {
                alt73=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 73, 0, input);

                throw nvae;
            }

            switch (alt73) {
                case 1 :
                    // JavaP.g:952:9: 'boolean'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal78=(Token)match(input,62,FOLLOW_62_in_primitiveType4169); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal78_tree = (Object)adaptor.create(string_literal78);
                    adaptor.addChild(root_0, string_literal78_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = typeRef("boolean");
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:953:9: 'char'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal79=(Token)match(input,63,FOLLOW_63_in_primitiveType4181); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal79_tree = (Object)adaptor.create(string_literal79);
                    adaptor.addChild(root_0, string_literal79_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = typeRef("char");
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:954:9: 'byte'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal80=(Token)match(input,64,FOLLOW_64_in_primitiveType4193); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal80_tree = (Object)adaptor.create(string_literal80);
                    adaptor.addChild(root_0, string_literal80_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = typeRef("byte");
                    }

                    }
                    break;
                case 4 :
                    // JavaP.g:955:9: 'short'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal81=(Token)match(input,65,FOLLOW_65_in_primitiveType4205); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal81_tree = (Object)adaptor.create(string_literal81);
                    adaptor.addChild(root_0, string_literal81_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = typeRef("short");
                    }

                    }
                    break;
                case 5 :
                    // JavaP.g:956:9: 'int'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal82=(Token)match(input,66,FOLLOW_66_in_primitiveType4217); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal82_tree = (Object)adaptor.create(string_literal82);
                    adaptor.addChild(root_0, string_literal82_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = typeRef("int");
                    }

                    }
                    break;
                case 6 :
                    // JavaP.g:957:9: 'long'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal83=(Token)match(input,67,FOLLOW_67_in_primitiveType4229); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal83_tree = (Object)adaptor.create(string_literal83);
                    adaptor.addChild(root_0, string_literal83_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = typeRef("long");
                    }

                    }
                    break;
                case 7 :
                    // JavaP.g:958:9: 'float'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal84=(Token)match(input,68,FOLLOW_68_in_primitiveType4241); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal84_tree = (Object)adaptor.create(string_literal84);
                    adaptor.addChild(root_0, string_literal84_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = typeRef("float");
                    }

                    }
                    break;
                case 8 :
                    // JavaP.g:959:9: 'double'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal85=(Token)match(input,69,FOLLOW_69_in_primitiveType4253); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal85_tree = (Object)adaptor.create(string_literal85);
                    adaptor.addChild(root_0, string_literal85_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = typeRef("double");
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              setLocation(retval.element, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 60, primitiveType_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "primitiveType"

    public static class variableModifier_return extends ParserRuleReturnScope {
        public Modifier element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "variableModifier"
    // JavaP.g:962:1: variableModifier returns [Modifier element] : ( 'final' | annotation );
    public final AspectJLo_JavaP.variableModifier_return variableModifier() throws RecognitionException {
        AspectJLo_JavaP.variableModifier_return retval = new AspectJLo_JavaP.variableModifier_return();
        retval.start = input.LT(1);
        int variableModifier_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal86=null;
        AspectJLo_JavaP.annotation_return annotation87 = null;


        Object string_literal86_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return retval; }
            // JavaP.g:963:5: ( 'final' | annotation )
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==41) ) {
                alt74=1;
            }
            else if ( (LA74_0==79) ) {
                alt74=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }
            switch (alt74) {
                case 1 :
                    // JavaP.g:963:9: 'final'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal86=(Token)match(input,41,FOLLOW_41_in_variableModifier4278); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal86_tree = (Object)adaptor.create(string_literal86);
                    adaptor.addChild(root_0, string_literal86_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new Final();
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:964:9: annotation
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_annotation_in_variableModifier4290);
                    annotation87=annotation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, annotation87.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 61, variableModifier_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "variableModifier"

    public static class typeArguments_return extends ParserRuleReturnScope {
        public List<ActualTypeArgument> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeArguments"
    // JavaP.g:967:1: typeArguments returns [List<ActualTypeArgument> element] : '<' arg= typeArgument ( ',' argx= typeArgument )* '>' ;
    public final AspectJLo_JavaP.typeArguments_return typeArguments() throws RecognitionException {
        AspectJLo_JavaP.typeArguments_return retval = new AspectJLo_JavaP.typeArguments_return();
        retval.start = input.LT(1);
        int typeArguments_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal88=null;
        Token char_literal89=null;
        Token char_literal90=null;
        AspectJLo_JavaP.typeArgument_return arg = null;

        AspectJLo_JavaP.typeArgument_return argx = null;


        Object char_literal88_tree=null;
        Object char_literal89_tree=null;
        Object char_literal90_tree=null;

        retval.element = new ArrayList<ActualTypeArgument>();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return retval; }
            // JavaP.g:969:5: ( '<' arg= typeArgument ( ',' argx= typeArgument )* '>' )
            // JavaP.g:969:9: '<' arg= typeArgument ( ',' argx= typeArgument )* '>'
            {
            root_0 = (Object)adaptor.nil();

            char_literal88=(Token)match(input,46,FOLLOW_46_in_typeArguments4317); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal88_tree = (Object)adaptor.create(char_literal88);
            adaptor.addChild(root_0, char_literal88_tree);
            }
            pushFollow(FOLLOW_typeArgument_in_typeArguments4331);
            arg=typeArgument();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, arg.getTree());
            if ( state.backtracking==0 ) {
              retval.element.add(arg.element);
            }
            // JavaP.g:971:9: ( ',' argx= typeArgument )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==47) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // JavaP.g:971:10: ',' argx= typeArgument
            	    {
            	    char_literal89=(Token)match(input,47,FOLLOW_47_in_typeArguments4344); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal89_tree = (Object)adaptor.create(char_literal89);
            	    adaptor.addChild(root_0, char_literal89_tree);
            	    }
            	    pushFollow(FOLLOW_typeArgument_in_typeArguments4348);
            	    argx=typeArgument();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, argx.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.add(argx.element);
            	    }

            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            char_literal90=(Token)match(input,48,FOLLOW_48_in_typeArguments4363); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal90_tree = (Object)adaptor.create(char_literal90);
            adaptor.addChild(root_0, char_literal90_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 62, typeArguments_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "typeArguments"

    public static class typeArgument_return extends ParserRuleReturnScope {
        public ActualTypeArgument element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "typeArgument"
    // JavaP.g:975:1: typeArgument returns [ActualTypeArgument element] : (t= type | '?' ( ( 'extends' | 'super' ) t= type )? );
    public final AspectJLo_JavaP.typeArgument_return typeArgument() throws RecognitionException {
        AspectJLo_JavaP.typeArgument_return retval = new AspectJLo_JavaP.typeArgument_return();
        retval.start = input.LT(1);
        int typeArgument_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal91=null;
        Token string_literal92=null;
        Token string_literal93=null;
        AspectJLo_JavaP.type_return t = null;


        Object char_literal91_tree=null;
        Object string_literal92_tree=null;
        Object string_literal93_tree=null;


        boolean pure=true;
        boolean ext=true;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return retval; }
            // JavaP.g:980:5: (t= type | '?' ( ( 'extends' | 'super' ) t= type )? )
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==Identifier||(LA78_0>=Export && LA78_0<=Overrides)||(LA78_0>=62 && LA78_0<=69)) ) {
                alt78=1;
            }
            else if ( (LA78_0==70) ) {
                alt78=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }
            switch (alt78) {
                case 1 :
                    // JavaP.g:980:9: t= type
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_type_in_typeArgument4396);
                    t=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, t.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = java().createBasicTypeArgument(t.element);
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:981:9: '?' ( ( 'extends' | 'super' ) t= type )?
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal91=(Token)match(input,70,FOLLOW_70_in_typeArgument4408); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal91_tree = (Object)adaptor.create(char_literal91);
                    adaptor.addChild(root_0, char_literal91_tree);
                    }
                    // JavaP.g:982:9: ( ( 'extends' | 'super' ) t= type )?
                    int alt77=2;
                    int LA77_0 = input.LA(1);

                    if ( (LA77_0==44||LA77_0==71) ) {
                        alt77=1;
                    }
                    switch (alt77) {
                        case 1 :
                            // JavaP.g:983:11: ( 'extends' | 'super' ) t= type
                            {
                            if ( state.backtracking==0 ) {
                              pure=false;
                            }
                            // JavaP.g:984:11: ( 'extends' | 'super' )
                            int alt76=2;
                            int LA76_0 = input.LA(1);

                            if ( (LA76_0==44) ) {
                                alt76=1;
                            }
                            else if ( (LA76_0==71) ) {
                                alt76=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 76, 0, input);

                                throw nvae;
                            }
                            switch (alt76) {
                                case 1 :
                                    // JavaP.g:984:12: 'extends'
                                    {
                                    string_literal92=(Token)match(input,44,FOLLOW_44_in_typeArgument4445); if (state.failed) return retval;
                                    if ( state.backtracking==0 ) {
                                    string_literal92_tree = (Object)adaptor.create(string_literal92);
                                    adaptor.addChild(root_0, string_literal92_tree);
                                    }

                                    }
                                    break;
                                case 2 :
                                    // JavaP.g:984:24: 'super'
                                    {
                                    string_literal93=(Token)match(input,71,FOLLOW_71_in_typeArgument4449); if (state.failed) return retval;
                                    if ( state.backtracking==0 ) {
                                    string_literal93_tree = (Object)adaptor.create(string_literal93);
                                    adaptor.addChild(root_0, string_literal93_tree);
                                    }
                                    if ( state.backtracking==0 ) {
                                      ext=false;
                                    }

                                    }
                                    break;

                            }

                            pushFollow(FOLLOW_type_in_typeArgument4466);
                            t=type();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, t.getTree());
                            if ( state.backtracking==0 ) {
                              if(ext) {
                                          retval.element = java().createExtendsWildcard(t.element);
                                         } else {
                                          retval.element = java().createSuperWildcard(t.element);
                                         }
                                        
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      if(pure) {
                                 retval.element = java().createPureWildcard();
                               }
                              
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 63, typeArgument_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "typeArgument"

    public static class qualifiedNameList_return extends ParserRuleReturnScope {
        public List<String> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "qualifiedNameList"
    // JavaP.g:999:1: qualifiedNameList returns [List<String> element] : q= qualifiedName ( ',' qn= qualifiedName )* ;
    public final AspectJLo_JavaP.qualifiedNameList_return qualifiedNameList() throws RecognitionException {
        AspectJLo_JavaP.qualifiedNameList_return retval = new AspectJLo_JavaP.qualifiedNameList_return();
        retval.start = input.LT(1);
        int qualifiedNameList_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal94=null;
        AspectJLo_JavaP.qualifiedName_return q = null;

        AspectJLo_JavaP.qualifiedName_return qn = null;


        Object char_literal94_tree=null;

        retval.element = new ArrayList<String>();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return retval; }
            // JavaP.g:1001:5: (q= qualifiedName ( ',' qn= qualifiedName )* )
            // JavaP.g:1001:9: q= qualifiedName ( ',' qn= qualifiedName )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_qualifiedName_in_qualifiedNameList4531);
            q=qualifiedName();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, q.getTree());
            if ( state.backtracking==0 ) {
              retval.element.add((q!=null?input.toString(q.start,q.stop):null));
            }
            // JavaP.g:1001:56: ( ',' qn= qualifiedName )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==47) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // JavaP.g:1001:57: ',' qn= qualifiedName
            	    {
            	    char_literal94=(Token)match(input,47,FOLLOW_47_in_qualifiedNameList4536); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal94_tree = (Object)adaptor.create(char_literal94);
            	    adaptor.addChild(root_0, char_literal94_tree);
            	    }
            	    pushFollow(FOLLOW_qualifiedName_in_qualifiedNameList4540);
            	    qn=qualifiedName();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, qn.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.add((qn!=null?input.toString(qn.start,qn.stop):null));
            	    }

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 64, qualifiedNameList_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "qualifiedNameList"

    public static class formalParameters_return extends ParserRuleReturnScope {
        public List<FormalParameter> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "formalParameters"
    // JavaP.g:1004:1: formalParameters returns [List<FormalParameter> element] : '(' (pars= formalParameterDecls )? ')' ;
    public final AspectJLo_JavaP.formalParameters_return formalParameters() throws RecognitionException {
        AspectJLo_JavaP.formalParameters_return retval = new AspectJLo_JavaP.formalParameters_return();
        retval.start = input.LT(1);
        int formalParameters_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal95=null;
        Token char_literal96=null;
        AspectJLo_JavaP.formalParameterDecls_return pars = null;


        Object char_literal95_tree=null;
        Object char_literal96_tree=null;

        retval.element = new ArrayList<FormalParameter>();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return retval; }
            // JavaP.g:1006:5: ( '(' (pars= formalParameterDecls )? ')' )
            // JavaP.g:1006:9: '(' (pars= formalParameterDecls )? ')'
            {
            root_0 = (Object)adaptor.nil();

            char_literal95=(Token)match(input,72,FOLLOW_72_in_formalParameters4571); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal95_tree = (Object)adaptor.create(char_literal95);
            adaptor.addChild(root_0, char_literal95_tree);
            }
            // JavaP.g:1006:13: (pars= formalParameterDecls )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==Identifier||(LA80_0>=Export && LA80_0<=Overrides)||LA80_0==41||(LA80_0>=62 && LA80_0<=69)||LA80_0==79) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // JavaP.g:1006:14: pars= formalParameterDecls
                    {
                    pushFollow(FOLLOW_formalParameterDecls_in_formalParameters4576);
                    pars=formalParameterDecls();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, pars.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element=pars.element;
                    }

                    }
                    break;

            }

            char_literal96=(Token)match(input,73,FOLLOW_73_in_formalParameters4582); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal96_tree = (Object)adaptor.create(char_literal96);
            adaptor.addChild(root_0, char_literal96_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 65, formalParameters_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "formalParameters"

    public static class formalParameterDecls_return extends ParserRuleReturnScope {
        public List<FormalParameter> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "formalParameterDecls"
    // JavaP.g:1009:1: formalParameterDecls returns [List<FormalParameter> element] : (mods= variableModifiers t= type id= variableDeclaratorId ( ',' decls= formalParameterDecls )? | modss= variableModifiers tt= type '...' idd= variableDeclaratorId );
    public final AspectJLo_JavaP.formalParameterDecls_return formalParameterDecls() throws RecognitionException {
        AspectJLo_JavaP.formalParameterDecls_return retval = new AspectJLo_JavaP.formalParameterDecls_return();
        retval.start = input.LT(1);
        int formalParameterDecls_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal97=null;
        Token string_literal98=null;
        AspectJLo_JavaP.variableModifiers_return mods = null;

        AspectJLo_JavaP.type_return t = null;

        AspectJLo_JavaP.variableDeclaratorId_return id = null;

        AspectJLo_JavaP.formalParameterDecls_return decls = null;

        AspectJLo_JavaP.variableModifiers_return modss = null;

        AspectJLo_JavaP.type_return tt = null;

        AspectJLo_JavaP.variableDeclaratorId_return idd = null;


        Object char_literal97_tree=null;
        Object string_literal98_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return retval; }
            // JavaP.g:1010:5: (mods= variableModifiers t= type id= variableDeclaratorId ( ',' decls= formalParameterDecls )? | modss= variableModifiers tt= type '...' idd= variableDeclaratorId )
            int alt82=2;
            alt82 = dfa82.predict(input);
            switch (alt82) {
                case 1 :
                    // JavaP.g:1010:9: mods= variableModifiers t= type id= variableDeclaratorId ( ',' decls= formalParameterDecls )?
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_variableModifiers_in_formalParameterDecls4611);
                    mods=variableModifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, mods.getTree());
                    pushFollow(FOLLOW_type_in_formalParameterDecls4615);
                    t=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, t.getTree());
                    pushFollow(FOLLOW_variableDeclaratorId_in_formalParameterDecls4619);
                    id=variableDeclaratorId();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, id.getTree());
                    // JavaP.g:1011:9: ( ',' decls= formalParameterDecls )?
                    int alt81=2;
                    int LA81_0 = input.LA(1);

                    if ( (LA81_0==47) ) {
                        alt81=1;
                    }
                    switch (alt81) {
                        case 1 :
                            // JavaP.g:1011:10: ',' decls= formalParameterDecls
                            {
                            char_literal97=(Token)match(input,47,FOLLOW_47_in_formalParameterDecls4631); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal97_tree = (Object)adaptor.create(char_literal97);
                            adaptor.addChild(root_0, char_literal97_tree);
                            }
                            pushFollow(FOLLOW_formalParameterDecls_in_formalParameterDecls4635);
                            decls=formalParameterDecls();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, decls.getTree());
                            if ( state.backtracking==0 ) {
                              retval.element=decls.element; 
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      if(retval.element == null) {
                               retval.element=new ArrayList<FormalParameter>();}
                               FormalParameter param = new FormalParameter(new SimpleNameSignature(id.element.name()),myToArray(t.element, id.element));
                               param.addAllModifiers(mods.element);
                               retval.element.add(0,param);
                               setLocation(param, mods.start,id.stop);
                               
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1019:9: modss= variableModifiers tt= type '...' idd= variableDeclaratorId
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_variableModifiers_in_formalParameterDecls4661);
                    modss=variableModifiers();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, modss.getTree());
                    pushFollow(FOLLOW_type_in_formalParameterDecls4665);
                    tt=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, tt.getTree());
                    string_literal98=(Token)match(input,74,FOLLOW_74_in_formalParameterDecls4667); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal98_tree = (Object)adaptor.create(string_literal98);
                    adaptor.addChild(root_0, string_literal98_tree);
                    }
                    pushFollow(FOLLOW_variableDeclaratorId_in_formalParameterDecls4671);
                    idd=variableDeclaratorId();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, idd.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new ArrayList<FormalParameter>(); 
                               FormalParameter param = new MultiFormalParameter(new SimpleNameSignature(idd.element.name()),myToArray(tt.element,idd.element));
                               param.addAllModifiers(modss.element);
                               retval.element.add(param);
                               setLocation(param, modss.start, idd.stop);
                               
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 66, formalParameterDecls_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "formalParameterDecls"

    public static class methodBody_return extends ParserRuleReturnScope {
        public Block element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "methodBody"
    // JavaP.g:1029:1: methodBody returns [Block element] : b= block ;
    public final AspectJLo_JavaP.methodBody_return methodBody() throws RecognitionException {
        AspectJLo_JavaP.methodBody_return retval = new AspectJLo_JavaP.methodBody_return();
        retval.start = input.LT(1);
        int methodBody_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.block_return b = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return retval; }
            // JavaP.g:1030:5: (b= block )
            // JavaP.g:1030:9: b= block
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_block_in_methodBody4716);
            b=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, b.getTree());
            if ( state.backtracking==0 ) {
              retval.element = b.element;
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 67, methodBody_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "methodBody"

    public static class constructorBody_return extends ParserRuleReturnScope {
        public Block element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constructorBody"
    // JavaP.g:1033:1: constructorBody returns [Block element] : '{' (inv= explicitConstructorInvocation )? (bs= blockStatement )* '}' ;
    public final AspectJLo_JavaP.constructorBody_return constructorBody() throws RecognitionException {
        AspectJLo_JavaP.constructorBody_return retval = new AspectJLo_JavaP.constructorBody_return();
        retval.start = input.LT(1);
        int constructorBody_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal99=null;
        Token char_literal100=null;
        AspectJLo_JavaP.explicitConstructorInvocation_return inv = null;

        AspectJLo_JavaP.blockStatement_return bs = null;


        Object char_literal99_tree=null;
        Object char_literal100_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return retval; }
            // JavaP.g:1034:5: ( '{' (inv= explicitConstructorInvocation )? (bs= blockStatement )* '}' )
            // JavaP.g:1034:9: '{' (inv= explicitConstructorInvocation )? (bs= blockStatement )* '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal99=(Token)match(input,50,FOLLOW_50_in_constructorBody4741); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal99_tree = (Object)adaptor.create(char_literal99);
            adaptor.addChild(root_0, char_literal99_tree);
            }
            if ( state.backtracking==0 ) {
              retval.element = new Block();
            }
            // JavaP.g:1035:10: (inv= explicitConstructorInvocation )?
            int alt83=2;
            alt83 = dfa83.predict(input);
            switch (alt83) {
                case 1 :
                    // JavaP.g:1035:11: inv= explicitConstructorInvocation
                    {
                    pushFollow(FOLLOW_explicitConstructorInvocation_in_constructorBody4758);
                    inv=explicitConstructorInvocation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, inv.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element.addStatement(new StatementExpression(inv.element));
                    }

                    }
                    break;

            }

            // JavaP.g:1036:10: (bs= blockStatement )*
            loop84:
            do {
                int alt84=2;
                int LA84_0 = input.LA(1);

                if ( ((LA84_0>=Identifier && LA84_0<=ASSERT)||(LA84_0>=Export && LA84_0<=Overrides)||LA84_0==32||LA84_0==34||(LA84_0>=37 && LA84_0<=43)||LA84_0==50||(LA84_0>=52 && LA84_0<=53)||LA84_0==59||(LA84_0>=62 && LA84_0<=69)||(LA84_0>=71 && LA84_0<=72)||(LA84_0>=75 && LA84_0<=79)||LA84_0==82||(LA84_0>=84 && LA84_0<=87)||(LA84_0>=89 && LA84_0<=93)||(LA84_0>=111 && LA84_0<=112)||(LA84_0>=115 && LA84_0<=120)||(LA84_0>=122 && LA84_0<=125)) ) {
                    alt84=1;
                }


                switch (alt84) {
            	case 1 :
            	    // JavaP.g:1036:11: bs= blockStatement
            	    {
            	    pushFollow(FOLLOW_blockStatement_in_constructorBody4777);
            	    bs=blockStatement();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, bs.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.addStatement(bs.element);
            	    }

            	    }
            	    break;

            	default :
            	    break loop84;
                }
            } while (true);

            char_literal100=(Token)match(input,51,FOLLOW_51_in_constructorBody4783); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal100_tree = (Object)adaptor.create(char_literal100);
            adaptor.addChild(root_0, char_literal100_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 68, constructorBody_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constructorBody"

    public static class explicitConstructorInvocation_return extends ParserRuleReturnScope {
        public MethodInvocation element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "explicitConstructorInvocation"
    // JavaP.g:1039:1: explicitConstructorInvocation returns [MethodInvocation element] : ( ( nonWildcardTypeArguments )? 'this' args= arguments ';' | (prim= primary '.' )? ( nonWildcardTypeArguments )? 'super' argsx= arguments ';' );
    public final AspectJLo_JavaP.explicitConstructorInvocation_return explicitConstructorInvocation() throws RecognitionException {
        AspectJLo_JavaP.explicitConstructorInvocation_return retval = new AspectJLo_JavaP.explicitConstructorInvocation_return();
        retval.start = input.LT(1);
        int explicitConstructorInvocation_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal102=null;
        Token char_literal103=null;
        Token char_literal104=null;
        Token string_literal106=null;
        Token char_literal107=null;
        AspectJLo_JavaP.arguments_return args = null;

        AspectJLo_JavaP.primary_return prim = null;

        AspectJLo_JavaP.arguments_return argsx = null;

        AspectJLo_JavaP.nonWildcardTypeArguments_return nonWildcardTypeArguments101 = null;

        AspectJLo_JavaP.nonWildcardTypeArguments_return nonWildcardTypeArguments105 = null;


        Object string_literal102_tree=null;
        Object char_literal103_tree=null;
        Object char_literal104_tree=null;
        Object string_literal106_tree=null;
        Object char_literal107_tree=null;

        Expression target=null;
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return retval; }
            // JavaP.g:1041:5: ( ( nonWildcardTypeArguments )? 'this' args= arguments ';' | (prim= primary '.' )? ( nonWildcardTypeArguments )? 'super' argsx= arguments ';' )
            int alt88=2;
            alt88 = dfa88.predict(input);
            switch (alt88) {
                case 1 :
                    // JavaP.g:1041:9: ( nonWildcardTypeArguments )? 'this' args= arguments ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    // JavaP.g:1041:9: ( nonWildcardTypeArguments )?
                    int alt85=2;
                    int LA85_0 = input.LA(1);

                    if ( (LA85_0==46) ) {
                        alt85=1;
                    }
                    switch (alt85) {
                        case 1 :
                            // JavaP.g:0:0: nonWildcardTypeArguments
                            {
                            pushFollow(FOLLOW_nonWildcardTypeArguments_in_explicitConstructorInvocation4810);
                            nonWildcardTypeArguments101=nonWildcardTypeArguments();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, nonWildcardTypeArguments101.getTree());

                            }
                            break;

                    }

                    string_literal102=(Token)match(input,75,FOLLOW_75_in_explicitConstructorInvocation4813); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal102_tree = (Object)adaptor.create(string_literal102);
                    adaptor.addChild(root_0, string_literal102_tree);
                    }
                    pushFollow(FOLLOW_arguments_in_explicitConstructorInvocation4817);
                    args=arguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, args.getTree());
                    char_literal103=(Token)match(input,32,FOLLOW_32_in_explicitConstructorInvocation4819); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal103_tree = (Object)adaptor.create(char_literal103);
                    adaptor.addChild(root_0, char_literal103_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new ThisConstructorDelegation();
                              retval.element.addAllArguments(args.element);
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1044:7: (prim= primary '.' )? ( nonWildcardTypeArguments )? 'super' argsx= arguments ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    // JavaP.g:1044:7: (prim= primary '.' )?
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==Identifier||(LA86_0>=FloatingPointLiteral && LA86_0<=DecimalLiteral)||(LA86_0>=Export && LA86_0<=Overrides)||LA86_0==53||(LA86_0>=62 && LA86_0<=69)||LA86_0==72||(LA86_0>=75 && LA86_0<=78)||LA86_0==119||(LA86_0>=123 && LA86_0<=125)) ) {
                        alt86=1;
                    }
                    else if ( (LA86_0==71) ) {
                        int LA86_2 = input.LA(2);

                        if ( (LA86_2==35) ) {
                            alt86=1;
                        }
                    }
                    switch (alt86) {
                        case 1 :
                            // JavaP.g:1044:8: prim= primary '.'
                            {
                            pushFollow(FOLLOW_primary_in_explicitConstructorInvocation4839);
                            prim=primary();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, prim.getTree());
                            char_literal104=(Token)match(input,35,FOLLOW_35_in_explicitConstructorInvocation4841); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal104_tree = (Object)adaptor.create(char_literal104);
                            adaptor.addChild(root_0, char_literal104_tree);
                            }
                            if ( state.backtracking==0 ) {
                              target=prim.element;
                            }

                            }
                            break;

                    }

                    // JavaP.g:1044:50: ( nonWildcardTypeArguments )?
                    int alt87=2;
                    int LA87_0 = input.LA(1);

                    if ( (LA87_0==46) ) {
                        alt87=1;
                    }
                    switch (alt87) {
                        case 1 :
                            // JavaP.g:0:0: nonWildcardTypeArguments
                            {
                            pushFollow(FOLLOW_nonWildcardTypeArguments_in_explicitConstructorInvocation4847);
                            nonWildcardTypeArguments105=nonWildcardTypeArguments();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, nonWildcardTypeArguments105.getTree());

                            }
                            break;

                    }

                    string_literal106=(Token)match(input,71,FOLLOW_71_in_explicitConstructorInvocation4850); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal106_tree = (Object)adaptor.create(string_literal106);
                    adaptor.addChild(root_0, string_literal106_tree);
                    }
                    pushFollow(FOLLOW_arguments_in_explicitConstructorInvocation4854);
                    argsx=arguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, argsx.getTree());
                    char_literal107=(Token)match(input,32,FOLLOW_32_in_explicitConstructorInvocation4856); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal107_tree = (Object)adaptor.create(char_literal107);
                    adaptor.addChild(root_0, char_literal107_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new SuperConstructorDelegation();
                             retval.element.addAllArguments(argsx.element);
                             if(target != null) {
                               retval.element.setTarget(target);
                             }
                            
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 69, explicitConstructorInvocation_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "explicitConstructorInvocation"

    public static class qualifiedName_return extends ParserRuleReturnScope {
        public String element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "qualifiedName"
    // JavaP.g:1054:1: qualifiedName returns [String element] : id= identifierRule ( '.' idx= identifierRule )* ;
    public final AspectJLo_JavaP.qualifiedName_return qualifiedName() throws RecognitionException {
        AspectJLo_JavaP.qualifiedName_return retval = new AspectJLo_JavaP.qualifiedName_return();
        retval.start = input.LT(1);
        int qualifiedName_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal108=null;
        AspectJLoParser.identifierRule_return id = null;

        AspectJLoParser.identifierRule_return idx = null;


        Object char_literal108_tree=null;

        StringBuffer buffer = new StringBuffer();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return retval; }
            // JavaP.g:1056:5: (id= identifierRule ( '.' idx= identifierRule )* )
            // JavaP.g:1056:9: id= identifierRule ( '.' idx= identifierRule )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifierRule_in_qualifiedName4895);
            id=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, id.getTree());
            if ( state.backtracking==0 ) {
              buffer.append((id!=null?input.toString(id.start,id.stop):null));
            }
            // JavaP.g:1056:53: ( '.' idx= identifierRule )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==35) ) {
                    int LA89_2 = input.LA(2);

                    if ( (LA89_2==Identifier||(LA89_2>=Export && LA89_2<=Overrides)) ) {
                        alt89=1;
                    }


                }


                switch (alt89) {
            	case 1 :
            	    // JavaP.g:1056:54: '.' idx= identifierRule
            	    {
            	    char_literal108=(Token)match(input,35,FOLLOW_35_in_qualifiedName4899); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal108_tree = (Object)adaptor.create(char_literal108);
            	    adaptor.addChild(root_0, char_literal108_tree);
            	    }
            	    pushFollow(FOLLOW_identifierRule_in_qualifiedName4903);
            	    idx=gAspectJLo.identifierRule();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, idx.getTree());
            	    if ( state.backtracking==0 ) {
            	      buffer.append((idx!=null?input.toString(idx.start,idx.stop):null));
            	    }

            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 70, qualifiedName_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "qualifiedName"

    public static class literal_return extends ParserRuleReturnScope {
        public Literal element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "literal"
    // JavaP.g:1059:1: literal returns [Literal element] : (intl= integerLiteral | fl= FloatingPointLiteral | charl= CharacterLiteral | strl= StringLiteral | booll= booleanLiteral | 'null' );
    public final AspectJLo_JavaP.literal_return literal() throws RecognitionException {
        AspectJLo_JavaP.literal_return retval = new AspectJLo_JavaP.literal_return();
        retval.start = input.LT(1);
        int literal_StartIndex = input.index();
        Object root_0 = null;

        Token fl=null;
        Token charl=null;
        Token strl=null;
        Token string_literal109=null;
        AspectJLo_JavaP.integerLiteral_return intl = null;

        AspectJLo_JavaP.booleanLiteral_return booll = null;


        Object fl_tree=null;
        Object charl_tree=null;
        Object strl_tree=null;
        Object string_literal109_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return retval; }
            // JavaP.g:1060:5: (intl= integerLiteral | fl= FloatingPointLiteral | charl= CharacterLiteral | strl= StringLiteral | booll= booleanLiteral | 'null' )
            int alt90=6;
            switch ( input.LA(1) ) {
            case HexLiteral:
            case OctalLiteral:
            case DecimalLiteral:
                {
                alt90=1;
                }
                break;
            case FloatingPointLiteral:
                {
                alt90=2;
                }
                break;
            case CharacterLiteral:
                {
                alt90=3;
                }
                break;
            case StringLiteral:
                {
                alt90=4;
                }
                break;
            case 77:
            case 78:
                {
                alt90=5;
                }
                break;
            case 76:
                {
                alt90=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }

            switch (alt90) {
                case 1 :
                    // JavaP.g:1060:9: intl= integerLiteral
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_integerLiteral_in_literal4936);
                    intl=integerLiteral();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, intl.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element=intl.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1061:9: fl= FloatingPointLiteral
                    {
                    root_0 = (Object)adaptor.nil();

                    fl=(Token)match(input,FloatingPointLiteral,FOLLOW_FloatingPointLiteral_in_literal4950); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    fl_tree = (Object)adaptor.create(fl);
                    adaptor.addChild(root_0, fl_tree);
                    }
                    if ( state.backtracking==0 ) {

                                 String text = (fl!=null?fl.getText():null);
                                 if(text.endsWith("f") || text.endsWith("F")) { 
                                   retval.element=new RegularLiteral(typeRef("float"),text);
                                 } else {
                                   retval.element=new RegularLiteral(typeRef("double"),text);
                                 }
                              
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:1069:9: charl= CharacterLiteral
                    {
                    root_0 = (Object)adaptor.nil();

                    charl=(Token)match(input,CharacterLiteral,FOLLOW_CharacterLiteral_in_literal4964); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    charl_tree = (Object)adaptor.create(charl);
                    adaptor.addChild(root_0, charl_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element=new RegularLiteral(typeRef("char"),(charl!=null?charl.getText():null));
                    }

                    }
                    break;
                case 4 :
                    // JavaP.g:1070:9: strl= StringLiteral
                    {
                    root_0 = (Object)adaptor.nil();

                    strl=(Token)match(input,StringLiteral,FOLLOW_StringLiteral_in_literal4978); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    strl_tree = (Object)adaptor.create(strl);
                    adaptor.addChild(root_0, strl_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element=new RegularLiteral(typeRef("java.lang.String"),(strl!=null?strl.getText():null));
                    }

                    }
                    break;
                case 5 :
                    // JavaP.g:1071:9: booll= booleanLiteral
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_booleanLiteral_in_literal4992);
                    booll=booleanLiteral();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, booll.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element=booll.element;
                    }

                    }
                    break;
                case 6 :
                    // JavaP.g:1072:9: 'null'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal109=(Token)match(input,76,FOLLOW_76_in_literal5004); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal109_tree = (Object)adaptor.create(string_literal109);
                    adaptor.addChild(root_0, string_literal109_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new NullLiteral();
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 71, literal_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "literal"

    public static class integerLiteral_return extends ParserRuleReturnScope {
        public Literal element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "integerLiteral"
    // JavaP.g:1075:1: integerLiteral returns [Literal element] : (hexl= HexLiteral | octl= OctalLiteral | decl= DecimalLiteral );
    public final AspectJLo_JavaP.integerLiteral_return integerLiteral() throws RecognitionException {
        AspectJLo_JavaP.integerLiteral_return retval = new AspectJLo_JavaP.integerLiteral_return();
        retval.start = input.LT(1);
        int integerLiteral_StartIndex = input.index();
        Object root_0 = null;

        Token hexl=null;
        Token octl=null;
        Token decl=null;

        Object hexl_tree=null;
        Object octl_tree=null;
        Object decl_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return retval; }
            // JavaP.g:1076:5: (hexl= HexLiteral | octl= OctalLiteral | decl= DecimalLiteral )
            int alt91=3;
            switch ( input.LA(1) ) {
            case HexLiteral:
                {
                alt91=1;
                }
                break;
            case OctalLiteral:
                {
                alt91=2;
                }
                break;
            case DecimalLiteral:
                {
                alt91=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 91, 0, input);

                throw nvae;
            }

            switch (alt91) {
                case 1 :
                    // JavaP.g:1076:9: hexl= HexLiteral
                    {
                    root_0 = (Object)adaptor.nil();

                    hexl=(Token)match(input,HexLiteral,FOLLOW_HexLiteral_in_integerLiteral5031); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    hexl_tree = (Object)adaptor.create(hexl);
                    adaptor.addChild(root_0, hexl_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element=new RegularLiteral(typeRef("int"),(hexl!=null?hexl.getText():null));
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1077:9: octl= OctalLiteral
                    {
                    root_0 = (Object)adaptor.nil();

                    octl=(Token)match(input,OctalLiteral,FOLLOW_OctalLiteral_in_integerLiteral5045); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    octl_tree = (Object)adaptor.create(octl);
                    adaptor.addChild(root_0, octl_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element=new RegularLiteral(typeRef("int"),(octl!=null?octl.getText():null));
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:1078:9: decl= DecimalLiteral
                    {
                    root_0 = (Object)adaptor.nil();

                    decl=(Token)match(input,DecimalLiteral,FOLLOW_DecimalLiteral_in_integerLiteral5059); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    decl_tree = (Object)adaptor.create(decl);
                    adaptor.addChild(root_0, decl_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element=new RegularLiteral(typeRef("int"),(decl!=null?decl.getText():null));
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 72, integerLiteral_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "integerLiteral"

    public static class booleanLiteral_return extends ParserRuleReturnScope {
        public Literal element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "booleanLiteral"
    // JavaP.g:1081:1: booleanLiteral returns [Literal element] : ( 'true' | 'false' );
    public final AspectJLo_JavaP.booleanLiteral_return booleanLiteral() throws RecognitionException {
        AspectJLo_JavaP.booleanLiteral_return retval = new AspectJLo_JavaP.booleanLiteral_return();
        retval.start = input.LT(1);
        int booleanLiteral_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal110=null;
        Token string_literal111=null;

        Object string_literal110_tree=null;
        Object string_literal111_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return retval; }
            // JavaP.g:1082:5: ( 'true' | 'false' )
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==77) ) {
                alt92=1;
            }
            else if ( (LA92_0==78) ) {
                alt92=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;
            }
            switch (alt92) {
                case 1 :
                    // JavaP.g:1082:9: 'true'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal110=(Token)match(input,77,FOLLOW_77_in_booleanLiteral5084); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal110_tree = (Object)adaptor.create(string_literal110);
                    adaptor.addChild(root_0, string_literal110_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new RegularLiteral(typeRef("boolean"),"true");
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1083:9: 'false'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal111=(Token)match(input,78,FOLLOW_78_in_booleanLiteral5096); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal111_tree = (Object)adaptor.create(string_literal111);
                    adaptor.addChild(root_0, string_literal111_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new RegularLiteral(typeRef("boolean"),"false");
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 73, booleanLiteral_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "booleanLiteral"

    public static class annotations_return extends ParserRuleReturnScope {
        public List<AnnotationModifier> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "annotations"
    // JavaP.g:1088:1: annotations returns [List<AnnotationModifier> element] : (a= annotation )+ ;
    public final AspectJLo_JavaP.annotations_return annotations() throws RecognitionException {
        AspectJLo_JavaP.annotations_return retval = new AspectJLo_JavaP.annotations_return();
        retval.start = input.LT(1);
        int annotations_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.annotation_return a = null;



        retval.element = new ArrayList<AnnotationModifier>();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return retval; }
            // JavaP.g:1090:5: ( (a= annotation )+ )
            // JavaP.g:1090:9: (a= annotation )+
            {
            root_0 = (Object)adaptor.nil();

            // JavaP.g:1090:9: (a= annotation )+
            int cnt93=0;
            loop93:
            do {
                int alt93=2;
                alt93 = dfa93.predict(input);
                switch (alt93) {
            	case 1 :
            	    // JavaP.g:1090:10: a= annotation
            	    {
            	    pushFollow(FOLLOW_annotation_in_annotations5130);
            	    a=annotation();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, a.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.add(a.element);
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt93 >= 1 ) break loop93;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(93, input);
                        throw eee;
                }
                cnt93++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 74, annotations_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "annotations"

    public static class annotation_return extends ParserRuleReturnScope {
        public AnnotationModifier element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "annotation"
    // JavaP.g:1093:1: annotation returns [AnnotationModifier element] : '@' a= annotationName ( '(' ( elementValuePairs | elementValue )? ')' )? ;
    public final AspectJLo_JavaP.annotation_return annotation() throws RecognitionException {
        AspectJLo_JavaP.annotation_return retval = new AspectJLo_JavaP.annotation_return();
        retval.start = input.LT(1);
        int annotation_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal112=null;
        Token char_literal113=null;
        Token char_literal116=null;
        AspectJLo_JavaP.annotationName_return a = null;

        AspectJLo_JavaP.elementValuePairs_return elementValuePairs114 = null;

        AspectJLo_JavaP.elementValue_return elementValue115 = null;


        Object char_literal112_tree=null;
        Object char_literal113_tree=null;
        Object char_literal116_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return retval; }
            // JavaP.g:1094:5: ( '@' a= annotationName ( '(' ( elementValuePairs | elementValue )? ')' )? )
            // JavaP.g:1094:9: '@' a= annotationName ( '(' ( elementValuePairs | elementValue )? ')' )?
            {
            root_0 = (Object)adaptor.nil();

            char_literal112=(Token)match(input,79,FOLLOW_79_in_annotation5157); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal112_tree = (Object)adaptor.create(char_literal112);
            adaptor.addChild(root_0, char_literal112_tree);
            }
            pushFollow(FOLLOW_annotationName_in_annotation5161);
            a=annotationName();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, a.getTree());
            if ( state.backtracking==0 ) {
              retval.element=new AnnotationModifier((a!=null?input.toString(a.start,a.stop):null));
            }
            // JavaP.g:1094:80: ( '(' ( elementValuePairs | elementValue )? ')' )?
            int alt95=2;
            int LA95_0 = input.LA(1);

            if ( (LA95_0==72) ) {
                alt95=1;
            }
            switch (alt95) {
                case 1 :
                    // JavaP.g:1094:82: '(' ( elementValuePairs | elementValue )? ')'
                    {
                    char_literal113=(Token)match(input,72,FOLLOW_72_in_annotation5167); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal113_tree = (Object)adaptor.create(char_literal113);
                    adaptor.addChild(root_0, char_literal113_tree);
                    }
                    // JavaP.g:1094:86: ( elementValuePairs | elementValue )?
                    int alt94=3;
                    alt94 = dfa94.predict(input);
                    switch (alt94) {
                        case 1 :
                            // JavaP.g:1094:88: elementValuePairs
                            {
                            pushFollow(FOLLOW_elementValuePairs_in_annotation5171);
                            elementValuePairs114=elementValuePairs();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, elementValuePairs114.getTree());

                            }
                            break;
                        case 2 :
                            // JavaP.g:1094:108: elementValue
                            {
                            pushFollow(FOLLOW_elementValue_in_annotation5175);
                            elementValue115=elementValue();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, elementValue115.getTree());

                            }
                            break;

                    }

                    char_literal116=(Token)match(input,73,FOLLOW_73_in_annotation5180); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal116_tree = (Object)adaptor.create(char_literal116);
                    adaptor.addChild(root_0, char_literal116_tree);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 75, annotation_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "annotation"

    public static class annotationName_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "annotationName"
    // JavaP.g:1097:1: annotationName : identifierRule ( '.' identifierRule )* ;
    public final AspectJLo_JavaP.annotationName_return annotationName() throws RecognitionException {
        AspectJLo_JavaP.annotationName_return retval = new AspectJLo_JavaP.annotationName_return();
        retval.start = input.LT(1);
        int annotationName_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal118=null;
        AspectJLoParser.identifierRule_return identifierRule117 = null;

        AspectJLoParser.identifierRule_return identifierRule119 = null;


        Object char_literal118_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return retval; }
            // JavaP.g:1098:5: ( identifierRule ( '.' identifierRule )* )
            // JavaP.g:1098:7: identifierRule ( '.' identifierRule )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifierRule_in_annotationName5204);
            identifierRule117=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifierRule117.getTree());
            // JavaP.g:1098:22: ( '.' identifierRule )*
            loop96:
            do {
                int alt96=2;
                int LA96_0 = input.LA(1);

                if ( (LA96_0==35) ) {
                    alt96=1;
                }


                switch (alt96) {
            	case 1 :
            	    // JavaP.g:1098:23: '.' identifierRule
            	    {
            	    char_literal118=(Token)match(input,35,FOLLOW_35_in_annotationName5207); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal118_tree = (Object)adaptor.create(char_literal118);
            	    adaptor.addChild(root_0, char_literal118_tree);
            	    }
            	    pushFollow(FOLLOW_identifierRule_in_annotationName5209);
            	    identifierRule119=gAspectJLo.identifierRule();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, identifierRule119.getTree());

            	    }
            	    break;

            	default :
            	    break loop96;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 76, annotationName_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "annotationName"

    public static class elementValuePairs_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "elementValuePairs"
    // JavaP.g:1101:1: elementValuePairs : elementValuePair ( ',' elementValuePair )* ;
    public final AspectJLo_JavaP.elementValuePairs_return elementValuePairs() throws RecognitionException {
        AspectJLo_JavaP.elementValuePairs_return retval = new AspectJLo_JavaP.elementValuePairs_return();
        retval.start = input.LT(1);
        int elementValuePairs_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal121=null;
        AspectJLo_JavaP.elementValuePair_return elementValuePair120 = null;

        AspectJLo_JavaP.elementValuePair_return elementValuePair122 = null;


        Object char_literal121_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return retval; }
            // JavaP.g:1102:5: ( elementValuePair ( ',' elementValuePair )* )
            // JavaP.g:1102:9: elementValuePair ( ',' elementValuePair )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_elementValuePair_in_elementValuePairs5230);
            elementValuePair120=elementValuePair();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, elementValuePair120.getTree());
            // JavaP.g:1102:26: ( ',' elementValuePair )*
            loop97:
            do {
                int alt97=2;
                int LA97_0 = input.LA(1);

                if ( (LA97_0==47) ) {
                    alt97=1;
                }


                switch (alt97) {
            	case 1 :
            	    // JavaP.g:1102:27: ',' elementValuePair
            	    {
            	    char_literal121=(Token)match(input,47,FOLLOW_47_in_elementValuePairs5233); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal121_tree = (Object)adaptor.create(char_literal121);
            	    adaptor.addChild(root_0, char_literal121_tree);
            	    }
            	    pushFollow(FOLLOW_elementValuePair_in_elementValuePairs5235);
            	    elementValuePair122=elementValuePair();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, elementValuePair122.getTree());

            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 77, elementValuePairs_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "elementValuePairs"

    public static class elementValuePair_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "elementValuePair"
    // JavaP.g:1105:1: elementValuePair : identifierRule '=' elementValue ;
    public final AspectJLo_JavaP.elementValuePair_return elementValuePair() throws RecognitionException {
        AspectJLo_JavaP.elementValuePair_return retval = new AspectJLo_JavaP.elementValuePair_return();
        retval.start = input.LT(1);
        int elementValuePair_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal124=null;
        AspectJLoParser.identifierRule_return identifierRule123 = null;

        AspectJLo_JavaP.elementValue_return elementValue125 = null;


        Object char_literal124_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return retval; }
            // JavaP.g:1106:5: ( identifierRule '=' elementValue )
            // JavaP.g:1106:9: identifierRule '=' elementValue
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifierRule_in_elementValuePair5256);
            identifierRule123=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, identifierRule123.getTree());
            char_literal124=(Token)match(input,57,FOLLOW_57_in_elementValuePair5258); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal124_tree = (Object)adaptor.create(char_literal124);
            adaptor.addChild(root_0, char_literal124_tree);
            }
            pushFollow(FOLLOW_elementValue_in_elementValuePair5260);
            elementValue125=elementValue();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, elementValue125.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 78, elementValuePair_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "elementValuePair"

    public static class elementValue_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "elementValue"
    // JavaP.g:1109:1: elementValue : ( conditionalExpression | annotation | elementValueArrayInitializer );
    public final AspectJLo_JavaP.elementValue_return elementValue() throws RecognitionException {
        AspectJLo_JavaP.elementValue_return retval = new AspectJLo_JavaP.elementValue_return();
        retval.start = input.LT(1);
        int elementValue_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.conditionalExpression_return conditionalExpression126 = null;

        AspectJLo_JavaP.annotation_return annotation127 = null;

        AspectJLo_JavaP.elementValueArrayInitializer_return elementValueArrayInitializer128 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return retval; }
            // JavaP.g:1110:5: ( conditionalExpression | annotation | elementValueArrayInitializer )
            int alt98=3;
            switch ( input.LA(1) ) {
            case Identifier:
            case FloatingPointLiteral:
            case CharacterLiteral:
            case StringLiteral:
            case HexLiteral:
            case OctalLiteral:
            case DecimalLiteral:
            case Export:
            case Connector:
            case Connect:
            case Name:
            case Overrides:
            case 53:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 71:
            case 72:
            case 75:
            case 76:
            case 77:
            case 78:
            case 111:
            case 112:
            case 115:
            case 116:
            case 117:
            case 118:
            case 119:
            case 123:
            case 124:
            case 125:
                {
                alt98=1;
                }
                break;
            case 79:
                {
                alt98=2;
                }
                break;
            case 50:
                {
                alt98=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 98, 0, input);

                throw nvae;
            }

            switch (alt98) {
                case 1 :
                    // JavaP.g:1110:9: conditionalExpression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_conditionalExpression_in_elementValue5283);
                    conditionalExpression126=conditionalExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, conditionalExpression126.getTree());

                    }
                    break;
                case 2 :
                    // JavaP.g:1111:9: annotation
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_annotation_in_elementValue5293);
                    annotation127=annotation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, annotation127.getTree());

                    }
                    break;
                case 3 :
                    // JavaP.g:1112:9: elementValueArrayInitializer
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_elementValueArrayInitializer_in_elementValue5303);
                    elementValueArrayInitializer128=elementValueArrayInitializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, elementValueArrayInitializer128.getTree());

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 79, elementValue_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "elementValue"

    public static class elementValueArrayInitializer_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "elementValueArrayInitializer"
    // JavaP.g:1115:1: elementValueArrayInitializer : '{' ( elementValue ( ',' elementValue )* )? ( ',' )? '}' ;
    public final AspectJLo_JavaP.elementValueArrayInitializer_return elementValueArrayInitializer() throws RecognitionException {
        AspectJLo_JavaP.elementValueArrayInitializer_return retval = new AspectJLo_JavaP.elementValueArrayInitializer_return();
        retval.start = input.LT(1);
        int elementValueArrayInitializer_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal129=null;
        Token char_literal131=null;
        Token char_literal133=null;
        Token char_literal134=null;
        AspectJLo_JavaP.elementValue_return elementValue130 = null;

        AspectJLo_JavaP.elementValue_return elementValue132 = null;


        Object char_literal129_tree=null;
        Object char_literal131_tree=null;
        Object char_literal133_tree=null;
        Object char_literal134_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return retval; }
            // JavaP.g:1116:5: ( '{' ( elementValue ( ',' elementValue )* )? ( ',' )? '}' )
            // JavaP.g:1116:9: '{' ( elementValue ( ',' elementValue )* )? ( ',' )? '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal129=(Token)match(input,50,FOLLOW_50_in_elementValueArrayInitializer5326); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal129_tree = (Object)adaptor.create(char_literal129);
            adaptor.addChild(root_0, char_literal129_tree);
            }
            // JavaP.g:1116:13: ( elementValue ( ',' elementValue )* )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==Identifier||(LA100_0>=FloatingPointLiteral && LA100_0<=DecimalLiteral)||(LA100_0>=Export && LA100_0<=Overrides)||LA100_0==50||LA100_0==53||(LA100_0>=62 && LA100_0<=69)||(LA100_0>=71 && LA100_0<=72)||(LA100_0>=75 && LA100_0<=79)||(LA100_0>=111 && LA100_0<=112)||(LA100_0>=115 && LA100_0<=119)||(LA100_0>=123 && LA100_0<=125)) ) {
                alt100=1;
            }
            switch (alt100) {
                case 1 :
                    // JavaP.g:1116:14: elementValue ( ',' elementValue )*
                    {
                    pushFollow(FOLLOW_elementValue_in_elementValueArrayInitializer5329);
                    elementValue130=elementValue();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, elementValue130.getTree());
                    // JavaP.g:1116:27: ( ',' elementValue )*
                    loop99:
                    do {
                        int alt99=2;
                        int LA99_0 = input.LA(1);

                        if ( (LA99_0==47) ) {
                            int LA99_1 = input.LA(2);

                            if ( (LA99_1==Identifier||(LA99_1>=FloatingPointLiteral && LA99_1<=DecimalLiteral)||(LA99_1>=Export && LA99_1<=Overrides)||LA99_1==50||LA99_1==53||(LA99_1>=62 && LA99_1<=69)||(LA99_1>=71 && LA99_1<=72)||(LA99_1>=75 && LA99_1<=79)||(LA99_1>=111 && LA99_1<=112)||(LA99_1>=115 && LA99_1<=119)||(LA99_1>=123 && LA99_1<=125)) ) {
                                alt99=1;
                            }


                        }


                        switch (alt99) {
                    	case 1 :
                    	    // JavaP.g:1116:28: ',' elementValue
                    	    {
                    	    char_literal131=(Token)match(input,47,FOLLOW_47_in_elementValueArrayInitializer5332); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal131_tree = (Object)adaptor.create(char_literal131);
                    	    adaptor.addChild(root_0, char_literal131_tree);
                    	    }
                    	    pushFollow(FOLLOW_elementValue_in_elementValueArrayInitializer5334);
                    	    elementValue132=elementValue();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, elementValue132.getTree());

                    	    }
                    	    break;

                    	default :
                    	    break loop99;
                        }
                    } while (true);


                    }
                    break;

            }

            // JavaP.g:1116:49: ( ',' )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==47) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // JavaP.g:1116:50: ','
                    {
                    char_literal133=(Token)match(input,47,FOLLOW_47_in_elementValueArrayInitializer5341); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal133_tree = (Object)adaptor.create(char_literal133);
                    adaptor.addChild(root_0, char_literal133_tree);
                    }

                    }
                    break;

            }

            char_literal134=(Token)match(input,51,FOLLOW_51_in_elementValueArrayInitializer5345); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal134_tree = (Object)adaptor.create(char_literal134);
            adaptor.addChild(root_0, char_literal134_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 80, elementValueArrayInitializer_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "elementValueArrayInitializer"

    public static class annotationTypeDeclaration_return extends ParserRuleReturnScope {
        public TypeWithBody element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "annotationTypeDeclaration"
    // JavaP.g:1119:1: annotationTypeDeclaration returns [TypeWithBody element] : '@' 'interface' name= identifierRule body= annotationTypeBody ;
    public final AspectJLo_JavaP.annotationTypeDeclaration_return annotationTypeDeclaration() throws RecognitionException {
        AspectJLo_JavaP.annotationTypeDeclaration_return retval = new AspectJLo_JavaP.annotationTypeDeclaration_return();
        retval.start = input.LT(1);
        int annotationTypeDeclaration_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal135=null;
        Token string_literal136=null;
        AspectJLoParser.identifierRule_return name = null;

        AspectJLo_JavaP.annotationTypeBody_return body = null;


        Object char_literal135_tree=null;
        Object string_literal136_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 81) ) { return retval; }
            // JavaP.g:1120:5: ( '@' 'interface' name= identifierRule body= annotationTypeBody )
            // JavaP.g:1120:9: '@' 'interface' name= identifierRule body= annotationTypeBody
            {
            root_0 = (Object)adaptor.nil();

            char_literal135=(Token)match(input,79,FOLLOW_79_in_annotationTypeDeclaration5372); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal135_tree = (Object)adaptor.create(char_literal135);
            adaptor.addChild(root_0, char_literal135_tree);
            }
            string_literal136=(Token)match(input,52,FOLLOW_52_in_annotationTypeDeclaration5374); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal136_tree = (Object)adaptor.create(string_literal136);
            adaptor.addChild(root_0, string_literal136_tree);
            }
            pushFollow(FOLLOW_identifierRule_in_annotationTypeDeclaration5378);
            name=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            if ( state.backtracking==0 ) {

                             retval.element = (TypeWithBody)createType(new SimpleNameSignature((name!=null?input.toString(name.start,name.stop):null)));
                             retval.element.addModifier(new AnnotationType());
                             setName(retval.element,name.start);
                           
            }
            pushFollow(FOLLOW_annotationTypeBody_in_annotationTypeDeclaration5412);
            body=annotationTypeBody();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, body.getTree());
            if ( state.backtracking==0 ) {
              retval.element.setBody(body.element);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 81, annotationTypeDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "annotationTypeDeclaration"

    public static class annotationTypeBody_return extends ParserRuleReturnScope {
        public ClassBody element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "annotationTypeBody"
    // JavaP.g:1129:1: annotationTypeBody returns [ClassBody element] : '{' ( annotationTypeElementDeclaration )* '}' ;
    public final AspectJLo_JavaP.annotationTypeBody_return annotationTypeBody() throws RecognitionException {
        AspectJLo_JavaP.annotationTypeBody_return retval = new AspectJLo_JavaP.annotationTypeBody_return();
        retval.start = input.LT(1);
        int annotationTypeBody_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal137=null;
        Token char_literal139=null;
        AspectJLo_JavaP.annotationTypeElementDeclaration_return annotationTypeElementDeclaration138 = null;


        Object char_literal137_tree=null;
        Object char_literal139_tree=null;

        retval.element = new ClassBody();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 82) ) { return retval; }
            // JavaP.g:1131:5: ( '{' ( annotationTypeElementDeclaration )* '}' )
            // JavaP.g:1131:9: '{' ( annotationTypeElementDeclaration )* '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal137=(Token)match(input,50,FOLLOW_50_in_annotationTypeBody5445); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal137_tree = (Object)adaptor.create(char_literal137);
            adaptor.addChild(root_0, char_literal137_tree);
            }
            // JavaP.g:1131:13: ( annotationTypeElementDeclaration )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( ((LA102_0>=Identifier && LA102_0<=ENUM)||(LA102_0>=Export && LA102_0<=Overrides)||LA102_0==34||(LA102_0>=37 && LA102_0<=43)||LA102_0==46||(LA102_0>=52 && LA102_0<=53)||(LA102_0>=58 && LA102_0<=69)||LA102_0==79||LA102_0==120) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // JavaP.g:1131:14: annotationTypeElementDeclaration
            	    {
            	    pushFollow(FOLLOW_annotationTypeElementDeclaration_in_annotationTypeBody5448);
            	    annotationTypeElementDeclaration138=annotationTypeElementDeclaration();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, annotationTypeElementDeclaration138.getTree());

            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);

            char_literal139=(Token)match(input,51,FOLLOW_51_in_annotationTypeBody5452); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal139_tree = (Object)adaptor.create(char_literal139);
            adaptor.addChild(root_0, char_literal139_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 82, annotationTypeBody_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "annotationTypeBody"

    public static class annotationTypeElementDeclaration_return extends ParserRuleReturnScope {
        public TypeElement element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "annotationTypeElementDeclaration"
    // JavaP.g:1134:1: annotationTypeElementDeclaration returns [TypeElement element] : mods= modifiers rest= annotationTypeElementRest ;
    public final AspectJLo_JavaP.annotationTypeElementDeclaration_return annotationTypeElementDeclaration() throws RecognitionException {
        AspectJLo_JavaP.annotationTypeElementDeclaration_return retval = new AspectJLo_JavaP.annotationTypeElementDeclaration_return();
        retval.start = input.LT(1);
        int annotationTypeElementDeclaration_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.modifiers_return mods = null;

        AspectJLo_JavaP.annotationTypeElementRest_return rest = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 83) ) { return retval; }
            // JavaP.g:1135:5: (mods= modifiers rest= annotationTypeElementRest )
            // JavaP.g:1135:9: mods= modifiers rest= annotationTypeElementRest
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_modifiers_in_annotationTypeElementDeclaration5481);
            mods=modifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, mods.getTree());
            pushFollow(FOLLOW_annotationTypeElementRest_in_annotationTypeElementDeclaration5485);
            rest=annotationTypeElementRest();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, rest.getTree());
            if ( state.backtracking==0 ) {

                       retval.element = rest.element;
                       for(Modifier modifier: mods.element) {
                         retval.element.addModifier(modifier);
                       }
                     
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 83, annotationTypeElementDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "annotationTypeElementDeclaration"

    public static class annotationTypeElementRest_return extends ParserRuleReturnScope {
        public TypeElement element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "annotationTypeElementRest"
    // JavaP.g:1144:1: annotationTypeElementRest returns [TypeElement element] : (t= type ann= annotationMethodOrConstantRest[$t.element] ';' | cd= normalClassDeclaration ( ';' )? | id= normalInterfaceDeclaration ( ';' )? | en= enumDeclaration ( ';' )? | an= annotationTypeDeclaration ( ';' )? );
    public final AspectJLo_JavaP.annotationTypeElementRest_return annotationTypeElementRest() throws RecognitionException {
        AspectJLo_JavaP.annotationTypeElementRest_return retval = new AspectJLo_JavaP.annotationTypeElementRest_return();
        retval.start = input.LT(1);
        int annotationTypeElementRest_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal140=null;
        Token char_literal141=null;
        Token char_literal142=null;
        Token char_literal143=null;
        Token char_literal144=null;
        AspectJLo_JavaP.type_return t = null;

        AspectJLo_JavaP.annotationMethodOrConstantRest_return ann = null;

        AspectJLo_JavaP.normalClassDeclaration_return cd = null;

        AspectJLo_JavaP.normalInterfaceDeclaration_return id = null;

        AspectJLo_JavaP.enumDeclaration_return en = null;

        AspectJLo_JavaP.annotationTypeDeclaration_return an = null;


        Object char_literal140_tree=null;
        Object char_literal141_tree=null;
        Object char_literal142_tree=null;
        Object char_literal143_tree=null;
        Object char_literal144_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 84) ) { return retval; }
            // JavaP.g:1145:5: (t= type ann= annotationMethodOrConstantRest[$t.element] ';' | cd= normalClassDeclaration ( ';' )? | id= normalInterfaceDeclaration ( ';' )? | en= enumDeclaration ( ';' )? | an= annotationTypeDeclaration ( ';' )? )
            int alt107=5;
            switch ( input.LA(1) ) {
            case Identifier:
            case Export:
            case Connector:
            case Connect:
            case Name:
            case Overrides:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
                {
                alt107=1;
                }
                break;
            case 43:
                {
                alt107=2;
                }
                break;
            case 52:
                {
                alt107=3;
                }
                break;
            case ENUM:
                {
                alt107=4;
                }
                break;
            case 79:
                {
                alt107=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 107, 0, input);

                throw nvae;
            }

            switch (alt107) {
                case 1 :
                    // JavaP.g:1145:9: t= type ann= annotationMethodOrConstantRest[$t.element] ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_type_in_annotationTypeElementRest5524);
                    t=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, t.getTree());
                    pushFollow(FOLLOW_annotationMethodOrConstantRest_in_annotationTypeElementRest5528);
                    ann=annotationMethodOrConstantRest((t!=null?t.element:null));

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, ann.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = ann.element;
                    }
                    char_literal140=(Token)match(input,32,FOLLOW_32_in_annotationTypeElementRest5547); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal140_tree = (Object)adaptor.create(char_literal140);
                    adaptor.addChild(root_0, char_literal140_tree);
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1148:9: cd= normalClassDeclaration ( ';' )?
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_normalClassDeclaration_in_annotationTypeElementRest5560);
                    cd=normalClassDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, cd.getTree());
                    if ( state.backtracking==0 ) {
                       retval.element = cd.element; addNonTopLevelObjectInheritance(cd.element);
                    }
                    // JavaP.g:1148:111: ( ';' )?
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( (LA103_0==32) ) {
                        alt103=1;
                    }
                    switch (alt103) {
                        case 1 :
                            // JavaP.g:0:0: ';'
                            {
                            char_literal141=(Token)match(input,32,FOLLOW_32_in_annotationTypeElementRest5563); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal141_tree = (Object)adaptor.create(char_literal141);
                            adaptor.addChild(root_0, char_literal141_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // JavaP.g:1149:9: id= normalInterfaceDeclaration ( ';' )?
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_normalInterfaceDeclaration_in_annotationTypeElementRest5576);
                    id=normalInterfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, id.getTree());
                    if ( state.backtracking==0 ) {
                       retval.element = id.element; addNonTopLevelObjectInheritance(id.element);
                    }
                    // JavaP.g:1149:115: ( ';' )?
                    int alt104=2;
                    int LA104_0 = input.LA(1);

                    if ( (LA104_0==32) ) {
                        alt104=1;
                    }
                    switch (alt104) {
                        case 1 :
                            // JavaP.g:0:0: ';'
                            {
                            char_literal142=(Token)match(input,32,FOLLOW_32_in_annotationTypeElementRest5579); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal142_tree = (Object)adaptor.create(char_literal142);
                            adaptor.addChild(root_0, char_literal142_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 4 :
                    // JavaP.g:1150:9: en= enumDeclaration ( ';' )?
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_enumDeclaration_in_annotationTypeElementRest5592);
                    en=enumDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, en.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = en.element;
                    }
                    // JavaP.g:1150:59: ( ';' )?
                    int alt105=2;
                    int LA105_0 = input.LA(1);

                    if ( (LA105_0==32) ) {
                        alt105=1;
                    }
                    switch (alt105) {
                        case 1 :
                            // JavaP.g:0:0: ';'
                            {
                            char_literal143=(Token)match(input,32,FOLLOW_32_in_annotationTypeElementRest5596); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal143_tree = (Object)adaptor.create(char_literal143);
                            adaptor.addChild(root_0, char_literal143_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 5 :
                    // JavaP.g:1151:9: an= annotationTypeDeclaration ( ';' )?
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_annotationTypeDeclaration_in_annotationTypeElementRest5609);
                    an=annotationTypeDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, an.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = an.element;
                    }
                    // JavaP.g:1151:69: ( ';' )?
                    int alt106=2;
                    int LA106_0 = input.LA(1);

                    if ( (LA106_0==32) ) {
                        alt106=1;
                    }
                    switch (alt106) {
                        case 1 :
                            // JavaP.g:0:0: ';'
                            {
                            char_literal144=(Token)match(input,32,FOLLOW_32_in_annotationTypeElementRest5613); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal144_tree = (Object)adaptor.create(char_literal144);
                            adaptor.addChild(root_0, char_literal144_tree);
                            }

                            }
                            break;

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 84, annotationTypeElementRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "annotationTypeElementRest"

    public static class annotationMethodOrConstantRest_return extends ParserRuleReturnScope {
        public TypeElement element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "annotationMethodOrConstantRest"
    // JavaP.g:1154:1: annotationMethodOrConstantRest[TypeReference type] returns [TypeElement element] : (a= annotationMethodRest[$type] | aa= annotationConstantRest[$type] );
    public final AspectJLo_JavaP.annotationMethodOrConstantRest_return annotationMethodOrConstantRest(TypeReference type) throws RecognitionException {
        AspectJLo_JavaP.annotationMethodOrConstantRest_return retval = new AspectJLo_JavaP.annotationMethodOrConstantRest_return();
        retval.start = input.LT(1);
        int annotationMethodOrConstantRest_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.annotationMethodRest_return a = null;

        AspectJLo_JavaP.annotationConstantRest_return aa = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 85) ) { return retval; }
            // JavaP.g:1155:5: (a= annotationMethodRest[$type] | aa= annotationConstantRest[$type] )
            int alt108=2;
            switch ( input.LA(1) ) {
            case Identifier:
                {
                int LA108_1 = input.LA(2);

                if ( (LA108_1==72) ) {
                    alt108=1;
                }
                else if ( (LA108_1==32||LA108_1==47||LA108_1==54||LA108_1==57) ) {
                    alt108=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 108, 1, input);

                    throw nvae;
                }
                }
                break;
            case Export:
                {
                int LA108_2 = input.LA(2);

                if ( (LA108_2==72) ) {
                    alt108=1;
                }
                else if ( (LA108_2==32||LA108_2==47||LA108_2==54||LA108_2==57) ) {
                    alt108=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 108, 2, input);

                    throw nvae;
                }
                }
                break;
            case Connector:
                {
                int LA108_3 = input.LA(2);

                if ( (LA108_3==72) ) {
                    alt108=1;
                }
                else if ( (LA108_3==32||LA108_3==47||LA108_3==54||LA108_3==57) ) {
                    alt108=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 108, 3, input);

                    throw nvae;
                }
                }
                break;
            case Connect:
                {
                int LA108_4 = input.LA(2);

                if ( (LA108_4==72) ) {
                    alt108=1;
                }
                else if ( (LA108_4==32||LA108_4==47||LA108_4==54||LA108_4==57) ) {
                    alt108=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 108, 4, input);

                    throw nvae;
                }
                }
                break;
            case Name:
                {
                int LA108_5 = input.LA(2);

                if ( (LA108_5==72) ) {
                    alt108=1;
                }
                else if ( (LA108_5==32||LA108_5==47||LA108_5==54||LA108_5==57) ) {
                    alt108=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 108, 5, input);

                    throw nvae;
                }
                }
                break;
            case Overrides:
                {
                int LA108_6 = input.LA(2);

                if ( (LA108_6==72) ) {
                    alt108=1;
                }
                else if ( (LA108_6==32||LA108_6==47||LA108_6==54||LA108_6==57) ) {
                    alt108=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 108, 6, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 108, 0, input);

                throw nvae;
            }

            switch (alt108) {
                case 1 :
                    // JavaP.g:1155:9: a= annotationMethodRest[$type]
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_annotationMethodRest_in_annotationMethodOrConstantRest5644);
                    a=annotationMethodRest(type);

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, a.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = a.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1156:9: aa= annotationConstantRest[$type]
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_annotationConstantRest_in_annotationMethodOrConstantRest5659);
                    aa=annotationConstantRest(type);

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, aa.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = aa.element;
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 85, annotationMethodOrConstantRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "annotationMethodOrConstantRest"

    public static class annotationMethodRest_return extends ParserRuleReturnScope {
        public Method element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "annotationMethodRest"
    // JavaP.g:1159:1: annotationMethodRest[TypeReference type] returns [Method element] : name= identifierRule '(' ')' ( defaultValue )? ;
    public final AspectJLo_JavaP.annotationMethodRest_return annotationMethodRest(TypeReference type) throws RecognitionException {
        AspectJLo_JavaP.annotationMethodRest_return retval = new AspectJLo_JavaP.annotationMethodRest_return();
        retval.start = input.LT(1);
        int annotationMethodRest_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal145=null;
        Token char_literal146=null;
        AspectJLoParser.identifierRule_return name = null;

        AspectJLo_JavaP.defaultValue_return defaultValue147 = null;


        Object char_literal145_tree=null;
        Object char_literal146_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 86) ) { return retval; }
            // JavaP.g:1160:5: (name= identifierRule '(' ')' ( defaultValue )? )
            // JavaP.g:1160:9: name= identifierRule '(' ')' ( defaultValue )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifierRule_in_annotationMethodRest5692);
            name=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            char_literal145=(Token)match(input,72,FOLLOW_72_in_annotationMethodRest5694); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal145_tree = (Object)adaptor.create(char_literal145);
            adaptor.addChild(root_0, char_literal145_tree);
            }
            char_literal146=(Token)match(input,73,FOLLOW_73_in_annotationMethodRest5696); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal146_tree = (Object)adaptor.create(char_literal146);
            adaptor.addChild(root_0, char_literal146_tree);
            }
            if ( state.backtracking==0 ) {
              retval.element = createNormalMethod(new SimpleNameDeclarationWithParametersHeader((name!=null?input.toString(name.start,name.stop):null)),type);
                       setName(retval.element,name.start);
                      
            }
            // JavaP.g:1163:11: ( defaultValue )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==80) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // JavaP.g:1163:12: defaultValue
                    {
                    pushFollow(FOLLOW_defaultValue_in_annotationMethodRest5710);
                    defaultValue147=defaultValue();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, defaultValue147.getTree());
                    if ( state.backtracking==0 ) {
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 86, annotationMethodRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "annotationMethodRest"

    public static class annotationConstantRest_return extends ParserRuleReturnScope {
        public MemberVariableDeclarator element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "annotationConstantRest"
    // JavaP.g:1166:1: annotationConstantRest[TypeReference type] returns [MemberVariableDeclarator element] : decls= variableDeclarators ;
    public final AspectJLo_JavaP.annotationConstantRest_return annotationConstantRest(TypeReference type) throws RecognitionException {
        AspectJLo_JavaP.annotationConstantRest_return retval = new AspectJLo_JavaP.annotationConstantRest_return();
        retval.start = input.LT(1);
        int annotationConstantRest_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.variableDeclarators_return decls = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 87) ) { return retval; }
            // JavaP.g:1167:5: (decls= variableDeclarators )
            // JavaP.g:1167:9: decls= variableDeclarators
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_variableDeclarators_in_annotationConstantRest5744);
            decls=variableDeclarators();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, decls.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new MemberVariableDeclarator(type);
                       for(VariableDeclaration decl: decls.element) {
                         retval.element.add(decl);
                       } 
                      
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 87, annotationConstantRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "annotationConstantRest"

    public static class defaultValue_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "defaultValue"
    // JavaP.g:1175:1: defaultValue : 'default' elementValue ;
    public final AspectJLo_JavaP.defaultValue_return defaultValue() throws RecognitionException {
        AspectJLo_JavaP.defaultValue_return retval = new AspectJLo_JavaP.defaultValue_return();
        retval.start = input.LT(1);
        int defaultValue_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal148=null;
        AspectJLo_JavaP.elementValue_return elementValue149 = null;


        Object string_literal148_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 88) ) { return retval; }
            // JavaP.g:1176:5: ( 'default' elementValue )
            // JavaP.g:1176:9: 'default' elementValue
            {
            root_0 = (Object)adaptor.nil();

            string_literal148=(Token)match(input,80,FOLLOW_80_in_defaultValue5778); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal148_tree = (Object)adaptor.create(string_literal148);
            adaptor.addChild(root_0, string_literal148_tree);
            }
            pushFollow(FOLLOW_elementValue_in_defaultValue5780);
            elementValue149=elementValue();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, elementValue149.getTree());

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 88, defaultValue_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "defaultValue"

    public static class block_return extends ParserRuleReturnScope {
        public Block element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "block"
    // JavaP.g:1181:1: block returns [Block element] : '{' (stat= blockStatement )* '}' ;
    public final AspectJLo_JavaP.block_return block() throws RecognitionException {
        AspectJLo_JavaP.block_return retval = new AspectJLo_JavaP.block_return();
        retval.start = input.LT(1);
        int block_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal150=null;
        Token char_literal151=null;
        AspectJLo_JavaP.blockStatement_return stat = null;


        Object char_literal150_tree=null;
        Object char_literal151_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 89) ) { return retval; }
            // JavaP.g:1182:5: ( '{' (stat= blockStatement )* '}' )
            // JavaP.g:1182:9: '{' (stat= blockStatement )* '}'
            {
            root_0 = (Object)adaptor.nil();

            char_literal150=(Token)match(input,50,FOLLOW_50_in_block5805); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal150_tree = (Object)adaptor.create(char_literal150);
            adaptor.addChild(root_0, char_literal150_tree);
            }
            if ( state.backtracking==0 ) {
              retval.element = new Block();
            }
            // JavaP.g:1182:45: (stat= blockStatement )*
            loop110:
            do {
                int alt110=2;
                int LA110_0 = input.LA(1);

                if ( ((LA110_0>=Identifier && LA110_0<=ASSERT)||(LA110_0>=Export && LA110_0<=Overrides)||LA110_0==32||LA110_0==34||(LA110_0>=37 && LA110_0<=43)||LA110_0==50||(LA110_0>=52 && LA110_0<=53)||LA110_0==59||(LA110_0>=62 && LA110_0<=69)||(LA110_0>=71 && LA110_0<=72)||(LA110_0>=75 && LA110_0<=79)||LA110_0==82||(LA110_0>=84 && LA110_0<=87)||(LA110_0>=89 && LA110_0<=93)||(LA110_0>=111 && LA110_0<=112)||(LA110_0>=115 && LA110_0<=120)||(LA110_0>=122 && LA110_0<=125)) ) {
                    alt110=1;
                }


                switch (alt110) {
            	case 1 :
            	    // JavaP.g:1182:46: stat= blockStatement
            	    {
            	    pushFollow(FOLLOW_blockStatement_in_block5812);
            	    stat=blockStatement();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, stat.getTree());
            	    if ( state.backtracking==0 ) {
            	      if(stat != null) {retval.element.addStatement(stat.element);}
            	    }

            	    }
            	    break;

            	default :
            	    break loop110;
                }
            } while (true);

            char_literal151=(Token)match(input,51,FOLLOW_51_in_block5818); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal151_tree = (Object)adaptor.create(char_literal151);
            adaptor.addChild(root_0, char_literal151_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 89, block_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "block"

    public static class blockStatement_return extends ParserRuleReturnScope {
        public Statement element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "blockStatement"
    // JavaP.g:1185:1: blockStatement returns [Statement element] : (local= localVariableDeclarationStatement | cd= classOrInterfaceDeclaration | stat= statement );
    public final AspectJLo_JavaP.blockStatement_return blockStatement() throws RecognitionException {
        AspectJLo_JavaP.blockStatement_return retval = new AspectJLo_JavaP.blockStatement_return();
        retval.start = input.LT(1);
        int blockStatement_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.localVariableDeclarationStatement_return local = null;

        AspectJLo_JavaP.classOrInterfaceDeclaration_return cd = null;

        AspectJLo_JavaP.statement_return stat = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 90) ) { return retval; }
            // JavaP.g:1187:5: (local= localVariableDeclarationStatement | cd= classOrInterfaceDeclaration | stat= statement )
            int alt111=3;
            alt111 = dfa111.predict(input);
            switch (alt111) {
                case 1 :
                    // JavaP.g:1187:9: local= localVariableDeclarationStatement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_localVariableDeclarationStatement_in_blockStatement5851);
                    local=localVariableDeclarationStatement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = local.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1188:9: cd= classOrInterfaceDeclaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_classOrInterfaceDeclaration_in_blockStatement5865);
                    cd=classOrInterfaceDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, cd.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new LocalClassStatement(cd.element);
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:1189:9: stat= statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_statement_in_blockStatement5879);
                    stat=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, stat.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = stat.element;
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              assert(retval.element != null);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 90, blockStatement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "blockStatement"

    public static class localVariableDeclarationStatement_return extends ParserRuleReturnScope {
        public Statement element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "localVariableDeclarationStatement"
    // JavaP.g:1192:1: localVariableDeclarationStatement returns [Statement element] : local= localVariableDeclaration ';' ;
    public final AspectJLo_JavaP.localVariableDeclarationStatement_return localVariableDeclarationStatement() throws RecognitionException {
        AspectJLo_JavaP.localVariableDeclarationStatement_return retval = new AspectJLo_JavaP.localVariableDeclarationStatement_return();
        retval.start = input.LT(1);
        int localVariableDeclarationStatement_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal152=null;
        AspectJLo_JavaP.localVariableDeclaration_return local = null;


        Object char_literal152_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 91) ) { return retval; }
            // JavaP.g:1193:5: (local= localVariableDeclaration ';' )
            // JavaP.g:1193:10: local= localVariableDeclaration ';'
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_localVariableDeclaration_in_localVariableDeclarationStatement5911);
            local=localVariableDeclaration();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local.getTree());
            if ( state.backtracking==0 ) {
              retval.element=local.element;
            }
            char_literal152=(Token)match(input,32,FOLLOW_32_in_localVariableDeclarationStatement5915); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal152_tree = (Object)adaptor.create(char_literal152);
            adaptor.addChild(root_0, char_literal152_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 91, localVariableDeclarationStatement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "localVariableDeclarationStatement"

    public static class localVariableDeclaration_return extends ParserRuleReturnScope {
        public LocalVariableDeclarator element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "localVariableDeclaration"
    // JavaP.g:1196:1: localVariableDeclaration returns [LocalVariableDeclarator element] : mods= variableModifiers ref= type decls= variableDeclarators ;
    public final AspectJLo_JavaP.localVariableDeclaration_return localVariableDeclaration() throws RecognitionException {
        AspectJLo_JavaP.localVariableDeclaration_return retval = new AspectJLo_JavaP.localVariableDeclaration_return();
        retval.start = input.LT(1);
        int localVariableDeclaration_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.variableModifiers_return mods = null;

        AspectJLo_JavaP.type_return ref = null;

        AspectJLo_JavaP.variableDeclarators_return decls = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 92) ) { return retval; }
            // JavaP.g:1197:5: (mods= variableModifiers ref= type decls= variableDeclarators )
            // JavaP.g:1197:9: mods= variableModifiers ref= type decls= variableDeclarators
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_variableModifiers_in_localVariableDeclaration5940);
            mods=variableModifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, mods.getTree());
            pushFollow(FOLLOW_type_in_localVariableDeclaration5944);
            ref=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ref.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new LocalVariableDeclarator(ref.element);
            }
            pushFollow(FOLLOW_variableDeclarators_in_localVariableDeclaration5950);
            decls=variableDeclarators();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, decls.getTree());
            if ( state.backtracking==0 ) {
              for(VariableDeclaration decl: decls.element) {retval.element.add(decl);}
            }
            if ( state.backtracking==0 ) {
              for(Modifier mod : mods.element) {retval.element.addModifier(mod);}
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 92, localVariableDeclaration_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "localVariableDeclaration"

    public static class variableModifiers_return extends ParserRuleReturnScope {
        public List<Modifier> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "variableModifiers"
    // JavaP.g:1201:1: variableModifiers returns [List<Modifier> element] : (mod= variableModifier )* ;
    public final AspectJLo_JavaP.variableModifiers_return variableModifiers() throws RecognitionException {
        AspectJLo_JavaP.variableModifiers_return retval = new AspectJLo_JavaP.variableModifiers_return();
        retval.start = input.LT(1);
        int variableModifiers_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.variableModifier_return mod = null;



        retval.element = new ArrayList<Modifier>();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 93) ) { return retval; }
            // JavaP.g:1203:5: ( (mod= variableModifier )* )
            // JavaP.g:1203:9: (mod= variableModifier )*
            {
            root_0 = (Object)adaptor.nil();

            // JavaP.g:1203:9: (mod= variableModifier )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==41||LA112_0==79) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // JavaP.g:1203:10: mod= variableModifier
            	    {
            	    pushFollow(FOLLOW_variableModifier_in_variableModifiers5996);
            	    mod=variableModifier();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, mod.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.add(mod.element);
            	    }

            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 93, variableModifiers_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "variableModifiers"

    public static class statement_return extends ParserRuleReturnScope {
        public Statement element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "statement"
    // JavaP.g:1206:1: statement returns [Statement element] : (bl= block | ASSERT asexpr= expression ( ':' asexprx= expression )? ';' | ifkey= 'if' ifexpr= parExpression ifif= statement ( options {k=1; } : elsekey= 'else' ifelse= statement )? | forkey= 'for' '(' forc= forControl ')' forstat= statement | whilkey= 'while' wexs= parExpression wstat= statement | dokey= 'do' dostat= statement whilekey= 'while' doex= parExpression ';' | trykey= 'try' traaibl= block (cts= catches finkey= 'finally' trybl= block | ctss= catches | finnkey= 'finally' trybll= block ) | switchkey= 'switch' swexpr= parExpression '{' cases= switchBlockStatementGroups '}' | synkey= 'synchronized' synexpr= parExpression synstat= block | retkey= 'return' (retex= expression )? ';' | throwkey= 'throw' threx= expression ';' | breakkey= 'break' (name= identifierRule )? ';' | continuekey= 'continue' (name= identifierRule )? ';' | ';' | stattex= statementExpression ';' | name= identifierRule ':' labstat= statement );
    public final AspectJLo_JavaP.statement_return statement() throws RecognitionException {
        AspectJLo_JavaP.statement_return retval = new AspectJLo_JavaP.statement_return();
        retval.start = input.LT(1);
        int statement_StartIndex = input.index();
        Object root_0 = null;

        Token ifkey=null;
        Token elsekey=null;
        Token forkey=null;
        Token whilkey=null;
        Token dokey=null;
        Token whilekey=null;
        Token trykey=null;
        Token finkey=null;
        Token finnkey=null;
        Token switchkey=null;
        Token synkey=null;
        Token retkey=null;
        Token throwkey=null;
        Token breakkey=null;
        Token continuekey=null;
        Token ASSERT153=null;
        Token char_literal154=null;
        Token char_literal155=null;
        Token char_literal156=null;
        Token char_literal157=null;
        Token char_literal158=null;
        Token char_literal159=null;
        Token char_literal160=null;
        Token char_literal161=null;
        Token char_literal162=null;
        Token char_literal163=null;
        Token char_literal164=null;
        Token char_literal165=null;
        Token char_literal166=null;
        Token char_literal167=null;
        AspectJLo_JavaP.block_return bl = null;

        AspectJLoParser.expression_return asexpr = null;

        AspectJLoParser.expression_return asexprx = null;

        AspectJLo_JavaP.parExpression_return ifexpr = null;

        AspectJLo_JavaP.statement_return ifif = null;

        AspectJLo_JavaP.statement_return ifelse = null;

        AspectJLo_JavaP.forControl_return forc = null;

        AspectJLo_JavaP.statement_return forstat = null;

        AspectJLo_JavaP.parExpression_return wexs = null;

        AspectJLo_JavaP.statement_return wstat = null;

        AspectJLo_JavaP.statement_return dostat = null;

        AspectJLo_JavaP.parExpression_return doex = null;

        AspectJLo_JavaP.block_return traaibl = null;

        AspectJLo_JavaP.catches_return cts = null;

        AspectJLo_JavaP.block_return trybl = null;

        AspectJLo_JavaP.catches_return ctss = null;

        AspectJLo_JavaP.block_return trybll = null;

        AspectJLo_JavaP.parExpression_return swexpr = null;

        AspectJLo_JavaP.switchBlockStatementGroups_return cases = null;

        AspectJLo_JavaP.parExpression_return synexpr = null;

        AspectJLo_JavaP.block_return synstat = null;

        AspectJLoParser.expression_return retex = null;

        AspectJLoParser.expression_return threx = null;

        AspectJLoParser.identifierRule_return name = null;

        AspectJLo_JavaP.statementExpression_return stattex = null;

        AspectJLo_JavaP.statement_return labstat = null;


        Object ifkey_tree=null;
        Object elsekey_tree=null;
        Object forkey_tree=null;
        Object whilkey_tree=null;
        Object dokey_tree=null;
        Object whilekey_tree=null;
        Object trykey_tree=null;
        Object finkey_tree=null;
        Object finnkey_tree=null;
        Object switchkey_tree=null;
        Object synkey_tree=null;
        Object retkey_tree=null;
        Object throwkey_tree=null;
        Object breakkey_tree=null;
        Object continuekey_tree=null;
        Object ASSERT153_tree=null;
        Object char_literal154_tree=null;
        Object char_literal155_tree=null;
        Object char_literal156_tree=null;
        Object char_literal157_tree=null;
        Object char_literal158_tree=null;
        Object char_literal159_tree=null;
        Object char_literal160_tree=null;
        Object char_literal161_tree=null;
        Object char_literal162_tree=null;
        Object char_literal163_tree=null;
        Object char_literal164_tree=null;
        Object char_literal165_tree=null;
        Object char_literal166_tree=null;
        Object char_literal167_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 94) ) { return retval; }
            // JavaP.g:1209:5: (bl= block | ASSERT asexpr= expression ( ':' asexprx= expression )? ';' | ifkey= 'if' ifexpr= parExpression ifif= statement ( options {k=1; } : elsekey= 'else' ifelse= statement )? | forkey= 'for' '(' forc= forControl ')' forstat= statement | whilkey= 'while' wexs= parExpression wstat= statement | dokey= 'do' dostat= statement whilekey= 'while' doex= parExpression ';' | trykey= 'try' traaibl= block (cts= catches finkey= 'finally' trybl= block | ctss= catches | finnkey= 'finally' trybll= block ) | switchkey= 'switch' swexpr= parExpression '{' cases= switchBlockStatementGroups '}' | synkey= 'synchronized' synexpr= parExpression synstat= block | retkey= 'return' (retex= expression )? ';' | throwkey= 'throw' threx= expression ';' | breakkey= 'break' (name= identifierRule )? ';' | continuekey= 'continue' (name= identifierRule )? ';' | ';' | stattex= statementExpression ';' | name= identifierRule ':' labstat= statement )
            int alt119=16;
            alt119 = dfa119.predict(input);
            switch (alt119) {
                case 1 :
                    // JavaP.g:1209:7: bl= block
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_block_in_statement6027);
                    bl=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, bl.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = bl.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1210:9: ASSERT asexpr= expression ( ':' asexprx= expression )? ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    ASSERT153=(Token)match(input,ASSERT,FOLLOW_ASSERT_in_statement6039); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ASSERT153_tree = (Object)adaptor.create(ASSERT153);
                    adaptor.addChild(root_0, ASSERT153_tree);
                    }
                    pushFollow(FOLLOW_expression_in_statement6043);
                    asexpr=gAspectJLo.expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, asexpr.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element=new AssertStatement(asexpr.element);
                    }
                    // JavaP.g:1210:87: ( ':' asexprx= expression )?
                    int alt113=2;
                    int LA113_0 = input.LA(1);

                    if ( (LA113_0==81) ) {
                        alt113=1;
                    }
                    switch (alt113) {
                        case 1 :
                            // JavaP.g:1210:88: ':' asexprx= expression
                            {
                            char_literal154=(Token)match(input,81,FOLLOW_81_in_statement6047); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            char_literal154_tree = (Object)adaptor.create(char_literal154);
                            adaptor.addChild(root_0, char_literal154_tree);
                            }
                            pushFollow(FOLLOW_expression_in_statement6051);
                            asexprx=gAspectJLo.expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, asexprx.getTree());
                            if ( state.backtracking==0 ) {
                              ((AssertStatement)retval.element).setMessageExpression(asexprx.element);
                            }

                            }
                            break;

                    }

                    char_literal155=(Token)match(input,32,FOLLOW_32_in_statement6057); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal155_tree = (Object)adaptor.create(char_literal155);
                    adaptor.addChild(root_0, char_literal155_tree);
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:1211:9: ifkey= 'if' ifexpr= parExpression ifif= statement ( options {k=1; } : elsekey= 'else' ifelse= statement )?
                    {
                    root_0 = (Object)adaptor.nil();

                    ifkey=(Token)match(input,82,FOLLOW_82_in_statement6069); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    ifkey_tree = (Object)adaptor.create(ifkey);
                    adaptor.addChild(root_0, ifkey_tree);
                    }
                    pushFollow(FOLLOW_parExpression_in_statement6073);
                    ifexpr=parExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, ifexpr.getTree());
                    pushFollow(FOLLOW_statement_in_statement6077);
                    ifif=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, ifif.getTree());
                    // JavaP.g:1211:56: ( options {k=1; } : elsekey= 'else' ifelse= statement )?
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( (LA114_0==83) ) {
                        int LA114_1 = input.LA(2);

                        if ( (synpred150_JavaP()) ) {
                            alt114=1;
                        }
                    }
                    switch (alt114) {
                        case 1 :
                            // JavaP.g:1211:72: elsekey= 'else' ifelse= statement
                            {
                            elsekey=(Token)match(input,83,FOLLOW_83_in_statement6089); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            elsekey_tree = (Object)adaptor.create(elsekey);
                            adaptor.addChild(root_0, elsekey_tree);
                            }
                            pushFollow(FOLLOW_statement_in_statement6093);
                            ifelse=statement();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, ifelse.getTree());

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      retval.element=new IfThenElseStatement(ifexpr.element, ifif.element, (ifelse == null ? null : ifelse.element));
                                setKeyword(retval.element,ifkey);
                                if(ifelse != null) {
                                  setKeyword(ifelse.element,elsekey);
                                }
                               
                    }

                    }
                    break;
                case 4 :
                    // JavaP.g:1218:9: forkey= 'for' '(' forc= forControl ')' forstat= statement
                    {
                    root_0 = (Object)adaptor.nil();

                    forkey=(Token)match(input,84,FOLLOW_84_in_statement6119); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    forkey_tree = (Object)adaptor.create(forkey);
                    adaptor.addChild(root_0, forkey_tree);
                    }
                    char_literal156=(Token)match(input,72,FOLLOW_72_in_statement6121); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal156_tree = (Object)adaptor.create(char_literal156);
                    adaptor.addChild(root_0, char_literal156_tree);
                    }
                    pushFollow(FOLLOW_forControl_in_statement6125);
                    forc=forControl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, forc.getTree());
                    char_literal157=(Token)match(input,73,FOLLOW_73_in_statement6127); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal157_tree = (Object)adaptor.create(char_literal157);
                    adaptor.addChild(root_0, char_literal157_tree);
                    }
                    pushFollow(FOLLOW_statement_in_statement6131);
                    forstat=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, forstat.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new ForStatement(forc.element,forstat.element);
                              setKeyword(retval.element,forkey);
                    }

                    }
                    break;
                case 5 :
                    // JavaP.g:1221:9: whilkey= 'while' wexs= parExpression wstat= statement
                    {
                    root_0 = (Object)adaptor.nil();

                    whilkey=(Token)match(input,85,FOLLOW_85_in_statement6154); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    whilkey_tree = (Object)adaptor.create(whilkey);
                    adaptor.addChild(root_0, whilkey_tree);
                    }
                    pushFollow(FOLLOW_parExpression_in_statement6158);
                    wexs=parExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, wexs.getTree());
                    pushFollow(FOLLOW_statement_in_statement6162);
                    wstat=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, wstat.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new WhileStatement(wexs.element, wstat.element);
                              setKeyword(retval.element,whilkey);
                    }

                    }
                    break;
                case 6 :
                    // JavaP.g:1224:9: dokey= 'do' dostat= statement whilekey= 'while' doex= parExpression ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    dokey=(Token)match(input,86,FOLLOW_86_in_statement6185); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    dokey_tree = (Object)adaptor.create(dokey);
                    adaptor.addChild(root_0, dokey_tree);
                    }
                    pushFollow(FOLLOW_statement_in_statement6189);
                    dostat=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, dostat.getTree());
                    whilekey=(Token)match(input,85,FOLLOW_85_in_statement6193); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    whilekey_tree = (Object)adaptor.create(whilekey);
                    adaptor.addChild(root_0, whilekey_tree);
                    }
                    pushFollow(FOLLOW_parExpression_in_statement6197);
                    doex=parExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, doex.getTree());
                    char_literal158=(Token)match(input,32,FOLLOW_32_in_statement6199); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal158_tree = (Object)adaptor.create(char_literal158);
                    adaptor.addChild(root_0, char_literal158_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element= new DoStatement(doex.element, dostat.element);
                              setKeyword(retval.element,dokey);
                              setKeyword(retval.element,whilekey);
                    }

                    }
                    break;
                case 7 :
                    // JavaP.g:1228:9: trykey= 'try' traaibl= block (cts= catches finkey= 'finally' trybl= block | ctss= catches | finnkey= 'finally' trybll= block )
                    {
                    root_0 = (Object)adaptor.nil();

                    trykey=(Token)match(input,87,FOLLOW_87_in_statement6222); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    trykey_tree = (Object)adaptor.create(trykey);
                    adaptor.addChild(root_0, trykey_tree);
                    }
                    pushFollow(FOLLOW_block_in_statement6226);
                    traaibl=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, traaibl.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new TryStatement(traaibl.element);
                              setKeyword(retval.element,trykey);
                    }
                    // JavaP.g:1231:9: (cts= catches finkey= 'finally' trybl= block | ctss= catches | finnkey= 'finally' trybll= block )
                    int alt115=3;
                    int LA115_0 = input.LA(1);

                    if ( (LA115_0==94) ) {
                        int LA115_1 = input.LA(2);

                        if ( (synpred155_JavaP()) ) {
                            alt115=1;
                        }
                        else if ( (synpred156_JavaP()) ) {
                            alt115=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 115, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA115_0==88) ) {
                        alt115=3;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 115, 0, input);

                        throw nvae;
                    }
                    switch (alt115) {
                        case 1 :
                            // JavaP.g:1231:11: cts= catches finkey= 'finally' trybl= block
                            {
                            pushFollow(FOLLOW_catches_in_statement6251);
                            cts=catches();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, cts.getTree());
                            finkey=(Token)match(input,88,FOLLOW_88_in_statement6255); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            finkey_tree = (Object)adaptor.create(finkey);
                            adaptor.addChild(root_0, finkey_tree);
                            }
                            pushFollow(FOLLOW_block_in_statement6259);
                            trybl=block();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, trybl.getTree());
                            if ( state.backtracking==0 ) {
                              ((TryStatement)retval.element).addAllCatchClauses(cts.element); 
                                          ((TryStatement)retval.element).setFinallyClause(new FinallyClause(trybl.element));
                                          setKeyword(retval.element,finkey);
                                         
                            }

                            }
                            break;
                        case 2 :
                            // JavaP.g:1236:11: ctss= catches
                            {
                            pushFollow(FOLLOW_catches_in_statement6287);
                            ctss=catches();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, ctss.getTree());
                            if ( state.backtracking==0 ) {
                              ((TryStatement)retval.element).addAllCatchClauses(ctss.element);
                            }

                            }
                            break;
                        case 3 :
                            // JavaP.g:1237:13: finnkey= 'finally' trybll= block
                            {
                            finnkey=(Token)match(input,88,FOLLOW_88_in_statement6305); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            finnkey_tree = (Object)adaptor.create(finnkey);
                            adaptor.addChild(root_0, finnkey_tree);
                            }
                            pushFollow(FOLLOW_block_in_statement6309);
                            trybll=block();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, trybll.getTree());
                            if ( state.backtracking==0 ) {
                              ((TryStatement)retval.element).setFinallyClause(new FinallyClause(trybll.element));
                                         setKeyword(retval.element,finnkey);
                            }

                            }
                            break;

                    }


                    }
                    break;
                case 8 :
                    // JavaP.g:1241:9: switchkey= 'switch' swexpr= parExpression '{' cases= switchBlockStatementGroups '}'
                    {
                    root_0 = (Object)adaptor.nil();

                    switchkey=(Token)match(input,89,FOLLOW_89_in_statement6345); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    switchkey_tree = (Object)adaptor.create(switchkey);
                    adaptor.addChild(root_0, switchkey_tree);
                    }
                    pushFollow(FOLLOW_parExpression_in_statement6349);
                    swexpr=parExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, swexpr.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new SwitchStatement(swexpr.element);
                                setKeyword(retval.element,switchkey);
                    }
                    char_literal159=(Token)match(input,50,FOLLOW_50_in_statement6374); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal159_tree = (Object)adaptor.create(char_literal159);
                    adaptor.addChild(root_0, char_literal159_tree);
                    }
                    pushFollow(FOLLOW_switchBlockStatementGroups_in_statement6378);
                    cases=switchBlockStatementGroups();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, cases.getTree());
                    if ( state.backtracking==0 ) {
                      ((SwitchStatement)retval.element).addAllCases(cases.element);
                    }
                    char_literal160=(Token)match(input,51,FOLLOW_51_in_statement6381); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal160_tree = (Object)adaptor.create(char_literal160);
                    adaptor.addChild(root_0, char_literal160_tree);
                    }

                    }
                    break;
                case 9 :
                    // JavaP.g:1245:9: synkey= 'synchronized' synexpr= parExpression synstat= block
                    {
                    root_0 = (Object)adaptor.nil();

                    synkey=(Token)match(input,59,FOLLOW_59_in_statement6393); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    synkey_tree = (Object)adaptor.create(synkey);
                    adaptor.addChild(root_0, synkey_tree);
                    }
                    pushFollow(FOLLOW_parExpression_in_statement6397);
                    synexpr=parExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, synexpr.getTree());
                    pushFollow(FOLLOW_block_in_statement6401);
                    synstat=block();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, synstat.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new SynchronizedStatement(synexpr.element,synstat.element);
                                setKeyword(retval.element,synkey);
                    }

                    }
                    break;
                case 10 :
                    // JavaP.g:1248:9: retkey= 'return' (retex= expression )? ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    retkey=(Token)match(input,90,FOLLOW_90_in_statement6426); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    retkey_tree = (Object)adaptor.create(retkey);
                    adaptor.addChild(root_0, retkey_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new ReturnStatement();
                                   setKeyword(retval.element,retkey);
                    }
                    // JavaP.g:1251:11: (retex= expression )?
                    int alt116=2;
                    int LA116_0 = input.LA(1);

                    if ( (LA116_0==Identifier||(LA116_0>=FloatingPointLiteral && LA116_0<=DecimalLiteral)||(LA116_0>=Export && LA116_0<=Overrides)||LA116_0==53||(LA116_0>=62 && LA116_0<=69)||(LA116_0>=71 && LA116_0<=72)||(LA116_0>=75 && LA116_0<=78)||(LA116_0>=111 && LA116_0<=112)||(LA116_0>=115 && LA116_0<=120)||(LA116_0>=122 && LA116_0<=125)) ) {
                        alt116=1;
                    }
                    switch (alt116) {
                        case 1 :
                            // JavaP.g:1251:12: retex= expression
                            {
                            pushFollow(FOLLOW_expression_in_statement6457);
                            retex=gAspectJLo.expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, retex.getTree());
                            if ( state.backtracking==0 ) {
                              ((ReturnStatement)retval.element).setExpression(retex.element);
                            }

                            }
                            break;

                    }

                    char_literal161=(Token)match(input,32,FOLLOW_32_in_statement6463); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal161_tree = (Object)adaptor.create(char_literal161);
                    adaptor.addChild(root_0, char_literal161_tree);
                    }

                    }
                    break;
                case 11 :
                    // JavaP.g:1252:9: throwkey= 'throw' threx= expression ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    throwkey=(Token)match(input,91,FOLLOW_91_in_statement6475); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    throwkey_tree = (Object)adaptor.create(throwkey);
                    adaptor.addChild(root_0, throwkey_tree);
                    }
                    pushFollow(FOLLOW_expression_in_statement6479);
                    threx=gAspectJLo.expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, threx.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new ThrowStatement(threx.element);
                              setKeyword(retval.element,throwkey);
                    }
                    char_literal162=(Token)match(input,32,FOLLOW_32_in_statement6500); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal162_tree = (Object)adaptor.create(char_literal162);
                    adaptor.addChild(root_0, char_literal162_tree);
                    }

                    }
                    break;
                case 12 :
                    // JavaP.g:1256:9: breakkey= 'break' (name= identifierRule )? ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    breakkey=(Token)match(input,92,FOLLOW_92_in_statement6512); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    breakkey_tree = (Object)adaptor.create(breakkey);
                    adaptor.addChild(root_0, breakkey_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new BreakStatement();
                              setKeyword(retval.element,breakkey);
                    }
                    // JavaP.g:1259:9: (name= identifierRule )?
                    int alt117=2;
                    int LA117_0 = input.LA(1);

                    if ( (LA117_0==Identifier||(LA117_0>=Export && LA117_0<=Overrides)) ) {
                        alt117=1;
                    }
                    switch (alt117) {
                        case 1 :
                            // JavaP.g:1259:10: name= identifierRule
                            {
                            pushFollow(FOLLOW_identifierRule_in_statement6537);
                            name=gAspectJLo.identifierRule();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
                            if ( state.backtracking==0 ) {
                              ((BreakStatement)retval.element).setLabel((name!=null?input.toString(name.start,name.stop):null));
                            }

                            }
                            break;

                    }

                    char_literal163=(Token)match(input,32,FOLLOW_32_in_statement6543); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal163_tree = (Object)adaptor.create(char_literal163);
                    adaptor.addChild(root_0, char_literal163_tree);
                    }

                    }
                    break;
                case 13 :
                    // JavaP.g:1260:9: continuekey= 'continue' (name= identifierRule )? ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    continuekey=(Token)match(input,93,FOLLOW_93_in_statement6555); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    continuekey_tree = (Object)adaptor.create(continuekey);
                    adaptor.addChild(root_0, continuekey_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new ContinueStatement();
                              setKeyword(retval.element,continuekey);
                    }
                    // JavaP.g:1263:9: (name= identifierRule )?
                    int alt118=2;
                    int LA118_0 = input.LA(1);

                    if ( (LA118_0==Identifier||(LA118_0>=Export && LA118_0<=Overrides)) ) {
                        alt118=1;
                    }
                    switch (alt118) {
                        case 1 :
                            // JavaP.g:1263:10: name= identifierRule
                            {
                            pushFollow(FOLLOW_identifierRule_in_statement6580);
                            name=gAspectJLo.identifierRule();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
                            if ( state.backtracking==0 ) {
                              ((ContinueStatement)retval.element).setLabel((name!=null?input.toString(name.start,name.stop):null));
                            }

                            }
                            break;

                    }

                    char_literal164=(Token)match(input,32,FOLLOW_32_in_statement6586); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal164_tree = (Object)adaptor.create(char_literal164);
                    adaptor.addChild(root_0, char_literal164_tree);
                    }

                    }
                    break;
                case 14 :
                    // JavaP.g:1264:9: ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal165=(Token)match(input,32,FOLLOW_32_in_statement6596); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal165_tree = (Object)adaptor.create(char_literal165);
                    adaptor.addChild(root_0, char_literal165_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new EmptyStatement();
                    }

                    }
                    break;
                case 15 :
                    // JavaP.g:1265:9: stattex= statementExpression ';'
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_statementExpression_in_statement6610);
                    stattex=statementExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, stattex.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new StatementExpression(stattex.element);
                    }
                    char_literal166=(Token)match(input,32,FOLLOW_32_in_statement6614); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal166_tree = (Object)adaptor.create(char_literal166);
                    adaptor.addChild(root_0, char_literal166_tree);
                    }

                    }
                    break;
                case 16 :
                    // JavaP.g:1266:9: name= identifierRule ':' labstat= statement
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_identifierRule_in_statement6626);
                    name=gAspectJLo.identifierRule();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
                    char_literal167=(Token)match(input,81,FOLLOW_81_in_statement6628); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal167_tree = (Object)adaptor.create(char_literal167);
                    adaptor.addChild(root_0, char_literal167_tree);
                    }
                    pushFollow(FOLLOW_statement_in_statement6632);
                    labstat=statement();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, labstat.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new LabeledStatement((name!=null?input.toString(name.start,name.stop):null),labstat.element);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              check_null(retval.element);
              setLocation(retval.element, (CommonToken)retval.start, (CommonToken)retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 94, statement_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "statement"

    public static class catches_return extends ParserRuleReturnScope {
        public List<CatchClause> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "catches"
    // JavaP.g:1269:1: catches returns [List<CatchClause> element] : (ct= catchClause )+ ;
    public final AspectJLo_JavaP.catches_return catches() throws RecognitionException {
        AspectJLo_JavaP.catches_return retval = new AspectJLo_JavaP.catches_return();
        retval.start = input.LT(1);
        int catches_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.catchClause_return ct = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 95) ) { return retval; }
            // JavaP.g:1271:5: ( (ct= catchClause )+ )
            // JavaP.g:1271:9: (ct= catchClause )+
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
              retval.element = new ArrayList<CatchClause>();
            }
            // JavaP.g:1271:58: (ct= catchClause )+
            int cnt120=0;
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( (LA120_0==94) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // JavaP.g:1271:59: ct= catchClause
            	    {
            	    pushFollow(FOLLOW_catchClause_in_catches6670);
            	    ct=catchClause();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, ct.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.add(ct.element);
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt120 >= 1 ) break loop120;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(120, input);
                        throw eee;
                }
                cnt120++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              assert(retval.element != null);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 95, catches_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "catches"

    public static class catchClause_return extends ParserRuleReturnScope {
        public CatchClause element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "catchClause"
    // JavaP.g:1274:1: catchClause returns [CatchClause element] : catchkey= 'catch' '(' par= formalParameter ')' bl= block ;
    public final AspectJLo_JavaP.catchClause_return catchClause() throws RecognitionException {
        AspectJLo_JavaP.catchClause_return retval = new AspectJLo_JavaP.catchClause_return();
        retval.start = input.LT(1);
        int catchClause_StartIndex = input.index();
        Object root_0 = null;

        Token catchkey=null;
        Token char_literal168=null;
        Token char_literal169=null;
        AspectJLo_JavaP.formalParameter_return par = null;

        AspectJLo_JavaP.block_return bl = null;


        Object catchkey_tree=null;
        Object char_literal168_tree=null;
        Object char_literal169_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 96) ) { return retval; }
            // JavaP.g:1276:5: (catchkey= 'catch' '(' par= formalParameter ')' bl= block )
            // JavaP.g:1276:9: catchkey= 'catch' '(' par= formalParameter ')' bl= block
            {
            root_0 = (Object)adaptor.nil();

            catchkey=(Token)match(input,94,FOLLOW_94_in_catchClause6707); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            catchkey_tree = (Object)adaptor.create(catchkey);
            adaptor.addChild(root_0, catchkey_tree);
            }
            char_literal168=(Token)match(input,72,FOLLOW_72_in_catchClause6709); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal168_tree = (Object)adaptor.create(char_literal168);
            adaptor.addChild(root_0, char_literal168_tree);
            }
            pushFollow(FOLLOW_formalParameter_in_catchClause6713);
            par=formalParameter();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, par.getTree());
            char_literal169=(Token)match(input,73,FOLLOW_73_in_catchClause6715); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal169_tree = (Object)adaptor.create(char_literal169);
            adaptor.addChild(root_0, char_literal169_tree);
            }
            pushFollow(FOLLOW_block_in_catchClause6719);
            bl=block();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, bl.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new CatchClause(par.element, bl.element);
                      setKeyword(retval.element,catchkey);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              assert(retval.element != null);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 96, catchClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "catchClause"

    public static class formalParameter_return extends ParserRuleReturnScope {
        public FormalParameter element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "formalParameter"
    // JavaP.g:1281:1: formalParameter returns [FormalParameter element] : mods= variableModifiers tref= type name= variableDeclaratorId ;
    public final AspectJLo_JavaP.formalParameter_return formalParameter() throws RecognitionException {
        AspectJLo_JavaP.formalParameter_return retval = new AspectJLo_JavaP.formalParameter_return();
        retval.start = input.LT(1);
        int formalParameter_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.variableModifiers_return mods = null;

        AspectJLo_JavaP.type_return tref = null;

        AspectJLo_JavaP.variableDeclaratorId_return name = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 97) ) { return retval; }
            // JavaP.g:1283:5: (mods= variableModifiers tref= type name= variableDeclaratorId )
            // JavaP.g:1283:9: mods= variableModifiers tref= type name= variableDeclaratorId
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_variableModifiers_in_formalParameter6759);
            mods=variableModifiers();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, mods.getTree());
            pushFollow(FOLLOW_type_in_formalParameter6763);
            tref=type();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, tref.getTree());
            pushFollow(FOLLOW_variableDeclaratorId_in_formalParameter6767);
            name=variableDeclaratorId();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new FormalParameter(new SimpleNameSignature(name.element.name()), myToArray(tref.element, name.element));
                       setLocation(retval.element, mods.start, name.stop);
                      
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              assert(retval.element != null);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 97, formalParameter_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "formalParameter"

    public static class switchBlockStatementGroups_return extends ParserRuleReturnScope {
        public List<SwitchCase> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "switchBlockStatementGroups"
    // JavaP.g:1289:1: switchBlockStatementGroups returns [List<SwitchCase> element] : (cs= switchCase )* ;
    public final AspectJLo_JavaP.switchBlockStatementGroups_return switchBlockStatementGroups() throws RecognitionException {
        AspectJLo_JavaP.switchBlockStatementGroups_return retval = new AspectJLo_JavaP.switchBlockStatementGroups_return();
        retval.start = input.LT(1);
        int switchBlockStatementGroups_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.switchCase_return cs = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 98) ) { return retval; }
            // JavaP.g:1291:5: ( (cs= switchCase )* )
            // JavaP.g:1291:9: (cs= switchCase )*
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
              retval.element = new ArrayList<SwitchCase>();
            }
            // JavaP.g:1291:56: (cs= switchCase )*
            loop121:
            do {
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( (LA121_0==80||LA121_0==95) ) {
                    alt121=1;
                }


                switch (alt121) {
            	case 1 :
            	    // JavaP.g:1291:57: cs= switchCase
            	    {
            	    pushFollow(FOLLOW_switchCase_in_switchBlockStatementGroups6817);
            	    cs=switchCase();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, cs.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.add(cs.element);
            	    }

            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              assert(retval.element != null);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 98, switchBlockStatementGroups_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "switchBlockStatementGroups"

    public static class switchCase_return extends ParserRuleReturnScope {
        public SwitchCase element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "switchCase"
    // JavaP.g:1298:1: switchCase returns [SwitchCase element] : label= switchLabel ( blockStatement )* ;
    public final AspectJLo_JavaP.switchCase_return switchCase() throws RecognitionException {
        AspectJLo_JavaP.switchCase_return retval = new AspectJLo_JavaP.switchCase_return();
        retval.start = input.LT(1);
        int switchCase_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.switchLabel_return label = null;

        AspectJLo_JavaP.blockStatement_return blockStatement170 = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 99) ) { return retval; }
            // JavaP.g:1300:5: (label= switchLabel ( blockStatement )* )
            // JavaP.g:1300:9: label= switchLabel ( blockStatement )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_switchLabel_in_switchCase6856);
            label=switchLabel();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, label.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new SwitchCase(label.element);
            }
            // JavaP.g:1300:77: ( blockStatement )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( ((LA122_0>=Identifier && LA122_0<=ASSERT)||(LA122_0>=Export && LA122_0<=Overrides)||LA122_0==32||LA122_0==34||(LA122_0>=37 && LA122_0<=43)||LA122_0==50||(LA122_0>=52 && LA122_0<=53)||LA122_0==59||(LA122_0>=62 && LA122_0<=69)||(LA122_0>=71 && LA122_0<=72)||(LA122_0>=75 && LA122_0<=79)||LA122_0==82||(LA122_0>=84 && LA122_0<=87)||(LA122_0>=89 && LA122_0<=93)||(LA122_0>=111 && LA122_0<=112)||(LA122_0>=115 && LA122_0<=120)||(LA122_0>=122 && LA122_0<=125)) ) {
                    alt122=1;
                }


                switch (alt122) {
            	case 1 :
            	    // JavaP.g:0:0: blockStatement
            	    {
            	    pushFollow(FOLLOW_blockStatement_in_switchCase6860);
            	    blockStatement170=blockStatement();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, blockStatement170.getTree());

            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              assert(retval.element != null);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 99, switchCase_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "switchCase"

    public static class switchLabel_return extends ParserRuleReturnScope {
        public SwitchLabel element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "switchLabel"
    // JavaP.g:1303:1: switchLabel returns [SwitchLabel element] : ( 'case' csexpr= constantExpression ':' | 'case' enumname= enumConstantName ':' | 'default' ':' );
    public final AspectJLo_JavaP.switchLabel_return switchLabel() throws RecognitionException {
        AspectJLo_JavaP.switchLabel_return retval = new AspectJLo_JavaP.switchLabel_return();
        retval.start = input.LT(1);
        int switchLabel_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal171=null;
        Token char_literal172=null;
        Token string_literal173=null;
        Token char_literal174=null;
        Token string_literal175=null;
        Token char_literal176=null;
        AspectJLo_JavaP.constantExpression_return csexpr = null;

        AspectJLo_JavaP.enumConstantName_return enumname = null;


        Object string_literal171_tree=null;
        Object char_literal172_tree=null;
        Object string_literal173_tree=null;
        Object char_literal174_tree=null;
        Object string_literal175_tree=null;
        Object char_literal176_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 100) ) { return retval; }
            // JavaP.g:1305:5: ( 'case' csexpr= constantExpression ':' | 'case' enumname= enumConstantName ':' | 'default' ':' )
            int alt123=3;
            alt123 = dfa123.predict(input);
            switch (alt123) {
                case 1 :
                    // JavaP.g:1305:9: 'case' csexpr= constantExpression ':'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal171=(Token)match(input,95,FOLLOW_95_in_switchLabel6892); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal171_tree = (Object)adaptor.create(string_literal171);
                    adaptor.addChild(root_0, string_literal171_tree);
                    }
                    pushFollow(FOLLOW_constantExpression_in_switchLabel6896);
                    csexpr=constantExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, csexpr.getTree());
                    char_literal172=(Token)match(input,81,FOLLOW_81_in_switchLabel6898); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal172_tree = (Object)adaptor.create(char_literal172);
                    adaptor.addChild(root_0, char_literal172_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new CaseLabel(csexpr.element);
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1306:9: 'case' enumname= enumConstantName ':'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal173=(Token)match(input,95,FOLLOW_95_in_switchLabel6910); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal173_tree = (Object)adaptor.create(string_literal173);
                    adaptor.addChild(root_0, string_literal173_tree);
                    }
                    pushFollow(FOLLOW_enumConstantName_in_switchLabel6914);
                    enumname=enumConstantName();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enumname.getTree());
                    char_literal174=(Token)match(input,81,FOLLOW_81_in_switchLabel6916); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal174_tree = (Object)adaptor.create(char_literal174);
                    adaptor.addChild(root_0, char_literal174_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new EnumLabel(enumname.element);
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:1307:9: 'default' ':'
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal175=(Token)match(input,80,FOLLOW_80_in_switchLabel6928); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal175_tree = (Object)adaptor.create(string_literal175);
                    adaptor.addChild(root_0, string_literal175_tree);
                    }
                    char_literal176=(Token)match(input,81,FOLLOW_81_in_switchLabel6930); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal176_tree = (Object)adaptor.create(char_literal176);
                    adaptor.addChild(root_0, char_literal176_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new DefaultLabel();
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              assert(retval.element != null);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 100, switchLabel_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "switchLabel"

    public static class forControl_return extends ParserRuleReturnScope {
        public ForControl element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "forControl"
    // JavaP.g:1310:1: forControl returns [ForControl element] options {k=3; } : (enh= enhancedForControl | (in= forInit )? ';' (e= expression )? ';' (u= forUpdate )? );
    public final AspectJLo_JavaP.forControl_return forControl() throws RecognitionException {
        AspectJLo_JavaP.forControl_return retval = new AspectJLo_JavaP.forControl_return();
        retval.start = input.LT(1);
        int forControl_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal177=null;
        Token char_literal178=null;
        AspectJLo_JavaP.enhancedForControl_return enh = null;

        AspectJLo_JavaP.forInit_return in = null;

        AspectJLoParser.expression_return e = null;

        AspectJLo_JavaP.forUpdate_return u = null;


        Object char_literal177_tree=null;
        Object char_literal178_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 101) ) { return retval; }
            // JavaP.g:1313:5: (enh= enhancedForControl | (in= forInit )? ';' (e= expression )? ';' (u= forUpdate )? )
            int alt127=2;
            alt127 = dfa127.predict(input);
            switch (alt127) {
                case 1 :
                    // JavaP.g:1313:9: enh= enhancedForControl
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_enhancedForControl_in_forControl6972);
                    enh=enhancedForControl();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, enh.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element=enh.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1314:9: (in= forInit )? ';' (e= expression )? ';' (u= forUpdate )?
                    {
                    root_0 = (Object)adaptor.nil();

                    // JavaP.g:1314:11: (in= forInit )?
                    int alt124=2;
                    int LA124_0 = input.LA(1);

                    if ( (LA124_0==Identifier||(LA124_0>=FloatingPointLiteral && LA124_0<=DecimalLiteral)||(LA124_0>=Export && LA124_0<=Overrides)||LA124_0==41||LA124_0==53||(LA124_0>=62 && LA124_0<=69)||(LA124_0>=71 && LA124_0<=72)||(LA124_0>=75 && LA124_0<=79)||(LA124_0>=111 && LA124_0<=112)||(LA124_0>=115 && LA124_0<=120)||(LA124_0>=122 && LA124_0<=125)) ) {
                        alt124=1;
                    }
                    switch (alt124) {
                        case 1 :
                            // JavaP.g:0:0: in= forInit
                            {
                            pushFollow(FOLLOW_forInit_in_forControl6986);
                            in=forInit();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, in.getTree());

                            }
                            break;

                    }

                    char_literal177=(Token)match(input,32,FOLLOW_32_in_forControl6989); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal177_tree = (Object)adaptor.create(char_literal177);
                    adaptor.addChild(root_0, char_literal177_tree);
                    }
                    // JavaP.g:1314:26: (e= expression )?
                    int alt125=2;
                    int LA125_0 = input.LA(1);

                    if ( (LA125_0==Identifier||(LA125_0>=FloatingPointLiteral && LA125_0<=DecimalLiteral)||(LA125_0>=Export && LA125_0<=Overrides)||LA125_0==53||(LA125_0>=62 && LA125_0<=69)||(LA125_0>=71 && LA125_0<=72)||(LA125_0>=75 && LA125_0<=78)||(LA125_0>=111 && LA125_0<=112)||(LA125_0>=115 && LA125_0<=120)||(LA125_0>=122 && LA125_0<=125)) ) {
                        alt125=1;
                    }
                    switch (alt125) {
                        case 1 :
                            // JavaP.g:0:0: e= expression
                            {
                            pushFollow(FOLLOW_expression_in_forControl6993);
                            e=gAspectJLo.expression();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());

                            }
                            break;

                    }

                    char_literal178=(Token)match(input,32,FOLLOW_32_in_forControl6996); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal178_tree = (Object)adaptor.create(char_literal178);
                    adaptor.addChild(root_0, char_literal178_tree);
                    }
                    // JavaP.g:1314:44: (u= forUpdate )?
                    int alt126=2;
                    int LA126_0 = input.LA(1);

                    if ( (LA126_0==Identifier||(LA126_0>=FloatingPointLiteral && LA126_0<=DecimalLiteral)||(LA126_0>=Export && LA126_0<=Overrides)||LA126_0==53||(LA126_0>=62 && LA126_0<=69)||(LA126_0>=71 && LA126_0<=72)||(LA126_0>=75 && LA126_0<=78)||(LA126_0>=111 && LA126_0<=112)||(LA126_0>=115 && LA126_0<=120)||(LA126_0>=122 && LA126_0<=125)) ) {
                        alt126=1;
                    }
                    switch (alt126) {
                        case 1 :
                            // JavaP.g:0:0: u= forUpdate
                            {
                            pushFollow(FOLLOW_forUpdate_in_forControl7000);
                            u=forUpdate();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, u.getTree());

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      retval.element = new SimpleForControl((in!=null?in.element:null),(e!=null?e.element:null),(u!=null?u.element:null));
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              assert(retval.element != null);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 101, forControl_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "forControl"

    public static class forInit_return extends ParserRuleReturnScope {
        public ForInit element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "forInit"
    // JavaP.g:1317:1: forInit returns [ForInit element] : (local= localVariableDeclaration | el= expressionList );
    public final AspectJLo_JavaP.forInit_return forInit() throws RecognitionException {
        AspectJLo_JavaP.forInit_return retval = new AspectJLo_JavaP.forInit_return();
        retval.start = input.LT(1);
        int forInit_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.localVariableDeclaration_return local = null;

        AspectJLo_JavaP.expressionList_return el = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 102) ) { return retval; }
            // JavaP.g:1319:5: (local= localVariableDeclaration | el= expressionList )
            int alt128=2;
            alt128 = dfa128.predict(input);
            switch (alt128) {
                case 1 :
                    // JavaP.g:1319:9: local= localVariableDeclaration
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_localVariableDeclaration_in_forInit7032);
                    local=localVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, local.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element=local.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1320:9: el= expressionList
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_expressionList_in_forInit7046);
                    el=expressionList();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, el.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new StatementExprList(); for(Expression expr: el.element){((StatementExprList)retval.element).addStatement(new StatementExpression(expr));};
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              assert(retval.element != null);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 102, forInit_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "forInit"

    public static class enhancedForControl_return extends ParserRuleReturnScope {
        public ForControl element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "enhancedForControl"
    // JavaP.g:1323:1: enhancedForControl returns [ForControl element] : local= localVariableDeclaration ':' ex= expression ;
    public final AspectJLo_JavaP.enhancedForControl_return enhancedForControl() throws RecognitionException {
        AspectJLo_JavaP.enhancedForControl_return retval = new AspectJLo_JavaP.enhancedForControl_return();
        retval.start = input.LT(1);
        int enhancedForControl_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal179=null;
        AspectJLo_JavaP.localVariableDeclaration_return local = null;

        AspectJLoParser.expression_return ex = null;


        Object char_literal179_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 103) ) { return retval; }
            // JavaP.g:1325:5: (local= localVariableDeclaration ':' ex= expression )
            // JavaP.g:1325:9: local= localVariableDeclaration ':' ex= expression
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_localVariableDeclaration_in_enhancedForControl7081);
            local=localVariableDeclaration();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, local.getTree());
            char_literal179=(Token)match(input,81,FOLLOW_81_in_enhancedForControl7083); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal179_tree = (Object)adaptor.create(char_literal179);
            adaptor.addChild(root_0, char_literal179_tree);
            }
            pushFollow(FOLLOW_expression_in_enhancedForControl7087);
            ex=gAspectJLo.expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new EnhancedForControl(local.element, ex.element);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              assert(retval.element != null);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 103, enhancedForControl_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "enhancedForControl"

    public static class forUpdate_return extends ParserRuleReturnScope {
        public StatementExprList element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "forUpdate"
    // JavaP.g:1328:1: forUpdate returns [StatementExprList element] : el= expressionList ;
    public final AspectJLo_JavaP.forUpdate_return forUpdate() throws RecognitionException {
        AspectJLo_JavaP.forUpdate_return retval = new AspectJLo_JavaP.forUpdate_return();
        retval.start = input.LT(1);
        int forUpdate_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.expressionList_return el = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 104) ) { return retval; }
            // JavaP.g:1329:5: (el= expressionList )
            // JavaP.g:1329:9: el= expressionList
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_expressionList_in_forUpdate7114);
            el=expressionList();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, el.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new StatementExprList(); for(Expression expr: el.element){((StatementExprList)retval.element).addStatement(new StatementExpression(expr));};
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 104, forUpdate_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "forUpdate"

    public static class parExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "parExpression"
    // JavaP.g:1334:1: parExpression returns [Expression element] : s= '(' expr= expression e= ')' ;
    public final AspectJLo_JavaP.parExpression_return parExpression() throws RecognitionException {
        AspectJLo_JavaP.parExpression_return retval = new AspectJLo_JavaP.parExpression_return();
        retval.start = input.LT(1);
        int parExpression_StartIndex = input.index();
        Object root_0 = null;

        Token s=null;
        Token e=null;
        AspectJLoParser.expression_return expr = null;


        Object s_tree=null;
        Object e_tree=null;


        Token start=null;
        Token stop=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 105) ) { return retval; }
            // JavaP.g:1342:5: (s= '(' expr= expression e= ')' )
            // JavaP.g:1342:9: s= '(' expr= expression e= ')'
            {
            root_0 = (Object)adaptor.nil();

            s=(Token)match(input,72,FOLLOW_72_in_parExpression7151); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            s_tree = (Object)adaptor.create(s);
            adaptor.addChild(root_0, s_tree);
            }
            pushFollow(FOLLOW_expression_in_parExpression7155);
            expr=gAspectJLo.expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, expr.getTree());
            if ( state.backtracking==0 ) {
              retval.element = expr.element;
            }
            e=(Token)match(input,73,FOLLOW_73_in_parExpression7161); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            e_tree = (Object)adaptor.create(e);
            adaptor.addChild(root_0, e_tree);
            }
            if ( state.backtracking==0 ) {

                        start = s;
                        stop = e;
                      
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {

              setLocation(retval.element,start,stop);

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 105, parExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "parExpression"

    public static class expressionList_return extends ParserRuleReturnScope {
        public List<Expression> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "expressionList"
    // JavaP.g:1349:1: expressionList returns [List<Expression> element] : e= expression ( ',' ex= expression )* ;
    public final AspectJLo_JavaP.expressionList_return expressionList() throws RecognitionException {
        AspectJLo_JavaP.expressionList_return retval = new AspectJLo_JavaP.expressionList_return();
        retval.start = input.LT(1);
        int expressionList_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal180=null;
        AspectJLoParser.expression_return e = null;

        AspectJLoParser.expression_return ex = null;


        Object char_literal180_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 106) ) { return retval; }
            // JavaP.g:1350:5: (e= expression ( ',' ex= expression )* )
            // JavaP.g:1350:9: e= expression ( ',' ex= expression )*
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
              retval.element = new ArrayList<Expression>();
            }
            pushFollow(FOLLOW_expression_in_expressionList7202);
            e=gAspectJLo.expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
              if(e.element == null) {System.out.println((e!=null?input.toString(e.start,e.stop):null));throw new RuntimeException("parser error");}
                       retval.element.add(e.element);
            }
            // JavaP.g:1353:10: ( ',' ex= expression )*
            loop129:
            do {
                int alt129=2;
                int LA129_0 = input.LA(1);

                if ( (LA129_0==47) ) {
                    alt129=1;
                }


                switch (alt129) {
            	case 1 :
            	    // JavaP.g:1353:11: ',' ex= expression
            	    {
            	    char_literal180=(Token)match(input,47,FOLLOW_47_in_expressionList7225); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal180_tree = (Object)adaptor.create(char_literal180);
            	    adaptor.addChild(root_0, char_literal180_tree);
            	    }
            	    pushFollow(FOLLOW_expression_in_expressionList7229);
            	    ex=gAspectJLo.expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element.add(ex.element);
            	    }

            	    }
            	    break;

            	default :
            	    break loop129;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 106, expressionList_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "expressionList"

    public static class statementExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "statementExpression"
    // JavaP.g:1356:1: statementExpression returns [Expression element] : e= expression ;
    public final AspectJLo_JavaP.statementExpression_return statementExpression() throws RecognitionException {
        AspectJLo_JavaP.statementExpression_return retval = new AspectJLo_JavaP.statementExpression_return();
        retval.start = input.LT(1);
        int statementExpression_StartIndex = input.index();
        Object root_0 = null;

        AspectJLoParser.expression_return e = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 107) ) { return retval; }
            // JavaP.g:1357:5: (e= expression )
            // JavaP.g:1357:9: e= expression
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_expression_in_statementExpression7258);
            e=gAspectJLo.expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
              retval.element = e.element;
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 107, statementExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "statementExpression"

    public static class constantExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "constantExpression"
    // JavaP.g:1360:1: constantExpression returns [Expression element] : e= expression ;
    public final AspectJLo_JavaP.constantExpression_return constantExpression() throws RecognitionException {
        AspectJLo_JavaP.constantExpression_return retval = new AspectJLo_JavaP.constantExpression_return();
        retval.start = input.LT(1);
        int constantExpression_StartIndex = input.index();
        Object root_0 = null;

        AspectJLoParser.expression_return e = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 108) ) { return retval; }
            // JavaP.g:1361:5: (e= expression )
            // JavaP.g:1361:9: e= expression
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_expression_in_constantExpression7289);
            e=gAspectJLo.expression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, e.getTree());
            if ( state.backtracking==0 ) {
              retval.element = e.element;
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 108, constantExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "constantExpression"

    public static class assignmentOperator_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "assignmentOperator"
    // JavaP.g:1379:1: assignmentOperator : ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | ( '<' '<' '=' )=>t1= '<' t2= '<' t3= '=' {...}? | ( '>' '>' '>' '=' )=>t1= '>' t2= '>' t3= '>' t4= '=' {...}? | ( '>' '>' '=' )=>t1= '>' t2= '>' t3= '=' {...}?);
    public final AspectJLo_JavaP.assignmentOperator_return assignmentOperator() throws RecognitionException {
        AspectJLo_JavaP.assignmentOperator_return retval = new AspectJLo_JavaP.assignmentOperator_return();
        retval.start = input.LT(1);
        int assignmentOperator_StartIndex = input.index();
        Object root_0 = null;

        Token t1=null;
        Token t2=null;
        Token t3=null;
        Token t4=null;
        Token char_literal181=null;
        Token string_literal182=null;
        Token string_literal183=null;
        Token string_literal184=null;
        Token string_literal185=null;
        Token string_literal186=null;
        Token string_literal187=null;
        Token string_literal188=null;
        Token string_literal189=null;

        Object t1_tree=null;
        Object t2_tree=null;
        Object t3_tree=null;
        Object t4_tree=null;
        Object char_literal181_tree=null;
        Object string_literal182_tree=null;
        Object string_literal183_tree=null;
        Object string_literal184_tree=null;
        Object string_literal185_tree=null;
        Object string_literal186_tree=null;
        Object string_literal187_tree=null;
        Object string_literal188_tree=null;
        Object string_literal189_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 110) ) { return retval; }
            // JavaP.g:1380:5: ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | ( '<' '<' '=' )=>t1= '<' t2= '<' t3= '=' {...}? | ( '>' '>' '>' '=' )=>t1= '>' t2= '>' t3= '>' t4= '=' {...}? | ( '>' '>' '=' )=>t1= '>' t2= '>' t3= '=' {...}?)
            int alt131=12;
            alt131 = dfa131.predict(input);
            switch (alt131) {
                case 1 :
                    // JavaP.g:1380:9: '='
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal181=(Token)match(input,57,FOLLOW_57_in_assignmentOperator7376); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal181_tree = (Object)adaptor.create(char_literal181);
                    adaptor.addChild(root_0, char_literal181_tree);
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1381:9: '+='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal182=(Token)match(input,96,FOLLOW_96_in_assignmentOperator7386); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal182_tree = (Object)adaptor.create(string_literal182);
                    adaptor.addChild(root_0, string_literal182_tree);
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:1382:9: '-='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal183=(Token)match(input,97,FOLLOW_97_in_assignmentOperator7396); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal183_tree = (Object)adaptor.create(string_literal183);
                    adaptor.addChild(root_0, string_literal183_tree);
                    }

                    }
                    break;
                case 4 :
                    // JavaP.g:1383:9: '*='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal184=(Token)match(input,98,FOLLOW_98_in_assignmentOperator7406); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal184_tree = (Object)adaptor.create(string_literal184);
                    adaptor.addChild(root_0, string_literal184_tree);
                    }

                    }
                    break;
                case 5 :
                    // JavaP.g:1384:9: '/='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal185=(Token)match(input,99,FOLLOW_99_in_assignmentOperator7416); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal185_tree = (Object)adaptor.create(string_literal185);
                    adaptor.addChild(root_0, string_literal185_tree);
                    }

                    }
                    break;
                case 6 :
                    // JavaP.g:1385:9: '&='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal186=(Token)match(input,100,FOLLOW_100_in_assignmentOperator7426); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal186_tree = (Object)adaptor.create(string_literal186);
                    adaptor.addChild(root_0, string_literal186_tree);
                    }

                    }
                    break;
                case 7 :
                    // JavaP.g:1386:9: '|='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal187=(Token)match(input,101,FOLLOW_101_in_assignmentOperator7436); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal187_tree = (Object)adaptor.create(string_literal187);
                    adaptor.addChild(root_0, string_literal187_tree);
                    }

                    }
                    break;
                case 8 :
                    // JavaP.g:1387:9: '^='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal188=(Token)match(input,102,FOLLOW_102_in_assignmentOperator7446); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal188_tree = (Object)adaptor.create(string_literal188);
                    adaptor.addChild(root_0, string_literal188_tree);
                    }

                    }
                    break;
                case 9 :
                    // JavaP.g:1388:9: '%='
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal189=(Token)match(input,103,FOLLOW_103_in_assignmentOperator7456); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal189_tree = (Object)adaptor.create(string_literal189);
                    adaptor.addChild(root_0, string_literal189_tree);
                    }

                    }
                    break;
                case 10 :
                    // JavaP.g:1389:9: ( '<' '<' '=' )=>t1= '<' t2= '<' t3= '=' {...}?
                    {
                    root_0 = (Object)adaptor.nil();

                    t1=(Token)match(input,46,FOLLOW_46_in_assignmentOperator7477); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t1_tree = (Object)adaptor.create(t1);
                    adaptor.addChild(root_0, t1_tree);
                    }
                    t2=(Token)match(input,46,FOLLOW_46_in_assignmentOperator7481); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t2_tree = (Object)adaptor.create(t2);
                    adaptor.addChild(root_0, t2_tree);
                    }
                    t3=(Token)match(input,57,FOLLOW_57_in_assignmentOperator7485); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t3_tree = (Object)adaptor.create(t3);
                    adaptor.addChild(root_0, t3_tree);
                    }
                    if ( !(( t1.getLine() == t2.getLine() &&
                              t1.getCharPositionInLine() + 1 == t2.getCharPositionInLine() && 
                              t2.getLine() == t3.getLine() && 
                              t2.getCharPositionInLine() + 1 == t3.getCharPositionInLine() )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "assignmentOperator", " $t1.getLine() == $t2.getLine() &&\r\n          $t1.getCharPositionInLine() + 1 == $t2.getCharPositionInLine() && \r\n          $t2.getLine() == $t3.getLine() && \r\n          $t2.getCharPositionInLine() + 1 == $t3.getCharPositionInLine() ");
                    }

                    }
                    break;
                case 11 :
                    // JavaP.g:1394:9: ( '>' '>' '>' '=' )=>t1= '>' t2= '>' t3= '>' t4= '=' {...}?
                    {
                    root_0 = (Object)adaptor.nil();

                    t1=(Token)match(input,48,FOLLOW_48_in_assignmentOperator7519); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t1_tree = (Object)adaptor.create(t1);
                    adaptor.addChild(root_0, t1_tree);
                    }
                    t2=(Token)match(input,48,FOLLOW_48_in_assignmentOperator7523); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t2_tree = (Object)adaptor.create(t2);
                    adaptor.addChild(root_0, t2_tree);
                    }
                    t3=(Token)match(input,48,FOLLOW_48_in_assignmentOperator7527); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t3_tree = (Object)adaptor.create(t3);
                    adaptor.addChild(root_0, t3_tree);
                    }
                    t4=(Token)match(input,57,FOLLOW_57_in_assignmentOperator7531); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t4_tree = (Object)adaptor.create(t4);
                    adaptor.addChild(root_0, t4_tree);
                    }
                    if ( !(( t1.getLine() == t2.getLine() && 
                              t1.getCharPositionInLine() + 1 == t2.getCharPositionInLine() &&
                              t2.getLine() == t3.getLine() && 
                              t2.getCharPositionInLine() + 1 == t3.getCharPositionInLine() &&
                              t3.getLine() == t4.getLine() && 
                              t3.getCharPositionInLine() + 1 == t4.getCharPositionInLine() )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "assignmentOperator", " $t1.getLine() == $t2.getLine() && \r\n          $t1.getCharPositionInLine() + 1 == $t2.getCharPositionInLine() &&\r\n          $t2.getLine() == $t3.getLine() && \r\n          $t2.getCharPositionInLine() + 1 == $t3.getCharPositionInLine() &&\r\n          $t3.getLine() == $t4.getLine() && \r\n          $t3.getCharPositionInLine() + 1 == $t4.getCharPositionInLine() ");
                    }

                    }
                    break;
                case 12 :
                    // JavaP.g:1401:9: ( '>' '>' '=' )=>t1= '>' t2= '>' t3= '=' {...}?
                    {
                    root_0 = (Object)adaptor.nil();

                    t1=(Token)match(input,48,FOLLOW_48_in_assignmentOperator7562); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t1_tree = (Object)adaptor.create(t1);
                    adaptor.addChild(root_0, t1_tree);
                    }
                    t2=(Token)match(input,48,FOLLOW_48_in_assignmentOperator7566); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t2_tree = (Object)adaptor.create(t2);
                    adaptor.addChild(root_0, t2_tree);
                    }
                    t3=(Token)match(input,57,FOLLOW_57_in_assignmentOperator7570); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t3_tree = (Object)adaptor.create(t3);
                    adaptor.addChild(root_0, t3_tree);
                    }
                    if ( !(( t1.getLine() == t2.getLine() && 
                              t1.getCharPositionInLine() + 1 == t2.getCharPositionInLine() && 
                              t2.getLine() == t3.getLine() && 
                              t2.getCharPositionInLine() + 1 == t3.getCharPositionInLine() )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "assignmentOperator", " $t1.getLine() == $t2.getLine() && \r\n          $t1.getCharPositionInLine() + 1 == $t2.getCharPositionInLine() && \r\n          $t2.getLine() == $t3.getLine() && \r\n          $t2.getCharPositionInLine() + 1 == $t3.getCharPositionInLine() ");
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 110, assignmentOperator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "assignmentOperator"

    public static class conditionalExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "conditionalExpression"
    // JavaP.g:1408:1: conditionalExpression returns [Expression element] : ex= conditionalOrExpression ( '?' exx= expression ':' exxx= expression )? ;
    public final AspectJLo_JavaP.conditionalExpression_return conditionalExpression() throws RecognitionException {
        AspectJLo_JavaP.conditionalExpression_return retval = new AspectJLo_JavaP.conditionalExpression_return();
        retval.start = input.LT(1);
        int conditionalExpression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal190=null;
        Token char_literal191=null;
        AspectJLo_JavaP.conditionalOrExpression_return ex = null;

        AspectJLoParser.expression_return exx = null;

        AspectJLoParser.expression_return exxx = null;


        Object char_literal190_tree=null;
        Object char_literal191_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 111) ) { return retval; }
            // JavaP.g:1409:5: (ex= conditionalOrExpression ( '?' exx= expression ':' exxx= expression )? )
            // JavaP.g:1409:9: ex= conditionalOrExpression ( '?' exx= expression ':' exxx= expression )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_conditionalOrExpression_in_conditionalExpression7605);
            ex=conditionalOrExpression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
            if ( state.backtracking==0 ) {
              retval.element = ex.element;
            }
            // JavaP.g:1409:66: ( '?' exx= expression ':' exxx= expression )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==70) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // JavaP.g:1409:68: '?' exx= expression ':' exxx= expression
                    {
                    char_literal190=(Token)match(input,70,FOLLOW_70_in_conditionalExpression7610); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal190_tree = (Object)adaptor.create(char_literal190);
                    adaptor.addChild(root_0, char_literal190_tree);
                    }
                    pushFollow(FOLLOW_expression_in_conditionalExpression7614);
                    exx=gAspectJLo.expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, exx.getTree());
                    char_literal191=(Token)match(input,81,FOLLOW_81_in_conditionalExpression7616); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal191_tree = (Object)adaptor.create(char_literal191);
                    adaptor.addChild(root_0, char_literal191_tree);
                    }
                    pushFollow(FOLLOW_expression_in_conditionalExpression7620);
                    exxx=gAspectJLo.expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, exxx.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new ConditionalExpression(retval.element,exx.element,exxx.element);
                               setLocation(retval.element,retval.start,exxx.stop);
                              
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 111, conditionalExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "conditionalExpression"

    public static class conditionalOrExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "conditionalOrExpression"
    // JavaP.g:1416:1: conditionalOrExpression returns [Expression element] : ex= conditionalAndExpression ( '||' exx= conditionalAndExpression )* ;
    public final AspectJLo_JavaP.conditionalOrExpression_return conditionalOrExpression() throws RecognitionException {
        AspectJLo_JavaP.conditionalOrExpression_return retval = new AspectJLo_JavaP.conditionalOrExpression_return();
        retval.start = input.LT(1);
        int conditionalOrExpression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal192=null;
        AspectJLo_JavaP.conditionalAndExpression_return ex = null;

        AspectJLo_JavaP.conditionalAndExpression_return exx = null;


        Object string_literal192_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 112) ) { return retval; }
            // JavaP.g:1417:5: (ex= conditionalAndExpression ( '||' exx= conditionalAndExpression )* )
            // JavaP.g:1417:9: ex= conditionalAndExpression ( '||' exx= conditionalAndExpression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_conditionalAndExpression_in_conditionalOrExpression7663);
            ex=conditionalAndExpression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
            if ( state.backtracking==0 ) {
              retval.element = ex.element;
            }
            // JavaP.g:1417:68: ( '||' exx= conditionalAndExpression )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==104) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // JavaP.g:1417:70: '||' exx= conditionalAndExpression
            	    {
            	    string_literal192=(Token)match(input,104,FOLLOW_104_in_conditionalOrExpression7669); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    string_literal192_tree = (Object)adaptor.create(string_literal192);
            	    adaptor.addChild(root_0, string_literal192_tree);
            	    }
            	    pushFollow(FOLLOW_conditionalAndExpression_in_conditionalOrExpression7673);
            	    exx=conditionalAndExpression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exx.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element = new ConditionalOrExpression(retval.element, exx.element);
            	               setLocation(retval.element,retval.start,exx.stop);
            	              
            	    }

            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 112, conditionalOrExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "conditionalOrExpression"

    public static class conditionalAndExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "conditionalAndExpression"
    // JavaP.g:1423:1: conditionalAndExpression returns [Expression element] : ex= inclusiveOrExpression ( '&&' exx= inclusiveOrExpression )* ;
    public final AspectJLo_JavaP.conditionalAndExpression_return conditionalAndExpression() throws RecognitionException {
        AspectJLo_JavaP.conditionalAndExpression_return retval = new AspectJLo_JavaP.conditionalAndExpression_return();
        retval.start = input.LT(1);
        int conditionalAndExpression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal193=null;
        AspectJLo_JavaP.inclusiveOrExpression_return ex = null;

        AspectJLo_JavaP.inclusiveOrExpression_return exx = null;


        Object string_literal193_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 113) ) { return retval; }
            // JavaP.g:1424:5: (ex= inclusiveOrExpression ( '&&' exx= inclusiveOrExpression )* )
            // JavaP.g:1424:9: ex= inclusiveOrExpression ( '&&' exx= inclusiveOrExpression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_inclusiveOrExpression_in_conditionalAndExpression7711);
            ex=inclusiveOrExpression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
            if ( state.backtracking==0 ) {
              retval.element = ex.element;
            }
            // JavaP.g:1424:65: ( '&&' exx= inclusiveOrExpression )*
            loop134:
            do {
                int alt134=2;
                int LA134_0 = input.LA(1);

                if ( (LA134_0==105) ) {
                    alt134=1;
                }


                switch (alt134) {
            	case 1 :
            	    // JavaP.g:1424:67: '&&' exx= inclusiveOrExpression
            	    {
            	    string_literal193=(Token)match(input,105,FOLLOW_105_in_conditionalAndExpression7717); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    string_literal193_tree = (Object)adaptor.create(string_literal193);
            	    adaptor.addChild(root_0, string_literal193_tree);
            	    }
            	    pushFollow(FOLLOW_inclusiveOrExpression_in_conditionalAndExpression7721);
            	    exx=inclusiveOrExpression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exx.getTree());
            	    if ( state.backtracking==0 ) {
            	      retval.element = new ConditionalAndExpression(retval.element, exx.element);
            	               setLocation(retval.element,retval.start,exx.stop);
            	              
            	    }

            	    }
            	    break;

            	default :
            	    break loop134;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 113, conditionalAndExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "conditionalAndExpression"

    public static class inclusiveOrExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "inclusiveOrExpression"
    // JavaP.g:1430:1: inclusiveOrExpression returns [Expression element] : ex= exclusiveOrExpression ( '|' exx= exclusiveOrExpression )* ;
    public final AspectJLo_JavaP.inclusiveOrExpression_return inclusiveOrExpression() throws RecognitionException {
        AspectJLo_JavaP.inclusiveOrExpression_return retval = new AspectJLo_JavaP.inclusiveOrExpression_return();
        retval.start = input.LT(1);
        int inclusiveOrExpression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal194=null;
        AspectJLo_JavaP.exclusiveOrExpression_return ex = null;

        AspectJLo_JavaP.exclusiveOrExpression_return exx = null;


        Object char_literal194_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 114) ) { return retval; }
            // JavaP.g:1431:5: (ex= exclusiveOrExpression ( '|' exx= exclusiveOrExpression )* )
            // JavaP.g:1431:9: ex= exclusiveOrExpression ( '|' exx= exclusiveOrExpression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_exclusiveOrExpression_in_inclusiveOrExpression7759);
            ex=exclusiveOrExpression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
            if ( state.backtracking==0 ) {
              retval.element = ex.element;
            }
            // JavaP.g:1431:65: ( '|' exx= exclusiveOrExpression )*
            loop135:
            do {
                int alt135=2;
                int LA135_0 = input.LA(1);

                if ( (LA135_0==106) ) {
                    alt135=1;
                }


                switch (alt135) {
            	case 1 :
            	    // JavaP.g:1431:67: '|' exx= exclusiveOrExpression
            	    {
            	    char_literal194=(Token)match(input,106,FOLLOW_106_in_inclusiveOrExpression7765); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal194_tree = (Object)adaptor.create(char_literal194);
            	    adaptor.addChild(root_0, char_literal194_tree);
            	    }
            	    pushFollow(FOLLOW_exclusiveOrExpression_in_inclusiveOrExpression7769);
            	    exx=exclusiveOrExpression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exx.getTree());
            	    if ( state.backtracking==0 ) {

            	               retval.element = new InfixOperatorInvocation("|", retval.element);
            	               ((InfixOperatorInvocation)retval.element).addArgument(exx.element);
            	               setLocation(retval.element,retval.start,exx.stop);
            	              
            	    }

            	    }
            	    break;

            	default :
            	    break loop135;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 114, inclusiveOrExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "inclusiveOrExpression"

    public static class exclusiveOrExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "exclusiveOrExpression"
    // JavaP.g:1439:1: exclusiveOrExpression returns [Expression element] : ex= andExpression ( '^' exx= andExpression )* ;
    public final AspectJLo_JavaP.exclusiveOrExpression_return exclusiveOrExpression() throws RecognitionException {
        AspectJLo_JavaP.exclusiveOrExpression_return retval = new AspectJLo_JavaP.exclusiveOrExpression_return();
        retval.start = input.LT(1);
        int exclusiveOrExpression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal195=null;
        AspectJLo_JavaP.andExpression_return ex = null;

        AspectJLo_JavaP.andExpression_return exx = null;


        Object char_literal195_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 115) ) { return retval; }
            // JavaP.g:1440:5: (ex= andExpression ( '^' exx= andExpression )* )
            // JavaP.g:1440:9: ex= andExpression ( '^' exx= andExpression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_andExpression_in_exclusiveOrExpression7807);
            ex=andExpression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
            if ( state.backtracking==0 ) {
              retval.element = ex.element;
            }
            // JavaP.g:1440:57: ( '^' exx= andExpression )*
            loop136:
            do {
                int alt136=2;
                int LA136_0 = input.LA(1);

                if ( (LA136_0==107) ) {
                    alt136=1;
                }


                switch (alt136) {
            	case 1 :
            	    // JavaP.g:1440:59: '^' exx= andExpression
            	    {
            	    char_literal195=(Token)match(input,107,FOLLOW_107_in_exclusiveOrExpression7813); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal195_tree = (Object)adaptor.create(char_literal195);
            	    adaptor.addChild(root_0, char_literal195_tree);
            	    }
            	    pushFollow(FOLLOW_andExpression_in_exclusiveOrExpression7817);
            	    exx=andExpression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exx.getTree());
            	    if ( state.backtracking==0 ) {

            	               retval.element = new InfixOperatorInvocation("^", retval.element);
            	               ((InfixOperatorInvocation)retval.element).addArgument(exx.element);
            	               setLocation(retval.element,retval.start,exx.stop);
            	              
            	    }

            	    }
            	    break;

            	default :
            	    break loop136;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 115, exclusiveOrExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "exclusiveOrExpression"

    public static class andExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "andExpression"
    // JavaP.g:1448:1: andExpression returns [Expression element] : ex= equalityExpression ( '&' exx= equalityExpression )* ;
    public final AspectJLo_JavaP.andExpression_return andExpression() throws RecognitionException {
        AspectJLo_JavaP.andExpression_return retval = new AspectJLo_JavaP.andExpression_return();
        retval.start = input.LT(1);
        int andExpression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal196=null;
        AspectJLo_JavaP.equalityExpression_return ex = null;

        AspectJLo_JavaP.equalityExpression_return exx = null;


        Object char_literal196_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 116) ) { return retval; }
            // JavaP.g:1449:5: (ex= equalityExpression ( '&' exx= equalityExpression )* )
            // JavaP.g:1449:9: ex= equalityExpression ( '&' exx= equalityExpression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_equalityExpression_in_andExpression7851);
            ex=equalityExpression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
            if ( state.backtracking==0 ) {
              retval.element = ex.element;
            }
            // JavaP.g:1449:62: ( '&' exx= equalityExpression )*
            loop137:
            do {
                int alt137=2;
                int LA137_0 = input.LA(1);

                if ( (LA137_0==49) ) {
                    alt137=1;
                }


                switch (alt137) {
            	case 1 :
            	    // JavaP.g:1449:64: '&' exx= equalityExpression
            	    {
            	    char_literal196=(Token)match(input,49,FOLLOW_49_in_andExpression7857); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal196_tree = (Object)adaptor.create(char_literal196);
            	    adaptor.addChild(root_0, char_literal196_tree);
            	    }
            	    pushFollow(FOLLOW_equalityExpression_in_andExpression7861);
            	    exx=equalityExpression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exx.getTree());
            	    if ( state.backtracking==0 ) {

            	               retval.element = new InfixOperatorInvocation("&", retval.element);
            	               ((InfixOperatorInvocation)retval.element).addArgument(exx.element);
            	               setLocation(retval.element,retval.start,exx.stop);
            	              
            	    }

            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 116, andExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "andExpression"

    public static class equalityExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "equalityExpression"
    // JavaP.g:1457:1: equalityExpression returns [Expression element] : ex= instanceOfExpression ( ( '==' | '!=' ) exx= instanceOfExpression )* ;
    public final AspectJLo_JavaP.equalityExpression_return equalityExpression() throws RecognitionException {
        AspectJLo_JavaP.equalityExpression_return retval = new AspectJLo_JavaP.equalityExpression_return();
        retval.start = input.LT(1);
        int equalityExpression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal197=null;
        Token string_literal198=null;
        AspectJLo_JavaP.instanceOfExpression_return ex = null;

        AspectJLo_JavaP.instanceOfExpression_return exx = null;


        Object string_literal197_tree=null;
        Object string_literal198_tree=null;

        String op=null;
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 117) ) { return retval; }
            // JavaP.g:1459:5: (ex= instanceOfExpression ( ( '==' | '!=' ) exx= instanceOfExpression )* )
            // JavaP.g:1459:9: ex= instanceOfExpression ( ( '==' | '!=' ) exx= instanceOfExpression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_instanceOfExpression_in_equalityExpression7899);
            ex=instanceOfExpression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
            if ( state.backtracking==0 ) {
              retval.element = ex.element;
            }
            // JavaP.g:1460:11: ( ( '==' | '!=' ) exx= instanceOfExpression )*
            loop139:
            do {
                int alt139=2;
                int LA139_0 = input.LA(1);

                if ( ((LA139_0>=108 && LA139_0<=109)) ) {
                    alt139=1;
                }


                switch (alt139) {
            	case 1 :
            	    // JavaP.g:1460:13: ( '==' | '!=' ) exx= instanceOfExpression
            	    {
            	    // JavaP.g:1460:13: ( '==' | '!=' )
            	    int alt138=2;
            	    int LA138_0 = input.LA(1);

            	    if ( (LA138_0==108) ) {
            	        alt138=1;
            	    }
            	    else if ( (LA138_0==109) ) {
            	        alt138=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 138, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt138) {
            	        case 1 :
            	            // JavaP.g:1460:14: '=='
            	            {
            	            string_literal197=(Token)match(input,108,FOLLOW_108_in_equalityExpression7918); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            string_literal197_tree = (Object)adaptor.create(string_literal197);
            	            adaptor.addChild(root_0, string_literal197_tree);
            	            }
            	            if ( state.backtracking==0 ) {
            	              op="==";
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // JavaP.g:1460:32: '!='
            	            {
            	            string_literal198=(Token)match(input,109,FOLLOW_109_in_equalityExpression7924); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            string_literal198_tree = (Object)adaptor.create(string_literal198);
            	            adaptor.addChild(root_0, string_literal198_tree);
            	            }
            	            if ( state.backtracking==0 ) {
            	              op="!=";
            	            }

            	            }
            	            break;

            	    }

            	    pushFollow(FOLLOW_instanceOfExpression_in_equalityExpression7931);
            	    exx=instanceOfExpression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exx.getTree());
            	    if ( state.backtracking==0 ) {

            	               retval.element = new InfixOperatorInvocation(op, retval.element);
            	               ((InfixOperatorInvocation)retval.element).addArgument(exx.element);
            	               setLocation(retval.element,retval.start,exx.stop);
            	              
            	    }

            	    }
            	    break;

            	default :
            	    break loop139;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 117, equalityExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "equalityExpression"

    public static class instanceOfExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "instanceOfExpression"
    // JavaP.g:1468:1: instanceOfExpression returns [Expression element] : ex= relationalExpression ( 'instanceof' tref= type )? ;
    public final AspectJLo_JavaP.instanceOfExpression_return instanceOfExpression() throws RecognitionException {
        AspectJLo_JavaP.instanceOfExpression_return retval = new AspectJLo_JavaP.instanceOfExpression_return();
        retval.start = input.LT(1);
        int instanceOfExpression_StartIndex = input.index();
        Object root_0 = null;

        Token string_literal199=null;
        AspectJLo_JavaP.relationalExpression_return ex = null;

        AspectJLo_JavaP.type_return tref = null;


        Object string_literal199_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 118) ) { return retval; }
            // JavaP.g:1470:5: (ex= relationalExpression ( 'instanceof' tref= type )? )
            // JavaP.g:1470:9: ex= relationalExpression ( 'instanceof' tref= type )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_relationalExpression_in_instanceOfExpression7974);
            ex=relationalExpression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
            if ( state.backtracking==0 ) {

                          //if(ex.element == null) {throw new Error("retval is null");} 
                          retval.element = ex.element;
            }
            // JavaP.g:1473:8: ( 'instanceof' tref= type )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==110) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // JavaP.g:1473:9: 'instanceof' tref= type
                    {
                    string_literal199=(Token)match(input,110,FOLLOW_110_in_instanceOfExpression7987); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal199_tree = (Object)adaptor.create(string_literal199);
                    adaptor.addChild(root_0, string_literal199_tree);
                    }
                    pushFollow(FOLLOW_type_in_instanceOfExpression7991);
                    tref=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, tref.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new InstanceofExpression(ex.element, tref.element);
                               setLocation(retval.element,ex.start,tref.stop);
                             
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              check_null(retval.element);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 118, instanceOfExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "instanceOfExpression"

    public static class relationalExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "relationalExpression"
    // JavaP.g:1479:1: relationalExpression returns [Expression element] : ex= shiftExpression (op= relationalOp exx= shiftExpression )* ;
    public final AspectJLo_JavaP.relationalExpression_return relationalExpression() throws RecognitionException {
        AspectJLo_JavaP.relationalExpression_return retval = new AspectJLo_JavaP.relationalExpression_return();
        retval.start = input.LT(1);
        int relationalExpression_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.shiftExpression_return ex = null;

        AspectJLo_JavaP.relationalOp_return op = null;

        AspectJLo_JavaP.shiftExpression_return exx = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 119) ) { return retval; }
            // JavaP.g:1480:5: (ex= shiftExpression (op= relationalOp exx= shiftExpression )* )
            // JavaP.g:1480:9: ex= shiftExpression (op= relationalOp exx= shiftExpression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_shiftExpression_in_relationalExpression8028);
            ex=shiftExpression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
            if ( state.backtracking==0 ) {

                            //if(ex.element == null) {throw new Error("retval is null");}
                            retval.element = ex.element;
            }
            // JavaP.g:1482:45: (op= relationalOp exx= shiftExpression )*
            loop141:
            do {
                int alt141=2;
                int LA141_0 = input.LA(1);

                if ( (LA141_0==46) ) {
                    int LA141_2 = input.LA(2);

                    if ( (LA141_2==Identifier||(LA141_2>=FloatingPointLiteral && LA141_2<=DecimalLiteral)||(LA141_2>=Export && LA141_2<=Overrides)||LA141_2==53||LA141_2==57||(LA141_2>=62 && LA141_2<=69)||(LA141_2>=71 && LA141_2<=72)||(LA141_2>=75 && LA141_2<=78)||(LA141_2>=111 && LA141_2<=112)||(LA141_2>=115 && LA141_2<=119)||(LA141_2>=123 && LA141_2<=125)) ) {
                        alt141=1;
                    }


                }
                else if ( (LA141_0==48) ) {
                    int LA141_3 = input.LA(2);

                    if ( (LA141_3==Identifier||(LA141_3>=FloatingPointLiteral && LA141_3<=DecimalLiteral)||(LA141_3>=Export && LA141_3<=Overrides)||LA141_3==53||LA141_3==57||(LA141_3>=62 && LA141_3<=69)||(LA141_3>=71 && LA141_3<=72)||(LA141_3>=75 && LA141_3<=78)||(LA141_3>=111 && LA141_3<=112)||(LA141_3>=115 && LA141_3<=119)||(LA141_3>=123 && LA141_3<=125)) ) {
                        alt141=1;
                    }


                }


                switch (alt141) {
            	case 1 :
            	    // JavaP.g:1482:47: op= relationalOp exx= shiftExpression
            	    {
            	    pushFollow(FOLLOW_relationalOp_in_relationalExpression8036);
            	    op=relationalOp();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, op.getTree());
            	    pushFollow(FOLLOW_shiftExpression_in_relationalExpression8040);
            	    exx=shiftExpression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exx.getTree());
            	    if ( state.backtracking==0 ) {

            	               retval.element = new InfixOperatorInvocation((op!=null?input.toString(op.start,op.stop):null), retval.element);
            	               ((InfixOperatorInvocation)retval.element).addArgument(exx.element);
            	               setLocation(retval.element,ex.start,exx.stop);
            	              
            	    }

            	    }
            	    break;

            	default :
            	    break loop141;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 119, relationalExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "relationalExpression"

    public static class relationalOp_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "relationalOp"
    // JavaP.g:1491:1: relationalOp : ( ( '<' '=' )=>t1= '<' t2= '=' {...}? | ( '>' '=' )=>t1= '>' t2= '=' {...}? | '<' | '>' );
    public final AspectJLo_JavaP.relationalOp_return relationalOp() throws RecognitionException {
        AspectJLo_JavaP.relationalOp_return retval = new AspectJLo_JavaP.relationalOp_return();
        retval.start = input.LT(1);
        int relationalOp_StartIndex = input.index();
        Object root_0 = null;

        Token t1=null;
        Token t2=null;
        Token char_literal200=null;
        Token char_literal201=null;

        Object t1_tree=null;
        Object t2_tree=null;
        Object char_literal200_tree=null;
        Object char_literal201_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 120) ) { return retval; }
            // JavaP.g:1492:5: ( ( '<' '=' )=>t1= '<' t2= '=' {...}? | ( '>' '=' )=>t1= '>' t2= '=' {...}? | '<' | '>' )
            int alt142=4;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==46) ) {
                int LA142_1 = input.LA(2);

                if ( (LA142_1==57) && (synpred203_JavaP())) {
                    alt142=1;
                }
                else if ( (LA142_1==Identifier||(LA142_1>=FloatingPointLiteral && LA142_1<=DecimalLiteral)||(LA142_1>=Export && LA142_1<=Overrides)||LA142_1==53||(LA142_1>=62 && LA142_1<=69)||(LA142_1>=71 && LA142_1<=72)||(LA142_1>=75 && LA142_1<=78)||(LA142_1>=111 && LA142_1<=112)||(LA142_1>=115 && LA142_1<=119)||(LA142_1>=123 && LA142_1<=125)) ) {
                    alt142=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 142, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA142_0==48) ) {
                int LA142_2 = input.LA(2);

                if ( (LA142_2==57) && (synpred204_JavaP())) {
                    alt142=2;
                }
                else if ( (LA142_2==Identifier||(LA142_2>=FloatingPointLiteral && LA142_2<=DecimalLiteral)||(LA142_2>=Export && LA142_2<=Overrides)||LA142_2==53||(LA142_2>=62 && LA142_2<=69)||(LA142_2>=71 && LA142_2<=72)||(LA142_2>=75 && LA142_2<=78)||(LA142_2>=111 && LA142_2<=112)||(LA142_2>=115 && LA142_2<=119)||(LA142_2>=123 && LA142_2<=125)) ) {
                    alt142=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 142, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 142, 0, input);

                throw nvae;
            }
            switch (alt142) {
                case 1 :
                    // JavaP.g:1492:9: ( '<' '=' )=>t1= '<' t2= '=' {...}?
                    {
                    root_0 = (Object)adaptor.nil();

                    t1=(Token)match(input,46,FOLLOW_46_in_relationalOp8090); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t1_tree = (Object)adaptor.create(t1);
                    adaptor.addChild(root_0, t1_tree);
                    }
                    t2=(Token)match(input,57,FOLLOW_57_in_relationalOp8094); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t2_tree = (Object)adaptor.create(t2);
                    adaptor.addChild(root_0, t2_tree);
                    }
                    if ( !(( t1.getLine() == t2.getLine() && 
                              t1.getCharPositionInLine() + 1 == t2.getCharPositionInLine() )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "relationalOp", " $t1.getLine() == $t2.getLine() && \r\n          $t1.getCharPositionInLine() + 1 == $t2.getCharPositionInLine() ");
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1495:9: ( '>' '=' )=>t1= '>' t2= '=' {...}?
                    {
                    root_0 = (Object)adaptor.nil();

                    t1=(Token)match(input,48,FOLLOW_48_in_relationalOp8124); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t1_tree = (Object)adaptor.create(t1);
                    adaptor.addChild(root_0, t1_tree);
                    }
                    t2=(Token)match(input,57,FOLLOW_57_in_relationalOp8128); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t2_tree = (Object)adaptor.create(t2);
                    adaptor.addChild(root_0, t2_tree);
                    }
                    if ( !(( t1.getLine() == t2.getLine() && 
                              t1.getCharPositionInLine() + 1 == t2.getCharPositionInLine() )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "relationalOp", " $t1.getLine() == $t2.getLine() && \r\n          $t1.getCharPositionInLine() + 1 == $t2.getCharPositionInLine() ");
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:1498:9: '<'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal200=(Token)match(input,46,FOLLOW_46_in_relationalOp8149); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal200_tree = (Object)adaptor.create(char_literal200);
                    adaptor.addChild(root_0, char_literal200_tree);
                    }

                    }
                    break;
                case 4 :
                    // JavaP.g:1499:9: '>'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal201=(Token)match(input,48,FOLLOW_48_in_relationalOp8160); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal201_tree = (Object)adaptor.create(char_literal201);
                    adaptor.addChild(root_0, char_literal201_tree);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 120, relationalOp_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "relationalOp"

    public static class shiftExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "shiftExpression"
    // JavaP.g:1502:1: shiftExpression returns [Expression element] : ex= additiveExpression (op= shiftOp exx= additiveExpression )* ;
    public final AspectJLo_JavaP.shiftExpression_return shiftExpression() throws RecognitionException {
        AspectJLo_JavaP.shiftExpression_return retval = new AspectJLo_JavaP.shiftExpression_return();
        retval.start = input.LT(1);
        int shiftExpression_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.additiveExpression_return ex = null;

        AspectJLo_JavaP.shiftOp_return op = null;

        AspectJLo_JavaP.additiveExpression_return exx = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 121) ) { return retval; }
            // JavaP.g:1503:5: (ex= additiveExpression (op= shiftOp exx= additiveExpression )* )
            // JavaP.g:1503:9: ex= additiveExpression (op= shiftOp exx= additiveExpression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_additiveExpression_in_shiftExpression8186);
            ex=additiveExpression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
            if ( state.backtracking==0 ) {
              check_null(ex.element); retval.element = ex.element;
            }
            // JavaP.g:1503:86: (op= shiftOp exx= additiveExpression )*
            loop143:
            do {
                int alt143=2;
                int LA143_0 = input.LA(1);

                if ( (LA143_0==46) ) {
                    int LA143_1 = input.LA(2);

                    if ( (LA143_1==46) ) {
                        int LA143_4 = input.LA(3);

                        if ( (LA143_4==Identifier||(LA143_4>=FloatingPointLiteral && LA143_4<=DecimalLiteral)||(LA143_4>=Export && LA143_4<=Overrides)||LA143_4==53||(LA143_4>=62 && LA143_4<=69)||(LA143_4>=71 && LA143_4<=72)||(LA143_4>=75 && LA143_4<=78)||(LA143_4>=111 && LA143_4<=112)||(LA143_4>=115 && LA143_4<=119)||(LA143_4>=123 && LA143_4<=125)) ) {
                            alt143=1;
                        }


                    }


                }
                else if ( (LA143_0==48) ) {
                    int LA143_2 = input.LA(2);

                    if ( (LA143_2==48) ) {
                        int LA143_5 = input.LA(3);

                        if ( (LA143_5==48) ) {
                            int LA143_7 = input.LA(4);

                            if ( (LA143_7==Identifier||(LA143_7>=FloatingPointLiteral && LA143_7<=DecimalLiteral)||(LA143_7>=Export && LA143_7<=Overrides)||LA143_7==53||(LA143_7>=62 && LA143_7<=69)||(LA143_7>=71 && LA143_7<=72)||(LA143_7>=75 && LA143_7<=78)||(LA143_7>=111 && LA143_7<=112)||(LA143_7>=115 && LA143_7<=119)||(LA143_7>=123 && LA143_7<=125)) ) {
                                alt143=1;
                            }


                        }
                        else if ( (LA143_5==Identifier||(LA143_5>=FloatingPointLiteral && LA143_5<=DecimalLiteral)||(LA143_5>=Export && LA143_5<=Overrides)||LA143_5==53||(LA143_5>=62 && LA143_5<=69)||(LA143_5>=71 && LA143_5<=72)||(LA143_5>=75 && LA143_5<=78)||(LA143_5>=111 && LA143_5<=112)||(LA143_5>=115 && LA143_5<=119)||(LA143_5>=123 && LA143_5<=125)) ) {
                            alt143=1;
                        }


                    }


                }


                switch (alt143) {
            	case 1 :
            	    // JavaP.g:1503:88: op= shiftOp exx= additiveExpression
            	    {
            	    pushFollow(FOLLOW_shiftOp_in_shiftExpression8194);
            	    op=shiftOp();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, op.getTree());
            	    pushFollow(FOLLOW_additiveExpression_in_shiftExpression8198);
            	    exx=additiveExpression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exx.getTree());
            	    if ( state.backtracking==0 ) {

            	               retval.element = new InfixOperatorInvocation((op!=null?input.toString(op.start,op.stop):null), retval.element);
            	               ((InfixOperatorInvocation)retval.element).addArgument(exx.element);
            	               setLocation(retval.element,ex.start,exx.stop);
            	              
            	    }

            	    }
            	    break;

            	default :
            	    break loop143;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 121, shiftExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "shiftExpression"

    public static class shiftOp_return extends ParserRuleReturnScope {
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "shiftOp"
    // JavaP.g:1512:1: shiftOp : ( ( '<' '<' )=>t1= '<' t2= '<' {...}? | ( '>' '>' '>' )=>t1= '>' t2= '>' t3= '>' {...}? | ( '>' '>' )=>t1= '>' t2= '>' {...}?);
    public final AspectJLo_JavaP.shiftOp_return shiftOp() throws RecognitionException {
        AspectJLo_JavaP.shiftOp_return retval = new AspectJLo_JavaP.shiftOp_return();
        retval.start = input.LT(1);
        int shiftOp_StartIndex = input.index();
        Object root_0 = null;

        Token t1=null;
        Token t2=null;
        Token t3=null;

        Object t1_tree=null;
        Object t2_tree=null;
        Object t3_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 122) ) { return retval; }
            // JavaP.g:1513:5: ( ( '<' '<' )=>t1= '<' t2= '<' {...}? | ( '>' '>' '>' )=>t1= '>' t2= '>' t3= '>' {...}? | ( '>' '>' )=>t1= '>' t2= '>' {...}?)
            int alt144=3;
            alt144 = dfa144.predict(input);
            switch (alt144) {
                case 1 :
                    // JavaP.g:1513:9: ( '<' '<' )=>t1= '<' t2= '<' {...}?
                    {
                    root_0 = (Object)adaptor.nil();

                    t1=(Token)match(input,46,FOLLOW_46_in_shiftOp8240); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t1_tree = (Object)adaptor.create(t1);
                    adaptor.addChild(root_0, t1_tree);
                    }
                    t2=(Token)match(input,46,FOLLOW_46_in_shiftOp8244); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t2_tree = (Object)adaptor.create(t2);
                    adaptor.addChild(root_0, t2_tree);
                    }
                    if ( !(( t1.getLine() == t2.getLine() && 
                              t1.getCharPositionInLine() + 1 == t2.getCharPositionInLine() )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "shiftOp", " $t1.getLine() == $t2.getLine() && \r\n          $t1.getCharPositionInLine() + 1 == $t2.getCharPositionInLine() ");
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1516:9: ( '>' '>' '>' )=>t1= '>' t2= '>' t3= '>' {...}?
                    {
                    root_0 = (Object)adaptor.nil();

                    t1=(Token)match(input,48,FOLLOW_48_in_shiftOp8276); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t1_tree = (Object)adaptor.create(t1);
                    adaptor.addChild(root_0, t1_tree);
                    }
                    t2=(Token)match(input,48,FOLLOW_48_in_shiftOp8280); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t2_tree = (Object)adaptor.create(t2);
                    adaptor.addChild(root_0, t2_tree);
                    }
                    t3=(Token)match(input,48,FOLLOW_48_in_shiftOp8284); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t3_tree = (Object)adaptor.create(t3);
                    adaptor.addChild(root_0, t3_tree);
                    }
                    if ( !(( t1.getLine() == t2.getLine() && 
                              t1.getCharPositionInLine() + 1 == t2.getCharPositionInLine() &&
                              t2.getLine() == t3.getLine() && 
                              t2.getCharPositionInLine() + 1 == t3.getCharPositionInLine() )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "shiftOp", " $t1.getLine() == $t2.getLine() && \r\n          $t1.getCharPositionInLine() + 1 == $t2.getCharPositionInLine() &&\r\n          $t2.getLine() == $t3.getLine() && \r\n          $t2.getCharPositionInLine() + 1 == $t3.getCharPositionInLine() ");
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:1521:9: ( '>' '>' )=>t1= '>' t2= '>' {...}?
                    {
                    root_0 = (Object)adaptor.nil();

                    t1=(Token)match(input,48,FOLLOW_48_in_shiftOp8314); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t1_tree = (Object)adaptor.create(t1);
                    adaptor.addChild(root_0, t1_tree);
                    }
                    t2=(Token)match(input,48,FOLLOW_48_in_shiftOp8318); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    t2_tree = (Object)adaptor.create(t2);
                    adaptor.addChild(root_0, t2_tree);
                    }
                    if ( !(( t1.getLine() == t2.getLine() && 
                              t1.getCharPositionInLine() + 1 == t2.getCharPositionInLine() )) ) {
                        if (state.backtracking>0) {state.failed=true; return retval;}
                        throw new FailedPredicateException(input, "shiftOp", " $t1.getLine() == $t2.getLine() && \r\n          $t1.getCharPositionInLine() + 1 == $t2.getCharPositionInLine() ");
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 122, shiftOp_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "shiftOp"

    public static class additiveExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "additiveExpression"
    // JavaP.g:1527:1: additiveExpression returns [Expression element] : ex= multiplicativeExpression ( ( '+' | '-' ) exx= multiplicativeExpression )* ;
    public final AspectJLo_JavaP.additiveExpression_return additiveExpression() throws RecognitionException {
        AspectJLo_JavaP.additiveExpression_return retval = new AspectJLo_JavaP.additiveExpression_return();
        retval.start = input.LT(1);
        int additiveExpression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal202=null;
        Token char_literal203=null;
        AspectJLo_JavaP.multiplicativeExpression_return ex = null;

        AspectJLo_JavaP.multiplicativeExpression_return exx = null;


        Object char_literal202_tree=null;
        Object char_literal203_tree=null;

        String op = null;
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 123) ) { return retval; }
            // JavaP.g:1529:5: (ex= multiplicativeExpression ( ( '+' | '-' ) exx= multiplicativeExpression )* )
            // JavaP.g:1529:9: ex= multiplicativeExpression ( ( '+' | '-' ) exx= multiplicativeExpression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_multiplicativeExpression_in_additiveExpression8358);
            ex=multiplicativeExpression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
            if ( state.backtracking==0 ) {
              check_null(ex.element); retval.element = ex.element;
            }
            // JavaP.g:1529:92: ( ( '+' | '-' ) exx= multiplicativeExpression )*
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( ((LA146_0>=111 && LA146_0<=112)) ) {
                    alt146=1;
                }


                switch (alt146) {
            	case 1 :
            	    // JavaP.g:1529:94: ( '+' | '-' ) exx= multiplicativeExpression
            	    {
            	    // JavaP.g:1529:94: ( '+' | '-' )
            	    int alt145=2;
            	    int LA145_0 = input.LA(1);

            	    if ( (LA145_0==111) ) {
            	        alt145=1;
            	    }
            	    else if ( (LA145_0==112) ) {
            	        alt145=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 145, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt145) {
            	        case 1 :
            	            // JavaP.g:1529:95: '+'
            	            {
            	            char_literal202=(Token)match(input,111,FOLLOW_111_in_additiveExpression8365); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            char_literal202_tree = (Object)adaptor.create(char_literal202);
            	            adaptor.addChild(root_0, char_literal202_tree);
            	            }
            	            if ( state.backtracking==0 ) {
            	              op="+";
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // JavaP.g:1529:111: '-'
            	            {
            	            char_literal203=(Token)match(input,112,FOLLOW_112_in_additiveExpression8371); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            char_literal203_tree = (Object)adaptor.create(char_literal203);
            	            adaptor.addChild(root_0, char_literal203_tree);
            	            }
            	            if ( state.backtracking==0 ) {
            	              op="-";
            	            }

            	            }
            	            break;

            	    }

            	    pushFollow(FOLLOW_multiplicativeExpression_in_additiveExpression8378);
            	    exx=multiplicativeExpression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exx.getTree());
            	    if ( state.backtracking==0 ) {

            	               retval.element = new InfixOperatorInvocation(op, retval.element);
            	               ((InfixOperatorInvocation)retval.element).addArgument(exx.element);
            	               setLocation(retval.element,ex.start,exx.stop);
            	              
            	    }

            	    }
            	    break;

            	default :
            	    break loop146;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 123, additiveExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "additiveExpression"

    public static class multiplicativeExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "multiplicativeExpression"
    // JavaP.g:1537:1: multiplicativeExpression returns [Expression element] : ex= unaryExpression ( ( '*' | '/' | '%' ) exx= unaryExpression )* ;
    public final AspectJLo_JavaP.multiplicativeExpression_return multiplicativeExpression() throws RecognitionException {
        AspectJLo_JavaP.multiplicativeExpression_return retval = new AspectJLo_JavaP.multiplicativeExpression_return();
        retval.start = input.LT(1);
        int multiplicativeExpression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal204=null;
        Token char_literal205=null;
        Token char_literal206=null;
        AspectJLo_JavaP.unaryExpression_return ex = null;

        AspectJLo_JavaP.unaryExpression_return exx = null;


        Object char_literal204_tree=null;
        Object char_literal205_tree=null;
        Object char_literal206_tree=null;

        String op = null;
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 124) ) { return retval; }
            // JavaP.g:1539:5: (ex= unaryExpression ( ( '*' | '/' | '%' ) exx= unaryExpression )* )
            // JavaP.g:1539:9: ex= unaryExpression ( ( '*' | '/' | '%' ) exx= unaryExpression )*
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_unaryExpression_in_multiplicativeExpression8416);
            ex=unaryExpression();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
            if ( state.backtracking==0 ) {
              check_null(ex.element); retval.element = ex.element;
            }
            // JavaP.g:1539:83: ( ( '*' | '/' | '%' ) exx= unaryExpression )*
            loop148:
            do {
                int alt148=2;
                int LA148_0 = input.LA(1);

                if ( (LA148_0==36||(LA148_0>=113 && LA148_0<=114)) ) {
                    alt148=1;
                }


                switch (alt148) {
            	case 1 :
            	    // JavaP.g:1539:85: ( '*' | '/' | '%' ) exx= unaryExpression
            	    {
            	    // JavaP.g:1539:85: ( '*' | '/' | '%' )
            	    int alt147=3;
            	    switch ( input.LA(1) ) {
            	    case 36:
            	        {
            	        alt147=1;
            	        }
            	        break;
            	    case 113:
            	        {
            	        alt147=2;
            	        }
            	        break;
            	    case 114:
            	        {
            	        alt147=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return retval;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 147, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt147) {
            	        case 1 :
            	            // JavaP.g:1539:87: '*'
            	            {
            	            char_literal204=(Token)match(input,36,FOLLOW_36_in_multiplicativeExpression8424); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            char_literal204_tree = (Object)adaptor.create(char_literal204);
            	            adaptor.addChild(root_0, char_literal204_tree);
            	            }
            	            if ( state.backtracking==0 ) {
            	              op="*";
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // JavaP.g:1539:103: '/'
            	            {
            	            char_literal205=(Token)match(input,113,FOLLOW_113_in_multiplicativeExpression8430); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            char_literal205_tree = (Object)adaptor.create(char_literal205);
            	            adaptor.addChild(root_0, char_literal205_tree);
            	            }
            	            if ( state.backtracking==0 ) {
            	              op="/";
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // JavaP.g:1539:119: '%'
            	            {
            	            char_literal206=(Token)match(input,114,FOLLOW_114_in_multiplicativeExpression8436); if (state.failed) return retval;
            	            if ( state.backtracking==0 ) {
            	            char_literal206_tree = (Object)adaptor.create(char_literal206);
            	            adaptor.addChild(root_0, char_literal206_tree);
            	            }
            	            if ( state.backtracking==0 ) {
            	              op="%";
            	            }

            	            }
            	            break;

            	    }

            	    pushFollow(FOLLOW_unaryExpression_in_multiplicativeExpression8443);
            	    exx=unaryExpression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exx.getTree());
            	    if ( state.backtracking==0 ) {

            	               retval.element = new InfixOperatorInvocation(op, retval.element);
            	               ((InfixOperatorInvocation)retval.element).addArgument(exx.element);
            	               setLocation(retval.element,ex.start,exx.stop);
            	              
            	    }

            	    }
            	    break;

            	default :
            	    break loop148;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 124, multiplicativeExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "multiplicativeExpression"

    public static class unaryExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unaryExpression"
    // JavaP.g:1547:1: unaryExpression returns [Expression element] : ( '+' ex= unaryExpression | '-' exx= unaryExpression | '++' exxx= unaryExpression | '--' exxxx= unaryExpression | eks= unaryExpressionNotPlusMinus );
    public final AspectJLo_JavaP.unaryExpression_return unaryExpression() throws RecognitionException {
        AspectJLo_JavaP.unaryExpression_return retval = new AspectJLo_JavaP.unaryExpression_return();
        retval.start = input.LT(1);
        int unaryExpression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal207=null;
        Token char_literal208=null;
        Token string_literal209=null;
        Token string_literal210=null;
        AspectJLo_JavaP.unaryExpression_return ex = null;

        AspectJLo_JavaP.unaryExpression_return exx = null;

        AspectJLo_JavaP.unaryExpression_return exxx = null;

        AspectJLo_JavaP.unaryExpression_return exxxx = null;

        AspectJLo_JavaP.unaryExpressionNotPlusMinus_return eks = null;


        Object char_literal207_tree=null;
        Object char_literal208_tree=null;
        Object string_literal209_tree=null;
        Object string_literal210_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 125) ) { return retval; }
            // JavaP.g:1548:5: ( '+' ex= unaryExpression | '-' exx= unaryExpression | '++' exxx= unaryExpression | '--' exxxx= unaryExpression | eks= unaryExpressionNotPlusMinus )
            int alt149=5;
            switch ( input.LA(1) ) {
            case 111:
                {
                alt149=1;
                }
                break;
            case 112:
                {
                alt149=2;
                }
                break;
            case 115:
                {
                alt149=3;
                }
                break;
            case 116:
                {
                alt149=4;
                }
                break;
            case Identifier:
            case FloatingPointLiteral:
            case CharacterLiteral:
            case StringLiteral:
            case HexLiteral:
            case OctalLiteral:
            case DecimalLiteral:
            case Export:
            case Connector:
            case Connect:
            case Name:
            case Overrides:
            case 53:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 71:
            case 72:
            case 75:
            case 76:
            case 77:
            case 78:
            case 117:
            case 118:
            case 119:
            case 123:
            case 124:
            case 125:
                {
                alt149=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 149, 0, input);

                throw nvae;
            }

            switch (alt149) {
                case 1 :
                    // JavaP.g:1548:9: '+' ex= unaryExpression
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal207=(Token)match(input,111,FOLLOW_111_in_unaryExpression8479); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal207_tree = (Object)adaptor.create(char_literal207);
                    adaptor.addChild(root_0, char_literal207_tree);
                    }
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpression8483);
                    ex=unaryExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new PrefixOperatorInvocation("+",ex.element);
                      	setLocation(retval.element,retval.start,ex.stop);
                          
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1551:9: '-' exx= unaryExpression
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal208=(Token)match(input,112,FOLLOW_112_in_unaryExpression8495); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal208_tree = (Object)adaptor.create(char_literal208);
                    adaptor.addChild(root_0, char_literal208_tree);
                    }
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpression8499);
                    exx=unaryExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, exx.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new PrefixOperatorInvocation("-",exx.element);
                      	setLocation(retval.element,retval.start,exx.stop);
                          
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:1554:9: '++' exxx= unaryExpression
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal209=(Token)match(input,115,FOLLOW_115_in_unaryExpression8511); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal209_tree = (Object)adaptor.create(string_literal209);
                    adaptor.addChild(root_0, string_literal209_tree);
                    }
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpression8515);
                    exxx=unaryExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, exxx.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new PrefixOperatorInvocation("++",exxx.element);
                      	setLocation(retval.element,retval.start,exxx.stop);
                          
                    }

                    }
                    break;
                case 4 :
                    // JavaP.g:1557:9: '--' exxxx= unaryExpression
                    {
                    root_0 = (Object)adaptor.nil();

                    string_literal210=(Token)match(input,116,FOLLOW_116_in_unaryExpression8527); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal210_tree = (Object)adaptor.create(string_literal210);
                    adaptor.addChild(root_0, string_literal210_tree);
                    }
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpression8531);
                    exxxx=unaryExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, exxxx.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new PrefixOperatorInvocation("--",exxxx.element);
                      	setLocation(retval.element,retval.start,exxxx.stop);
                          
                    }

                    }
                    break;
                case 5 :
                    // JavaP.g:1560:9: eks= unaryExpressionNotPlusMinus
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_unaryExpressionNotPlusMinus_in_unaryExpression8545);
                    eks=unaryExpressionNotPlusMinus();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, eks.getTree());
                    if ( state.backtracking==0 ) {
                      check_null(eks.element); retval.element = eks.element;
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 125, unaryExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "unaryExpression"

    public static class unaryExpressionNotPlusMinus_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "unaryExpressionNotPlusMinus"
    // JavaP.g:1563:1: unaryExpressionNotPlusMinus returns [Expression element] : (a= '~' ex= unaryExpression | b= '!' exx= unaryExpression | castex= castExpression | prim= primary (sel= selector )* (c= '++' | d= '--' )? );
    public final AspectJLo_JavaP.unaryExpressionNotPlusMinus_return unaryExpressionNotPlusMinus() throws RecognitionException {
        TargetScope_stack.push(new TargetScope_scope());

        AspectJLo_JavaP.unaryExpressionNotPlusMinus_return retval = new AspectJLo_JavaP.unaryExpressionNotPlusMinus_return();
        retval.start = input.LT(1);
        int unaryExpressionNotPlusMinus_StartIndex = input.index();
        Object root_0 = null;

        Token a=null;
        Token b=null;
        Token c=null;
        Token d=null;
        AspectJLo_JavaP.unaryExpression_return ex = null;

        AspectJLo_JavaP.unaryExpression_return exx = null;

        AspectJLo_JavaP.castExpression_return castex = null;

        AspectJLo_JavaP.primary_return prim = null;

        AspectJLo_JavaP.selector_return sel = null;


        Object a_tree=null;
        Object b_tree=null;
        Object c_tree=null;
        Object d_tree=null;


        Token start=null;
        Token stop=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 126) ) { return retval; }
            // JavaP.g:1569:5: (a= '~' ex= unaryExpression | b= '!' exx= unaryExpression | castex= castExpression | prim= primary (sel= selector )* (c= '++' | d= '--' )? )
            int alt152=4;
            alt152 = dfa152.predict(input);
            switch (alt152) {
                case 1 :
                    // JavaP.g:1569:9: a= '~' ex= unaryExpression
                    {
                    root_0 = (Object)adaptor.nil();

                    a=(Token)match(input,117,FOLLOW_117_in_unaryExpressionNotPlusMinus8582); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    a_tree = (Object)adaptor.create(a);
                    adaptor.addChild(root_0, a_tree);
                    }
                    if ( state.backtracking==0 ) {
                      start=a;
                    }
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus8588);
                    ex=unaryExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, ex.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new PrefixOperatorInvocation("~",ex.element); 
                               stop=ex.stop;
                               setLocation(retval.element,start,stop);
                              
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1574:9: b= '!' exx= unaryExpression
                    {
                    root_0 = (Object)adaptor.nil();

                    b=(Token)match(input,118,FOLLOW_118_in_unaryExpressionNotPlusMinus8611); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    b_tree = (Object)adaptor.create(b);
                    adaptor.addChild(root_0, b_tree);
                    }
                    if ( state.backtracking==0 ) {
                      start=b;
                    }
                    pushFollow(FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus8617);
                    exx=unaryExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, exx.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new PrefixOperatorInvocation("!",exx.element); 
                               stop=exx.stop;
                               setLocation(retval.element,start,stop);
                              
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:1579:9: castex= castExpression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_castExpression_in_unaryExpressionNotPlusMinus8640);
                    castex=castExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, castex.getTree());
                    if ( state.backtracking==0 ) {
                      check_null(castex.element); retval.element = castex.element;
                    }

                    }
                    break;
                case 4 :
                    // JavaP.g:1580:9: prim= primary (sel= selector )* (c= '++' | d= '--' )?
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_primary_in_unaryExpressionNotPlusMinus8654);
                    prim=primary();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, prim.getTree());
                    if ( state.backtracking==0 ) {
                      check_null((prim!=null?prim.element:null));  
                                  ((TargetScope_scope)TargetScope_stack.peek()).target =(prim!=null?prim.element:null); 
                                  retval.element=(prim!=null?prim.element:null);
                                  start=prim.start;
                                  ((TargetScope_scope)TargetScope_stack.peek()).start = start;
                                 
                    }
                    // JavaP.g:1587:9: (sel= selector )*
                    loop150:
                    do {
                        int alt150=2;
                        int LA150_0 = input.LA(1);

                        if ( (LA150_0==35||LA150_0==54) ) {
                            alt150=1;
                        }


                        switch (alt150) {
                    	case 1 :
                    	    // JavaP.g:1587:10: sel= selector
                    	    {
                    	    pushFollow(FOLLOW_selector_in_unaryExpressionNotPlusMinus8680);
                    	    sel=selector();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, sel.getTree());
                    	    if ( state.backtracking==0 ) {
                    	      check_null(sel.element); 
                    	                  ((TargetScope_scope)TargetScope_stack.peek()).target =(sel!=null?sel.element:null); 
                    	                  retval.element = (sel!=null?sel.element:null); 
                    	                  stop=sel.stop;
                    	                  setLocation(retval.element,start,stop);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop150;
                        }
                    } while (true);

                    // JavaP.g:1594:9: (c= '++' | d= '--' )?
                    int alt151=3;
                    int LA151_0 = input.LA(1);

                    if ( (LA151_0==115) ) {
                        alt151=1;
                    }
                    else if ( (LA151_0==116) ) {
                        alt151=2;
                    }
                    switch (alt151) {
                        case 1 :
                            // JavaP.g:1595:12: c= '++'
                            {
                            c=(Token)match(input,115,FOLLOW_115_in_unaryExpressionNotPlusMinus8730); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            c_tree = (Object)adaptor.create(c);
                            adaptor.addChild(root_0, c_tree);
                            }
                            if ( state.backtracking==0 ) {
                              retval.element = new PostfixOperatorInvocation("++", retval.element); 
                              		   stop=c;
                              		   setLocation(retval.element,start,stop);
                            }

                            }
                            break;
                        case 2 :
                            // JavaP.g:1598:12: d= '--'
                            {
                            d=(Token)match(input,116,FOLLOW_116_in_unaryExpressionNotPlusMinus8747); if (state.failed) return retval;
                            if ( state.backtracking==0 ) {
                            d_tree = (Object)adaptor.create(d);
                            adaptor.addChild(root_0, d_tree);
                            }
                            if ( state.backtracking==0 ) {
                              retval.element = new PostfixOperatorInvocation("--", retval.element); 
                                        	   stop=d;
                                        	   setLocation(retval.element,start,stop);
                            }

                            }
                            break;

                    }


                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 126, unaryExpressionNotPlusMinus_StartIndex); }
            TargetScope_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "unaryExpressionNotPlusMinus"

    public static class selector_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "selector"
    // JavaP.g:1607:1: selector returns [Expression element] : ( '.' name= identifierRule (args= arguments )? | '.' thiskw= 'this' | '.' spkw= 'super' supsuf= superSuffix | '.' newkw= 'new' in= innerCreator | '[' arrex= expression bracket= ']' );
    public final AspectJLo_JavaP.selector_return selector() throws RecognitionException {
        AspectJLo_JavaP.selector_return retval = new AspectJLo_JavaP.selector_return();
        retval.start = input.LT(1);
        int selector_StartIndex = input.index();
        Object root_0 = null;

        Token thiskw=null;
        Token spkw=null;
        Token newkw=null;
        Token bracket=null;
        Token char_literal211=null;
        Token char_literal212=null;
        Token char_literal213=null;
        Token char_literal214=null;
        Token char_literal215=null;
        AspectJLoParser.identifierRule_return name = null;

        AspectJLo_JavaP.arguments_return args = null;

        AspectJLo_JavaP.superSuffix_return supsuf = null;

        AspectJLo_JavaP.innerCreator_return in = null;

        AspectJLoParser.expression_return arrex = null;


        Object thiskw_tree=null;
        Object spkw_tree=null;
        Object newkw_tree=null;
        Object bracket_tree=null;
        Object char_literal211_tree=null;
        Object char_literal212_tree=null;
        Object char_literal213_tree=null;
        Object char_literal214_tree=null;
        Object char_literal215_tree=null;


        Token start=((TargetScope_scope)TargetScope_stack.peek()).start;
        Token stop=null;
        InvocationTarget old = ((TargetScope_scope)TargetScope_stack.peek()).target;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 127) ) { return retval; }
            // JavaP.g:1613:2: ( '.' name= identifierRule (args= arguments )? | '.' thiskw= 'this' | '.' spkw= 'super' supsuf= superSuffix | '.' newkw= 'new' in= innerCreator | '[' arrex= expression bracket= ']' )
            int alt154=5;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==35) ) {
                switch ( input.LA(2) ) {
                case 75:
                    {
                    alt154=2;
                    }
                    break;
                case 71:
                    {
                    alt154=3;
                    }
                    break;
                case 119:
                    {
                    alt154=4;
                    }
                    break;
                case Identifier:
                case Export:
                case Connector:
                case Connect:
                case Name:
                case Overrides:
                    {
                    alt154=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 154, 1, input);

                    throw nvae;
                }

            }
            else if ( (LA154_0==54) ) {
                alt154=5;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 154, 0, input);

                throw nvae;
            }
            switch (alt154) {
                case 1 :
                    // JavaP.g:1614:2: '.' name= identifierRule (args= arguments )?
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal211=(Token)match(input,35,FOLLOW_35_in_selector8787); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal211_tree = (Object)adaptor.create(char_literal211);
                    adaptor.addChild(root_0, char_literal211_tree);
                    }
                    pushFollow(FOLLOW_identifierRule_in_selector8791);
                    name=gAspectJLo.identifierRule();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
                    if ( state.backtracking==0 ) {

                      	         retval.element = new NamedTargetExpression((name!=null?input.toString(name.start,name.stop):null),cloneTarget(((TargetScope_scope)TargetScope_stack.peek()).target));
                      	         stop=name.start;
                      	        
                    }
                    // JavaP.g:1619:6: (args= arguments )?
                    int alt153=2;
                    int LA153_0 = input.LA(1);

                    if ( (LA153_0==72) ) {
                        alt153=1;
                    }
                    switch (alt153) {
                        case 1 :
                            // JavaP.g:1619:7: args= arguments
                            {
                            pushFollow(FOLLOW_arguments_in_selector8814);
                            args=arguments();

                            state._fsp--;
                            if (state.failed) return retval;
                            if ( state.backtracking==0 ) adaptor.addChild(root_0, args.getTree());
                            if ( state.backtracking==0 ) {
                              retval.element = invocation((name!=null?input.toString(name.start,name.stop):null), ((TargetScope_scope)TargetScope_stack.peek()).target);
                              	         ((RegularMethodInvocation)retval.element).addAllArguments(args.element);
                              	         stop=args.stop;
                              	        
                            }

                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {
                      setLocation(retval.element,start,stop);
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1625:9: '.' thiskw= 'this'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal212=(Token)match(input,35,FOLLOW_35_in_selector8849); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal212_tree = (Object)adaptor.create(char_literal212);
                    adaptor.addChild(root_0, char_literal212_tree);
                    }
                    thiskw=(Token)match(input,75,FOLLOW_75_in_selector8853); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    thiskw_tree = (Object)adaptor.create(thiskw);
                    adaptor.addChild(root_0, thiskw_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new ThisLiteral(createTypeReference((NamedTarget)((TargetScope_scope)TargetScope_stack.peek()).target));setLocation(retval.element,start,spkw);
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:1626:9: '.' spkw= 'super' supsuf= superSuffix
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal213=(Token)match(input,35,FOLLOW_35_in_selector8865); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal213_tree = (Object)adaptor.create(char_literal213);
                    adaptor.addChild(root_0, char_literal213_tree);
                    }
                    spkw=(Token)match(input,71,FOLLOW_71_in_selector8869); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    spkw_tree = (Object)adaptor.create(spkw);
                    adaptor.addChild(root_0, spkw_tree);
                    }
                    pushFollow(FOLLOW_superSuffix_in_selector8886);
                    supsuf=superSuffix();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, supsuf.getTree());
                    if ( state.backtracking==0 ) {

                                    check_null(supsuf.element); 
                                    retval.element = supsuf.element;
                                    InvocationTarget tar = new SuperTarget(old);
                                    ((TargetedExpression)retval.element).setTarget(tar);
                                    setKeyword(tar,spkw);
                                    setLocation(old,start,spkw);
                                  
                    }

                    }
                    break;
                case 4 :
                    // JavaP.g:1636:9: '.' newkw= 'new' in= innerCreator
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal214=(Token)match(input,35,FOLLOW_35_in_selector8911); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal214_tree = (Object)adaptor.create(char_literal214);
                    adaptor.addChild(root_0, char_literal214_tree);
                    }
                    newkw=(Token)match(input,119,FOLLOW_119_in_selector8915); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    newkw_tree = (Object)adaptor.create(newkw);
                    adaptor.addChild(root_0, newkw_tree);
                    }
                    pushFollow(FOLLOW_innerCreator_in_selector8919);
                    in=innerCreator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, in.getTree());
                    if ( state.backtracking==0 ) {
                      check_null(in.element); 
                                                               retval.element = in.element;
                                                               setKeyword(retval.element,newkw);
                    }

                    }
                    break;
                case 5 :
                    // JavaP.g:1639:9: '[' arrex= expression bracket= ']'
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal215=(Token)match(input,54,FOLLOW_54_in_selector8931); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal215_tree = (Object)adaptor.create(char_literal215);
                    adaptor.addChild(root_0, char_literal215_tree);
                    }
                    pushFollow(FOLLOW_expression_in_selector8935);
                    arrex=gAspectJLo.expression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, arrex.getTree());
                    bracket=(Token)match(input,55,FOLLOW_55_in_selector8939); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    bracket_tree = (Object)adaptor.create(bracket);
                    adaptor.addChild(root_0, bracket_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new ArrayAccessExpression((Expression)((TargetScope_scope)TargetScope_stack.peek()).target);
                                 ((ArrayAccessExpression)retval.element).addIndex(new FilledArrayIndex(arrex.element));
                                 setLocation(retval.element, start, bracket);
                                
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 127, selector_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "selector"

    public static class castExpression_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "castExpression"
    // JavaP.g:1646:1: castExpression returns [Expression element] : ( '(' tref= primitiveType ')' unex= unaryExpression | '(' treff= type ')' unexx= unaryExpressionNotPlusMinus );
    public final AspectJLo_JavaP.castExpression_return castExpression() throws RecognitionException {
        AspectJLo_JavaP.castExpression_return retval = new AspectJLo_JavaP.castExpression_return();
        retval.start = input.LT(1);
        int castExpression_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal216=null;
        Token char_literal217=null;
        Token char_literal218=null;
        Token char_literal219=null;
        AspectJLo_JavaP.primitiveType_return tref = null;

        AspectJLo_JavaP.unaryExpression_return unex = null;

        AspectJLo_JavaP.type_return treff = null;

        AspectJLo_JavaP.unaryExpressionNotPlusMinus_return unexx = null;


        Object char_literal216_tree=null;
        Object char_literal217_tree=null;
        Object char_literal218_tree=null;
        Object char_literal219_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 128) ) { return retval; }
            // JavaP.g:1648:5: ( '(' tref= primitiveType ')' unex= unaryExpression | '(' treff= type ')' unexx= unaryExpressionNotPlusMinus )
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==72) ) {
                int LA155_1 = input.LA(2);

                if ( (synpred230_JavaP()) ) {
                    alt155=1;
                }
                else if ( (true) ) {
                    alt155=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 155, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 155, 0, input);

                throw nvae;
            }
            switch (alt155) {
                case 1 :
                    // JavaP.g:1648:8: '(' tref= primitiveType ')' unex= unaryExpression
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal216=(Token)match(input,72,FOLLOW_72_in_castExpression8982); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal216_tree = (Object)adaptor.create(char_literal216);
                    adaptor.addChild(root_0, char_literal216_tree);
                    }
                    pushFollow(FOLLOW_primitiveType_in_castExpression8986);
                    tref=primitiveType();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, tref.getTree());
                    char_literal217=(Token)match(input,73,FOLLOW_73_in_castExpression8988); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal217_tree = (Object)adaptor.create(char_literal217);
                    adaptor.addChild(root_0, char_literal217_tree);
                    }
                    pushFollow(FOLLOW_unaryExpression_in_castExpression8992);
                    unex=unaryExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unex.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new ClassCastExpression(tref.element,unex.element);
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1649:8: '(' treff= type ')' unexx= unaryExpressionNotPlusMinus
                    {
                    root_0 = (Object)adaptor.nil();

                    char_literal218=(Token)match(input,72,FOLLOW_72_in_castExpression9003); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal218_tree = (Object)adaptor.create(char_literal218);
                    adaptor.addChild(root_0, char_literal218_tree);
                    }
                    pushFollow(FOLLOW_type_in_castExpression9007);
                    treff=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, treff.getTree());
                    char_literal219=(Token)match(input,73,FOLLOW_73_in_castExpression9009); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal219_tree = (Object)adaptor.create(char_literal219);
                    adaptor.addChild(root_0, char_literal219_tree);
                    }
                    pushFollow(FOLLOW_unaryExpressionNotPlusMinus_in_castExpression9013);
                    unexx=unaryExpressionNotPlusMinus();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, unexx.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new ClassCastExpression(treff.element,unexx.element);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              setLocation(retval.element,retval.start,retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 128, castExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "castExpression"

    public static class primary_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "primary"
    // JavaP.g:1652:1: primary returns [Expression element] : (parex= parExpression | rubex= identifierSuffixRubbush | skw= 'super' supsuf= superSuffix | nt= nonTargetPrimary | nkw= 'new' cr= creator | morerubex= moreidentifierRuleSuffixRubbish | vt= voidType '.' clkw= 'class' | tref= type '.' clkww= 'class' );
    public final AspectJLo_JavaP.primary_return primary() throws RecognitionException {
        TargetScope_stack.push(new TargetScope_scope());

        AspectJLo_JavaP.primary_return retval = new AspectJLo_JavaP.primary_return();
        retval.start = input.LT(1);
        int primary_StartIndex = input.index();
        Object root_0 = null;

        Token skw=null;
        Token nkw=null;
        Token clkw=null;
        Token clkww=null;
        Token char_literal220=null;
        Token char_literal221=null;
        AspectJLo_JavaP.parExpression_return parex = null;

        AspectJLo_JavaP.identifierSuffixRubbush_return rubex = null;

        AspectJLo_JavaP.superSuffix_return supsuf = null;

        AspectJLoParser.nonTargetPrimary_return nt = null;

        AspectJLo_JavaP.creator_return cr = null;

        AspectJLo_JavaP.moreidentifierRuleSuffixRubbish_return morerubex = null;

        AspectJLo_JavaP.voidType_return vt = null;

        AspectJLo_JavaP.type_return tref = null;


        Object skw_tree=null;
        Object nkw_tree=null;
        Object clkw_tree=null;
        Object clkww_tree=null;
        Object char_literal220_tree=null;
        Object char_literal221_tree=null;


        Token start=null;
        Token stop=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 129) ) { return retval; }
            // JavaP.g:1658:5: (parex= parExpression | rubex= identifierSuffixRubbush | skw= 'super' supsuf= superSuffix | nt= nonTargetPrimary | nkw= 'new' cr= creator | morerubex= moreidentifierRuleSuffixRubbish | vt= voidType '.' clkw= 'class' | tref= type '.' clkww= 'class' )
            int alt156=8;
            alt156 = dfa156.predict(input);
            switch (alt156) {
                case 1 :
                    // JavaP.g:1658:9: parex= parExpression
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_parExpression_in_primary9049);
                    parex=parExpression();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, parex.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = parex.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1659:9: rubex= identifierSuffixRubbush
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_identifierSuffixRubbush_in_primary9063);
                    rubex=identifierSuffixRubbush();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, rubex.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = rubex.element;
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:1660:10: skw= 'super' supsuf= superSuffix
                    {
                    root_0 = (Object)adaptor.nil();

                    skw=(Token)match(input,71,FOLLOW_71_in_primary9078); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    skw_tree = (Object)adaptor.create(skw);
                    adaptor.addChild(root_0, skw_tree);
                    }
                    if ( state.backtracking==0 ) {
                       
                                           start=skw; stop=skw; 
                                           ((TargetScope_scope)TargetScope_stack.peek()).start =skw;
                                           
                    }
                    pushFollow(FOLLOW_superSuffix_in_primary9093);
                    supsuf=superSuffix();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, supsuf.getTree());
                    if ( state.backtracking==0 ) {
                      InvocationTarget tar = new SuperTarget();
                               setKeyword(tar,skw);
                               retval.element = supsuf.element;
                               ((TargetedExpression)retval.element).setTarget(tar); 
                              setLocation(tar,start,stop); // put locations on the SuperTarget.
                              
                    }

                    }
                    break;
                case 4 :
                    // JavaP.g:1671:9: nt= nonTargetPrimary
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_nonTargetPrimary_in_primary9116);
                    nt=gAspectJLo.nonTargetPrimary();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, nt.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element=nt.element;
                    }

                    }
                    break;
                case 5 :
                    // JavaP.g:1672:9: nkw= 'new' cr= creator
                    {
                    root_0 = (Object)adaptor.nil();

                    nkw=(Token)match(input,119,FOLLOW_119_in_primary9130); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    nkw_tree = (Object)adaptor.create(nkw);
                    adaptor.addChild(root_0, nkw_tree);
                    }
                    if ( state.backtracking==0 ) {
                      start=nkw;
                    }
                    pushFollow(FOLLOW_creator_in_primary9136);
                    cr=creator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, cr.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = cr.element;setKeyword(retval.element,nkw);
                    }

                    }
                    break;
                case 6 :
                    // JavaP.g:1673:9: morerubex= moreidentifierRuleSuffixRubbish
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_moreidentifierRuleSuffixRubbish_in_primary9150);
                    morerubex=moreidentifierRuleSuffixRubbish();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, morerubex.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = morerubex.element;
                    }

                    }
                    break;
                case 7 :
                    // JavaP.g:1674:9: vt= voidType '.' clkw= 'class'
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_voidType_in_primary9164);
                    vt=voidType();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, vt.getTree());
                    char_literal220=(Token)match(input,35,FOLLOW_35_in_primary9166); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal220_tree = (Object)adaptor.create(char_literal220);
                    adaptor.addChild(root_0, char_literal220_tree);
                    }
                    clkw=(Token)match(input,43,FOLLOW_43_in_primary9170); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    clkw_tree = (Object)adaptor.create(clkw);
                    adaptor.addChild(root_0, clkw_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new ClassLiteral(vt.element); start=vt.start;stop=clkw; setLocation(retval.element,start,stop);
                    }

                    }
                    break;
                case 8 :
                    // JavaP.g:1675:9: tref= type '.' clkww= 'class'
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_type_in_primary9184);
                    tref=type();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, tref.getTree());
                    char_literal221=(Token)match(input,35,FOLLOW_35_in_primary9186); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal221_tree = (Object)adaptor.create(char_literal221);
                    adaptor.addChild(root_0, char_literal221_tree);
                    }
                    clkww=(Token)match(input,43,FOLLOW_43_in_primary9190); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    clkww_tree = (Object)adaptor.create(clkww);
                    adaptor.addChild(root_0, clkww_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new ClassLiteral(tref.element);start=tref.start;stop=clkww; setLocation(retval.element,start,stop);
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 129, primary_StartIndex); }
            TargetScope_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "primary"

    public static class moreidentifierRuleSuffixRubbish_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "moreidentifierRuleSuffixRubbish"
    // JavaP.g:1683:1: moreidentifierRuleSuffixRubbish returns [Expression element] : id= identifierRule ( '.' idx= identifierRule )* ( ( '[' ']' )+ '.' 'class' | arr= arrayAccessSuffixRubbish | arg= argumentsSuffixRubbish | '.' clkw= 'class' | '.' gen= explicitGenericInvocation | '.' thiskw= 'this' | '.' supkw= 'super' supsuf= superSuffix | '.' newkw= 'new' in= innerCreator )? ;
    public final AspectJLo_JavaP.moreidentifierRuleSuffixRubbish_return moreidentifierRuleSuffixRubbish() throws RecognitionException {
        TargetScope_stack.push(new TargetScope_scope());

        AspectJLo_JavaP.moreidentifierRuleSuffixRubbish_return retval = new AspectJLo_JavaP.moreidentifierRuleSuffixRubbish_return();
        retval.start = input.LT(1);
        int moreidentifierRuleSuffixRubbish_StartIndex = input.index();
        Object root_0 = null;

        Token clkw=null;
        Token thiskw=null;
        Token supkw=null;
        Token newkw=null;
        Token char_literal222=null;
        Token char_literal223=null;
        Token char_literal224=null;
        Token char_literal225=null;
        Token string_literal226=null;
        Token char_literal227=null;
        Token char_literal228=null;
        Token char_literal229=null;
        Token char_literal230=null;
        Token char_literal231=null;
        AspectJLoParser.identifierRule_return id = null;

        AspectJLoParser.identifierRule_return idx = null;

        AspectJLo_JavaP.arrayAccessSuffixRubbish_return arr = null;

        AspectJLo_JavaP.argumentsSuffixRubbish_return arg = null;

        AspectJLo_JavaP.explicitGenericInvocation_return gen = null;

        AspectJLo_JavaP.superSuffix_return supsuf = null;

        AspectJLo_JavaP.innerCreator_return in = null;


        Object clkw_tree=null;
        Object thiskw_tree=null;
        Object supkw_tree=null;
        Object newkw_tree=null;
        Object char_literal222_tree=null;
        Object char_literal223_tree=null;
        Object char_literal224_tree=null;
        Object char_literal225_tree=null;
        Object string_literal226_tree=null;
        Object char_literal227_tree=null;
        Object char_literal228_tree=null;
        Object char_literal229_tree=null;
        Object char_literal230_tree=null;
        Object char_literal231_tree=null;


        Token stop = null;
        InvocationTarget scopeTarget = null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 131) ) { return retval; }
            // JavaP.g:1694:2: (id= identifierRule ( '.' idx= identifierRule )* ( ( '[' ']' )+ '.' 'class' | arr= arrayAccessSuffixRubbish | arg= argumentsSuffixRubbish | '.' clkw= 'class' | '.' gen= explicitGenericInvocation | '.' thiskw= 'this' | '.' supkw= 'super' supsuf= superSuffix | '.' newkw= 'new' in= innerCreator )? )
            // JavaP.g:1694:4: id= identifierRule ( '.' idx= identifierRule )* ( ( '[' ']' )+ '.' 'class' | arr= arrayAccessSuffixRubbish | arg= argumentsSuffixRubbish | '.' clkw= 'class' | '.' gen= explicitGenericInvocation | '.' thiskw= 'this' | '.' supkw= 'super' supsuf= superSuffix | '.' newkw= 'new' in= innerCreator )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_identifierRule_in_moreidentifierRuleSuffixRubbish9254);
            id=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, id.getTree());
            if ( state.backtracking==0 ) {
              ((TargetScope_scope)TargetScope_stack.peek()).target = new NamedTarget((id!=null?input.toString(id.start,id.stop):null));
              	            scopeTarget = ((TargetScope_scope)TargetScope_stack.peek()).target;  
              	            ((TargetScope_scope)TargetScope_stack.peek()).start =id.start; 
              	            stop=id.start;
              	            setLocation(((TargetScope_scope)TargetScope_stack.peek()).target,((TargetScope_scope)TargetScope_stack.peek()).start,stop);
              	            
            }
            // JavaP.g:1701:4: ( '.' idx= identifierRule )*
            loop157:
            do {
                int alt157=2;
                alt157 = dfa157.predict(input);
                switch (alt157) {
            	case 1 :
            	    // JavaP.g:1701:5: '.' idx= identifierRule
            	    {
            	    char_literal222=(Token)match(input,35,FOLLOW_35_in_moreidentifierRuleSuffixRubbish9275); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal222_tree = (Object)adaptor.create(char_literal222);
            	    adaptor.addChild(root_0, char_literal222_tree);
            	    }
            	    pushFollow(FOLLOW_identifierRule_in_moreidentifierRuleSuffixRubbish9279);
            	    idx=gAspectJLo.identifierRule();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, idx.getTree());
            	    if ( state.backtracking==0 ) {
            	      ((TargetScope_scope)TargetScope_stack.peek()).target = new NamedTarget((idx!=null?input.toString(idx.start,idx.stop):null),((TargetScope_scope)TargetScope_stack.peek()).target);
            	      	        scopeTarget = ((TargetScope_scope)TargetScope_stack.peek()).target;
            	      	        stop=idx.start;
            	      	        setLocation(((TargetScope_scope)TargetScope_stack.peek()).target, ((TargetScope_scope)TargetScope_stack.peek()).start, idx.start);
            	      	       
            	    }

            	    }
            	    break;

            	default :
            	    break loop157;
                }
            } while (true);

            if ( state.backtracking==0 ) {
              retval.element = new NamedTargetExpression(((NamedTarget)((TargetScope_scope)TargetScope_stack.peek()).target).name(),cloneTargetOfTarget(((NamedTarget)((TargetScope_scope)TargetScope_stack.peek()).target)));
              	 setLocation(retval.element, ((TargetScope_scope)TargetScope_stack.peek()).start, stop);
              	 //The variable reference is only returned if none of the following subrules match.
              	
            }
            // JavaP.g:1712:1: ( ( '[' ']' )+ '.' 'class' | arr= arrayAccessSuffixRubbish | arg= argumentsSuffixRubbish | '.' clkw= 'class' | '.' gen= explicitGenericInvocation | '.' thiskw= 'this' | '.' supkw= 'super' supsuf= superSuffix | '.' newkw= 'new' in= innerCreator )?
            int alt159=9;
            alt159 = dfa159.predict(input);
            switch (alt159) {
                case 1 :
                    // JavaP.g:1712:9: ( '[' ']' )+ '.' 'class'
                    {
                    // JavaP.g:1712:9: ( '[' ']' )+
                    int cnt158=0;
                    loop158:
                    do {
                        int alt158=2;
                        int LA158_0 = input.LA(1);

                        if ( (LA158_0==54) ) {
                            alt158=1;
                        }


                        switch (alt158) {
                    	case 1 :
                    	    // JavaP.g:1712:10: '[' ']'
                    	    {
                    	    char_literal223=(Token)match(input,54,FOLLOW_54_in_moreidentifierRuleSuffixRubbish9311); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal223_tree = (Object)adaptor.create(char_literal223);
                    	    adaptor.addChild(root_0, char_literal223_tree);
                    	    }
                    	    char_literal224=(Token)match(input,55,FOLLOW_55_in_moreidentifierRuleSuffixRubbish9313); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal224_tree = (Object)adaptor.create(char_literal224);
                    	    adaptor.addChild(root_0, char_literal224_tree);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt158 >= 1 ) break loop158;
                    	    if (state.backtracking>0) {state.failed=true; return retval;}
                                EarlyExitException eee =
                                    new EarlyExitException(158, input);
                                throw eee;
                        }
                        cnt158++;
                    } while (true);

                    char_literal225=(Token)match(input,35,FOLLOW_35_in_moreidentifierRuleSuffixRubbish9317); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal225_tree = (Object)adaptor.create(char_literal225);
                    adaptor.addChild(root_0, char_literal225_tree);
                    }
                    string_literal226=(Token)match(input,43,FOLLOW_43_in_moreidentifierRuleSuffixRubbish9319); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal226_tree = (Object)adaptor.create(string_literal226);
                    adaptor.addChild(root_0, string_literal226_tree);
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1714:9: arr= arrayAccessSuffixRubbish
                    {
                    pushFollow(FOLLOW_arrayAccessSuffixRubbish_in_moreidentifierRuleSuffixRubbish9340);
                    arr=arrayAccessSuffixRubbish();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, arr.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = arr.element;
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:1715:9: arg= argumentsSuffixRubbish
                    {
                    pushFollow(FOLLOW_argumentsSuffixRubbish_in_moreidentifierRuleSuffixRubbish9354);
                    arg=argumentsSuffixRubbish();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, arg.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element.removeAllTags(); retval.element = arg.element;
                    }

                    }
                    break;
                case 4 :
                    // JavaP.g:1716:9: '.' clkw= 'class'
                    {
                    char_literal227=(Token)match(input,35,FOLLOW_35_in_moreidentifierRuleSuffixRubbish9367); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal227_tree = (Object)adaptor.create(char_literal227);
                    adaptor.addChild(root_0, char_literal227_tree);
                    }
                    clkw=(Token)match(input,43,FOLLOW_43_in_moreidentifierRuleSuffixRubbish9371); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    clkw_tree = (Object)adaptor.create(clkw);
                    adaptor.addChild(root_0, clkw_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element.removeAllTags();
                               retval.element = new ClassLiteral(createTypeReference((NamedTarget)((TargetScope_scope)TargetScope_stack.peek()).target));
                                setLocation(retval.element, ((TargetScope_scope)TargetScope_stack.peek()).start, clkw);
                               
                    }

                    }
                    break;
                case 5 :
                    // JavaP.g:1721:9: '.' gen= explicitGenericInvocation
                    {
                    char_literal228=(Token)match(input,35,FOLLOW_35_in_moreidentifierRuleSuffixRubbish9393); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal228_tree = (Object)adaptor.create(char_literal228);
                    adaptor.addChild(root_0, char_literal228_tree);
                    }
                    pushFollow(FOLLOW_explicitGenericInvocation_in_moreidentifierRuleSuffixRubbish9397);
                    gen=explicitGenericInvocation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, gen.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element.removeAllTags(); retval.element = gen.element;
                    }

                    }
                    break;
                case 6 :
                    // JavaP.g:1722:9: '.' thiskw= 'this'
                    {
                    char_literal229=(Token)match(input,35,FOLLOW_35_in_moreidentifierRuleSuffixRubbish9410); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal229_tree = (Object)adaptor.create(char_literal229);
                    adaptor.addChild(root_0, char_literal229_tree);
                    }
                    thiskw=(Token)match(input,75,FOLLOW_75_in_moreidentifierRuleSuffixRubbish9414); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    thiskw_tree = (Object)adaptor.create(thiskw);
                    adaptor.addChild(root_0, thiskw_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element.removeAllTags();
                                retval.element = new ThisLiteral(createTypeReference((NamedTarget)((TargetScope_scope)TargetScope_stack.peek()).target));
                                setLocation(retval.element, ((TargetScope_scope)TargetScope_stack.peek()).start, thiskw);
                              
                    }

                    }
                    break;
                case 7 :
                    // JavaP.g:1727:9: '.' supkw= 'super' supsuf= superSuffix
                    {
                    char_literal230=(Token)match(input,35,FOLLOW_35_in_moreidentifierRuleSuffixRubbish9435); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal230_tree = (Object)adaptor.create(char_literal230);
                    adaptor.addChild(root_0, char_literal230_tree);
                    }
                    supkw=(Token)match(input,71,FOLLOW_71_in_moreidentifierRuleSuffixRubbish9439); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    supkw_tree = (Object)adaptor.create(supkw);
                    adaptor.addChild(root_0, supkw_tree);
                    }
                    pushFollow(FOLLOW_superSuffix_in_moreidentifierRuleSuffixRubbish9457);
                    supsuf=superSuffix();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, supsuf.getTree());
                    if ( state.backtracking==0 ) {

                                     retval.element.removeAllTags();
                                     InvocationTarget tar = new SuperTarget(((TargetScope_scope)TargetScope_stack.peek()).target);
                                     setKeyword(tar,supkw); 
                                     setLocation(tar,((TargetScope_scope)TargetScope_stack.peek()).start,supkw);
                                     retval.element = supsuf.element;
                                     ((TargetedExpression)retval.element).setTarget(tar);
                                  
                    }

                    }
                    break;
                case 8 :
                    // JavaP.g:1736:9: '.' newkw= 'new' in= innerCreator
                    {
                    char_literal231=(Token)match(input,35,FOLLOW_35_in_moreidentifierRuleSuffixRubbish9469); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal231_tree = (Object)adaptor.create(char_literal231);
                    adaptor.addChild(root_0, char_literal231_tree);
                    }
                    newkw=(Token)match(input,119,FOLLOW_119_in_moreidentifierRuleSuffixRubbish9473); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    newkw_tree = (Object)adaptor.create(newkw);
                    adaptor.addChild(root_0, newkw_tree);
                    }
                    pushFollow(FOLLOW_innerCreator_in_moreidentifierRuleSuffixRubbish9477);
                    in=innerCreator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, in.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = in.element;setKeyword(retval.element,newkw);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {

              if(! retval.element.descendants().contains(scopeTarget)) {
                scopeTarget.removeAllTags();
              }

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 131, moreidentifierRuleSuffixRubbish_StartIndex); }
            TargetScope_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "moreidentifierRuleSuffixRubbish"

    public static class identifierSuffixRubbush_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "identifierSuffixRubbush"
    // JavaP.g:1739:1: identifierSuffixRubbush returns [Expression element] : 'this' ( '.' id= identifierRule )* (arr= arrayAccessSuffixRubbish | arg= argumentsSuffixRubbish | '.' 'class' | '.' gen= explicitGenericInvocation | '.' supkw= 'super' supsuf= superSuffix | '.' newkw= 'new' in= innerCreator )? ;
    public final AspectJLo_JavaP.identifierSuffixRubbush_return identifierSuffixRubbush() throws RecognitionException {
        TargetScope_stack.push(new TargetScope_scope());

        AspectJLo_JavaP.identifierSuffixRubbush_return retval = new AspectJLo_JavaP.identifierSuffixRubbush_return();
        retval.start = input.LT(1);
        int identifierSuffixRubbush_StartIndex = input.index();
        Object root_0 = null;

        Token supkw=null;
        Token newkw=null;
        Token string_literal232=null;
        Token char_literal233=null;
        Token char_literal234=null;
        Token string_literal235=null;
        Token char_literal236=null;
        Token char_literal237=null;
        Token char_literal238=null;
        AspectJLoParser.identifierRule_return id = null;

        AspectJLo_JavaP.arrayAccessSuffixRubbish_return arr = null;

        AspectJLo_JavaP.argumentsSuffixRubbish_return arg = null;

        AspectJLo_JavaP.explicitGenericInvocation_return gen = null;

        AspectJLo_JavaP.superSuffix_return supsuf = null;

        AspectJLo_JavaP.innerCreator_return in = null;


        Object supkw_tree=null;
        Object newkw_tree=null;
        Object string_literal232_tree=null;
        Object char_literal233_tree=null;
        Object char_literal234_tree=null;
        Object string_literal235_tree=null;
        Object char_literal236_tree=null;
        Object char_literal237_tree=null;
        Object char_literal238_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 132) ) { return retval; }
            // JavaP.g:1741:2: ( 'this' ( '.' id= identifierRule )* (arr= arrayAccessSuffixRubbish | arg= argumentsSuffixRubbish | '.' 'class' | '.' gen= explicitGenericInvocation | '.' supkw= 'super' supsuf= superSuffix | '.' newkw= 'new' in= innerCreator )? )
            // JavaP.g:1741:4: 'this' ( '.' id= identifierRule )* (arr= arrayAccessSuffixRubbish | arg= argumentsSuffixRubbish | '.' 'class' | '.' gen= explicitGenericInvocation | '.' supkw= 'super' supsuf= superSuffix | '.' newkw= 'new' in= innerCreator )?
            {
            root_0 = (Object)adaptor.nil();

            string_literal232=(Token)match(input,75,FOLLOW_75_in_identifierSuffixRubbush9501); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            string_literal232_tree = (Object)adaptor.create(string_literal232);
            adaptor.addChild(root_0, string_literal232_tree);
            }
            if ( state.backtracking==0 ) {
              ((TargetScope_scope)TargetScope_stack.peek()).target = new ThisLiteral();
            }
            // JavaP.g:1741:54: ( '.' id= identifierRule )*
            loop160:
            do {
                int alt160=2;
                alt160 = dfa160.predict(input);
                switch (alt160) {
            	case 1 :
            	    // JavaP.g:1741:55: '.' id= identifierRule
            	    {
            	    char_literal233=(Token)match(input,35,FOLLOW_35_in_identifierSuffixRubbush9505); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    char_literal233_tree = (Object)adaptor.create(char_literal233);
            	    adaptor.addChild(root_0, char_literal233_tree);
            	    }
            	    pushFollow(FOLLOW_identifierRule_in_identifierSuffixRubbush9509);
            	    id=gAspectJLo.identifierRule();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, id.getTree());
            	    if ( state.backtracking==0 ) {
            	      ((TargetScope_scope)TargetScope_stack.peek()).target = new NamedTarget((id!=null?input.toString(id.start,id.stop):null),((TargetScope_scope)TargetScope_stack.peek()).target);
            	    }

            	    }
            	    break;

            	default :
            	    break loop160;
                }
            } while (true);

            if ( state.backtracking==0 ) {
              if(((TargetScope_scope)TargetScope_stack.peek()).target instanceof ThisLiteral) {
              	  retval.element = (ThisLiteral)((TargetScope_scope)TargetScope_stack.peek()).target;
              	 } else {
              	  retval.element = new NamedTargetExpression(((NamedTarget)((TargetScope_scope)TargetScope_stack.peek()).target).name(),cloneTargetOfTarget((NamedTarget)((TargetScope_scope)TargetScope_stack.peek()).target));
              	 }
            }
            // JavaP.g:1747:4: (arr= arrayAccessSuffixRubbish | arg= argumentsSuffixRubbish | '.' 'class' | '.' gen= explicitGenericInvocation | '.' supkw= 'super' supsuf= superSuffix | '.' newkw= 'new' in= innerCreator )?
            int alt161=7;
            alt161 = dfa161.predict(input);
            switch (alt161) {
                case 1 :
                    // JavaP.g:1748:9: arr= arrayAccessSuffixRubbish
                    {
                    pushFollow(FOLLOW_arrayAccessSuffixRubbish_in_identifierSuffixRubbush9534);
                    arr=arrayAccessSuffixRubbish();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, arr.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = arr.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1749:9: arg= argumentsSuffixRubbish
                    {
                    pushFollow(FOLLOW_argumentsSuffixRubbish_in_identifierSuffixRubbush9548);
                    arg=argumentsSuffixRubbish();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, arg.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = arg.element;
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:1750:9: '.' 'class'
                    {
                    char_literal234=(Token)match(input,35,FOLLOW_35_in_identifierSuffixRubbush9560); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal234_tree = (Object)adaptor.create(char_literal234);
                    adaptor.addChild(root_0, char_literal234_tree);
                    }
                    string_literal235=(Token)match(input,43,FOLLOW_43_in_identifierSuffixRubbush9562); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    string_literal235_tree = (Object)adaptor.create(string_literal235);
                    adaptor.addChild(root_0, string_literal235_tree);
                    }
                    if ( state.backtracking==0 ) {
                      retval.element = new ClassLiteral(createTypeReference((NamedTarget)((TargetScope_scope)TargetScope_stack.peek()).target));
                    }

                    }
                    break;
                case 4 :
                    // JavaP.g:1751:9: '.' gen= explicitGenericInvocation
                    {
                    char_literal236=(Token)match(input,35,FOLLOW_35_in_identifierSuffixRubbush9574); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal236_tree = (Object)adaptor.create(char_literal236);
                    adaptor.addChild(root_0, char_literal236_tree);
                    }
                    pushFollow(FOLLOW_explicitGenericInvocation_in_identifierSuffixRubbush9578);
                    gen=explicitGenericInvocation();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, gen.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = gen.element;
                    }

                    }
                    break;
                case 5 :
                    // JavaP.g:1752:9: '.' supkw= 'super' supsuf= superSuffix
                    {
                    char_literal237=(Token)match(input,35,FOLLOW_35_in_identifierSuffixRubbush9590); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal237_tree = (Object)adaptor.create(char_literal237);
                    adaptor.addChild(root_0, char_literal237_tree);
                    }
                    supkw=(Token)match(input,71,FOLLOW_71_in_identifierSuffixRubbush9594); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    supkw_tree = (Object)adaptor.create(supkw);
                    adaptor.addChild(root_0, supkw_tree);
                    }
                    pushFollow(FOLLOW_superSuffix_in_identifierSuffixRubbush9598);
                    supsuf=superSuffix();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, supsuf.getTree());
                    if ( state.backtracking==0 ) {

                                    InvocationTarget tar = new SuperTarget(((TargetScope_scope)TargetScope_stack.peek()).target);
                                    setKeyword(tar,supkw);
                                    setLocation(tar, ((TargetScope_scope)TargetScope_stack.peek()).start,supkw);
                                    retval.element = supsuf.element;
                                     ((TargetedExpression)retval.element).setTarget(tar);
                                   
                    }

                    }
                    break;
                case 6 :
                    // JavaP.g:1759:9: '.' newkw= 'new' in= innerCreator
                    {
                    char_literal238=(Token)match(input,35,FOLLOW_35_in_identifierSuffixRubbush9610); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    char_literal238_tree = (Object)adaptor.create(char_literal238);
                    adaptor.addChild(root_0, char_literal238_tree);
                    }
                    newkw=(Token)match(input,119,FOLLOW_119_in_identifierSuffixRubbush9614); if (state.failed) return retval;
                    if ( state.backtracking==0 ) {
                    newkw_tree = (Object)adaptor.create(newkw);
                    adaptor.addChild(root_0, newkw_tree);
                    }
                    pushFollow(FOLLOW_innerCreator_in_identifierSuffixRubbush9618);
                    in=innerCreator();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, in.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = in.element;setKeyword(retval.element,newkw);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 132, identifierSuffixRubbush_StartIndex); }
            TargetScope_stack.pop();

        }
        return retval;
    }
    // $ANTLR end "identifierSuffixRubbush"

    public static class argumentsSuffixRubbish_return extends ParserRuleReturnScope {
        public RegularMethodInvocation element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "argumentsSuffixRubbish"
    // JavaP.g:1764:1: argumentsSuffixRubbish returns [RegularMethodInvocation element] : args= arguments ;
    public final AspectJLo_JavaP.argumentsSuffixRubbish_return argumentsSuffixRubbish() throws RecognitionException {
        AspectJLo_JavaP.argumentsSuffixRubbish_return retval = new AspectJLo_JavaP.argumentsSuffixRubbish_return();
        retval.start = input.LT(1);
        int argumentsSuffixRubbish_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.arguments_return args = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 133) ) { return retval; }
            // JavaP.g:1766:2: (args= arguments )
            // JavaP.g:1766:4: args= arguments
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_arguments_in_argumentsSuffixRubbish9645);
            args=arguments();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, args.getTree());
            if ( state.backtracking==0 ) {
              String name = ((NamedTarget)((TargetScope_scope)TargetScope_stack.peek()).target).name();
              	         ((TargetScope_scope)TargetScope_stack.peek()).target = ((NamedTarget)((TargetScope_scope)TargetScope_stack.peek()).target).getTarget(); //chop off head
              	         retval.element = invocation(name, ((TargetScope_scope)TargetScope_stack.peek()).target);
              	         retval.element.addAllArguments(args.element);
              	         setLocation(retval.element, ((TargetScope_scope)TargetScope_stack.peek()).start, args.stop);
              	        
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 133, argumentsSuffixRubbish_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "argumentsSuffixRubbish"

    public static class arrayAccessSuffixRubbish_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "arrayAccessSuffixRubbish"
    // JavaP.g:1776:1: arrayAccessSuffixRubbish returns [Expression element] : (open= '[' arrex= expression close= ']' )+ ;
    public final AspectJLo_JavaP.arrayAccessSuffixRubbish_return arrayAccessSuffixRubbish() throws RecognitionException {
        AspectJLo_JavaP.arrayAccessSuffixRubbish_return retval = new AspectJLo_JavaP.arrayAccessSuffixRubbish_return();
        retval.start = input.LT(1);
        int arrayAccessSuffixRubbish_StartIndex = input.index();
        Object root_0 = null;

        Token open=null;
        Token close=null;
        AspectJLoParser.expression_return arrex = null;


        Object open_tree=null;
        Object close_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 134) ) { return retval; }
            // JavaP.g:1778:2: ( (open= '[' arrex= expression close= ']' )+ )
            // JavaP.g:1778:4: (open= '[' arrex= expression close= ']' )+
            {
            root_0 = (Object)adaptor.nil();

            if ( state.backtracking==0 ) {
              retval.element = new ArrayAccessExpression(new NamedTargetExpression(((NamedTarget)((TargetScope_scope)TargetScope_stack.peek()).target).name(),cloneTargetOfTarget((NamedTarget)((TargetScope_scope)TargetScope_stack.peek()).target)));
            }
            // JavaP.g:1779:10: (open= '[' arrex= expression close= ']' )+
            int cnt162=0;
            loop162:
            do {
                int alt162=2;
                alt162 = dfa162.predict(input);
                switch (alt162) {
            	case 1 :
            	    // JavaP.g:1779:11: open= '[' arrex= expression close= ']'
            	    {
            	    open=(Token)match(input,54,FOLLOW_54_in_arrayAccessSuffixRubbish9692); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    open_tree = (Object)adaptor.create(open);
            	    adaptor.addChild(root_0, open_tree);
            	    }
            	    pushFollow(FOLLOW_expression_in_arrayAccessSuffixRubbish9696);
            	    arrex=gAspectJLo.expression();

            	    state._fsp--;
            	    if (state.failed) return retval;
            	    if ( state.backtracking==0 ) adaptor.addChild(root_0, arrex.getTree());
            	    close=(Token)match(input,55,FOLLOW_55_in_arrayAccessSuffixRubbish9700); if (state.failed) return retval;
            	    if ( state.backtracking==0 ) {
            	    close_tree = (Object)adaptor.create(close);
            	    adaptor.addChild(root_0, close_tree);
            	    }
            	    if ( state.backtracking==0 ) {
            	       FilledArrayIndex index = new FilledArrayIndex(arrex.element);
            	      	           ((ArrayAccessExpression)retval.element).addIndex(index);
            	      	           setLocation(index, open, close);
            	      	          
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt162 >= 1 ) break loop162;
            	    if (state.backtracking>0) {state.failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(162, input);
                        throw eee;
                }
                cnt162++;
            } while (true);


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              setLocation(retval.element, ((TargetScope_scope)TargetScope_stack.peek()).start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 134, arrayAccessSuffixRubbish_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "arrayAccessSuffixRubbish"

    public static class creator_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "creator"
    // JavaP.g:1789:1: creator returns [Expression element] : (targs= nonWildcardTypeArguments tx= createdName restx= classCreatorRest | tt= createdName ( '[' ']' )+ init= arrayInitializer | ttt= createdName ( '[' exx= expression ']' )+ ( '[' ']' )* | t= createdName rest= classCreatorRest );
    public final AspectJLo_JavaP.creator_return creator() throws RecognitionException {
        AspectJLo_JavaP.creator_return retval = new AspectJLo_JavaP.creator_return();
        retval.start = input.LT(1);
        int creator_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal239=null;
        Token char_literal240=null;
        Token char_literal241=null;
        Token char_literal242=null;
        Token char_literal243=null;
        Token char_literal244=null;
        AspectJLo_JavaP.nonWildcardTypeArguments_return targs = null;

        AspectJLo_JavaP.createdName_return tx = null;

        AspectJLo_JavaP.classCreatorRest_return restx = null;

        AspectJLo_JavaP.createdName_return tt = null;

        AspectJLo_JavaP.arrayInitializer_return init = null;

        AspectJLo_JavaP.createdName_return ttt = null;

        AspectJLoParser.expression_return exx = null;

        AspectJLo_JavaP.createdName_return t = null;

        AspectJLo_JavaP.classCreatorRest_return rest = null;


        Object char_literal239_tree=null;
        Object char_literal240_tree=null;
        Object char_literal241_tree=null;
        Object char_literal242_tree=null;
        Object char_literal243_tree=null;
        Object char_literal244_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 135) ) { return retval; }
            // JavaP.g:1792:5: (targs= nonWildcardTypeArguments tx= createdName restx= classCreatorRest | tt= createdName ( '[' ']' )+ init= arrayInitializer | ttt= createdName ( '[' exx= expression ']' )+ ( '[' ']' )* | t= createdName rest= classCreatorRest )
            int alt166=4;
            alt166 = dfa166.predict(input);
            switch (alt166) {
                case 1 :
                    // JavaP.g:1792:9: targs= nonWildcardTypeArguments tx= createdName restx= classCreatorRest
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_nonWildcardTypeArguments_in_creator9757);
                    targs=nonWildcardTypeArguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, targs.getTree());
                    pushFollow(FOLLOW_createdName_in_creator9761);
                    tx=createdName();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, tx.getTree());
                    pushFollow(FOLLOW_classCreatorRest_in_creator9765);
                    restx=classCreatorRest();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, restx.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new ConstructorInvocation((BasicJavaTypeReference)tx.element,((TargetScope_scope)TargetScope_stack.peek()).target);
                                ((ConstructorInvocation)retval.element).setBody(restx.element.body());
                                ((ConstructorInvocation)retval.element).addAllArguments(restx.element.arguments());
                                ((ConstructorInvocation)retval.element).addAllTypeArguments(targs.element);
                               
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1798:10: tt= createdName ( '[' ']' )+ init= arrayInitializer
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_createdName_in_creator9789);
                    tt=createdName();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, tt.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new ArrayCreationExpression(tt.element);
                    }
                    // JavaP.g:1799:14: ( '[' ']' )+
                    int cnt163=0;
                    loop163:
                    do {
                        int alt163=2;
                        int LA163_0 = input.LA(1);

                        if ( (LA163_0==54) ) {
                            alt163=1;
                        }


                        switch (alt163) {
                    	case 1 :
                    	    // JavaP.g:1799:15: '[' ']'
                    	    {
                    	    char_literal239=(Token)match(input,54,FOLLOW_54_in_creator9808); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal239_tree = (Object)adaptor.create(char_literal239);
                    	    adaptor.addChild(root_0, char_literal239_tree);
                    	    }
                    	    char_literal240=(Token)match(input,55,FOLLOW_55_in_creator9810); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal240_tree = (Object)adaptor.create(char_literal240);
                    	    adaptor.addChild(root_0, char_literal240_tree);
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	      ((ArrayCreationExpression)retval.element).addDimensionInitializer(new EmptyArrayIndex(1));
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt163 >= 1 ) break loop163;
                    	    if (state.backtracking>0) {state.failed=true; return retval;}
                                EarlyExitException eee =
                                    new EarlyExitException(163, input);
                                throw eee;
                        }
                        cnt163++;
                    } while (true);

                    pushFollow(FOLLOW_arrayInitializer_in_creator9818);
                    init=arrayInitializer();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, init.getTree());
                    if ( state.backtracking==0 ) {
                      ((ArrayCreationExpression)retval.element).setInitializer(init.element);
                    }

                    }
                    break;
                case 3 :
                    // JavaP.g:1801:10: ttt= createdName ( '[' exx= expression ']' )+ ( '[' ']' )*
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_createdName_in_creator9842);
                    ttt=createdName();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, ttt.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new ArrayCreationExpression(ttt.element);
                    }
                    // JavaP.g:1802:11: ( '[' exx= expression ']' )+
                    int cnt164=0;
                    loop164:
                    do {
                        int alt164=2;
                        alt164 = dfa164.predict(input);
                        switch (alt164) {
                    	case 1 :
                    	    // JavaP.g:1802:12: '[' exx= expression ']'
                    	    {
                    	    char_literal241=(Token)match(input,54,FOLLOW_54_in_creator9859); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal241_tree = (Object)adaptor.create(char_literal241);
                    	    adaptor.addChild(root_0, char_literal241_tree);
                    	    }
                    	    pushFollow(FOLLOW_expression_in_creator9863);
                    	    exx=gAspectJLo.expression();

                    	    state._fsp--;
                    	    if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) adaptor.addChild(root_0, exx.getTree());
                    	    char_literal242=(Token)match(input,55,FOLLOW_55_in_creator9865); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal242_tree = (Object)adaptor.create(char_literal242);
                    	    adaptor.addChild(root_0, char_literal242_tree);
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	      ((ArrayCreationExpression)retval.element).addDimensionInitializer(new FilledArrayIndex(exx.element));
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt164 >= 1 ) break loop164;
                    	    if (state.backtracking>0) {state.failed=true; return retval;}
                                EarlyExitException eee =
                                    new EarlyExitException(164, input);
                                throw eee;
                        }
                        cnt164++;
                    } while (true);

                    // JavaP.g:1803:13: ( '[' ']' )*
                    loop165:
                    do {
                        int alt165=2;
                        int LA165_0 = input.LA(1);

                        if ( (LA165_0==54) ) {
                            int LA165_2 = input.LA(2);

                            if ( (LA165_2==55) ) {
                                alt165=1;
                            }


                        }


                        switch (alt165) {
                    	case 1 :
                    	    // JavaP.g:1803:14: '[' ']'
                    	    {
                    	    char_literal243=(Token)match(input,54,FOLLOW_54_in_creator9885); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal243_tree = (Object)adaptor.create(char_literal243);
                    	    adaptor.addChild(root_0, char_literal243_tree);
                    	    }
                    	    char_literal244=(Token)match(input,55,FOLLOW_55_in_creator9887); if (state.failed) return retval;
                    	    if ( state.backtracking==0 ) {
                    	    char_literal244_tree = (Object)adaptor.create(char_literal244);
                    	    adaptor.addChild(root_0, char_literal244_tree);
                    	    }
                    	    if ( state.backtracking==0 ) {
                    	      ((ArrayCreationExpression)retval.element).addDimensionInitializer(new EmptyArrayIndex(1));
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop165;
                        }
                    } while (true);


                    }
                    break;
                case 4 :
                    // JavaP.g:1804:9: t= createdName rest= classCreatorRest
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_createdName_in_creator9903);
                    t=createdName();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, t.getTree());
                    pushFollow(FOLLOW_classCreatorRest_in_creator9907);
                    rest=classCreatorRest();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, rest.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = new ConstructorInvocation((BasicJavaTypeReference)t.element,((TargetScope_scope)TargetScope_stack.peek()).target);
                                ((ConstructorInvocation)retval.element).setBody(rest.element.body());
                                ((ConstructorInvocation)retval.element).addAllArguments(rest.element.arguments());
                               
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
            if ( state.backtracking==0 ) {
              setLocation(retval.element, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 135, creator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "creator"

    public static class createdName_return extends ParserRuleReturnScope {
        public JavaTypeReference element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "createdName"
    // JavaP.g:1812:1: createdName returns [JavaTypeReference element] : (cd= classOrInterfaceType | prim= primitiveType );
    public final AspectJLo_JavaP.createdName_return createdName() throws RecognitionException {
        AspectJLo_JavaP.createdName_return retval = new AspectJLo_JavaP.createdName_return();
        retval.start = input.LT(1);
        int createdName_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.classOrInterfaceType_return cd = null;

        AspectJLo_JavaP.primitiveType_return prim = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 136) ) { return retval; }
            // JavaP.g:1813:5: (cd= classOrInterfaceType | prim= primitiveType )
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( (LA167_0==Identifier||(LA167_0>=Export && LA167_0<=Overrides)) ) {
                alt167=1;
            }
            else if ( ((LA167_0>=62 && LA167_0<=69)) ) {
                alt167=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("", 167, 0, input);

                throw nvae;
            }
            switch (alt167) {
                case 1 :
                    // JavaP.g:1813:9: cd= classOrInterfaceType
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_classOrInterfaceType_in_createdName9956);
                    cd=classOrInterfaceType();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, cd.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = cd.element;
                    }

                    }
                    break;
                case 2 :
                    // JavaP.g:1814:9: prim= primitiveType
                    {
                    root_0 = (Object)adaptor.nil();

                    pushFollow(FOLLOW_primitiveType_in_createdName9970);
                    prim=primitiveType();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, prim.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = prim.element;
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 136, createdName_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "createdName"

    public static class innerCreator_return extends ParserRuleReturnScope {
        public ConstructorInvocation element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "innerCreator"
    // JavaP.g:1819:1: innerCreator returns [ConstructorInvocation element] : (targs= nonWildcardTypeArguments )? name= identifierRule rest= classCreatorRest ;
    public final AspectJLo_JavaP.innerCreator_return innerCreator() throws RecognitionException {
        AspectJLo_JavaP.innerCreator_return retval = new AspectJLo_JavaP.innerCreator_return();
        retval.start = input.LT(1);
        int innerCreator_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.nonWildcardTypeArguments_return targs = null;

        AspectJLoParser.identifierRule_return name = null;

        AspectJLo_JavaP.classCreatorRest_return rest = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 137) ) { return retval; }
            // JavaP.g:1820:5: ( (targs= nonWildcardTypeArguments )? name= identifierRule rest= classCreatorRest )
            // JavaP.g:1820:9: (targs= nonWildcardTypeArguments )? name= identifierRule rest= classCreatorRest
            {
            root_0 = (Object)adaptor.nil();

            // JavaP.g:1820:9: (targs= nonWildcardTypeArguments )?
            int alt168=2;
            int LA168_0 = input.LA(1);

            if ( (LA168_0==46) ) {
                alt168=1;
            }
            switch (alt168) {
                case 1 :
                    // JavaP.g:1820:10: targs= nonWildcardTypeArguments
                    {
                    pushFollow(FOLLOW_nonWildcardTypeArguments_in_innerCreator10000);
                    targs=nonWildcardTypeArguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, targs.getTree());

                    }
                    break;

            }

            pushFollow(FOLLOW_identifierRule_in_innerCreator10015);
            name=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            pushFollow(FOLLOW_classCreatorRest_in_innerCreator10019);
            rest=classCreatorRest();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, rest.getTree());
            if ( state.backtracking==0 ) {
              BasicJavaTypeReference tref = (BasicJavaTypeReference)typeRef((name!=null?input.toString(name.start,name.stop):null));
                       setLocation(tref,name.start,name.start);
                       retval.element = new ConstructorInvocation((BasicJavaTypeReference)tref,((TargetScope_scope)TargetScope_stack.peek()).target);
                       retval.element.setBody(rest.element.body());
                       retval.element.addAllArguments(rest.element.arguments());
                       if(targs != null) {
                         retval.element.addAllTypeArguments(targs.element);
                       }
                      
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 137, innerCreator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "innerCreator"

    public static class classCreatorRest_return extends ParserRuleReturnScope {
        public ClassCreatorRest element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "classCreatorRest"
    // JavaP.g:1834:1: classCreatorRest returns [ClassCreatorRest element] : args= arguments (body= classBody )? ;
    public final AspectJLo_JavaP.classCreatorRest_return classCreatorRest() throws RecognitionException {
        AspectJLo_JavaP.classCreatorRest_return retval = new AspectJLo_JavaP.classCreatorRest_return();
        retval.start = input.LT(1);
        int classCreatorRest_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.arguments_return args = null;

        AspectJLo_JavaP.classBody_return body = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 138) ) { return retval; }
            // JavaP.g:1835:5: (args= arguments (body= classBody )? )
            // JavaP.g:1835:9: args= arguments (body= classBody )?
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_arguments_in_classCreatorRest10056);
            args=arguments();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, args.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new ClassCreatorRest(args.element);
            }
            // JavaP.g:1835:78: (body= classBody )?
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==50) ) {
                alt169=1;
            }
            switch (alt169) {
                case 1 :
                    // JavaP.g:1835:79: body= classBody
                    {
                    pushFollow(FOLLOW_classBody_in_classCreatorRest10062);
                    body=classBody();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, body.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element.setBody(body.element);
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 138, classCreatorRest_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "classCreatorRest"

    public static class explicitGenericInvocation_return extends ParserRuleReturnScope {
        public Expression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "explicitGenericInvocation"
    // JavaP.g:1839:1: explicitGenericInvocation returns [Expression element] : targs= nonWildcardTypeArguments name= identifierRule args= arguments ;
    public final AspectJLo_JavaP.explicitGenericInvocation_return explicitGenericInvocation() throws RecognitionException {
        AspectJLo_JavaP.explicitGenericInvocation_return retval = new AspectJLo_JavaP.explicitGenericInvocation_return();
        retval.start = input.LT(1);
        int explicitGenericInvocation_StartIndex = input.index();
        Object root_0 = null;

        AspectJLo_JavaP.nonWildcardTypeArguments_return targs = null;

        AspectJLoParser.identifierRule_return name = null;

        AspectJLo_JavaP.arguments_return args = null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 139) ) { return retval; }
            // JavaP.g:1840:5: (targs= nonWildcardTypeArguments name= identifierRule args= arguments )
            // JavaP.g:1840:9: targs= nonWildcardTypeArguments name= identifierRule args= arguments
            {
            root_0 = (Object)adaptor.nil();

            pushFollow(FOLLOW_nonWildcardTypeArguments_in_explicitGenericInvocation10096);
            targs=nonWildcardTypeArguments();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, targs.getTree());
            pushFollow(FOLLOW_identifierRule_in_explicitGenericInvocation10100);
            name=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            pushFollow(FOLLOW_arguments_in_explicitGenericInvocation10104);
            args=arguments();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, args.getTree());
            if ( state.backtracking==0 ) {
              retval.element = invocation((name!=null?input.toString(name.start,name.stop):null),((TargetScope_scope)TargetScope_stack.peek()).target);
                         ((RegularMethodInvocation)retval.element).addAllArguments(args.element);
                         ((RegularMethodInvocation)retval.element).addAllTypeArguments(targs.element);
                        
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 139, explicitGenericInvocation_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "explicitGenericInvocation"

    public static class nonWildcardTypeArguments_return extends ParserRuleReturnScope {
        public List<ActualTypeArgument> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "nonWildcardTypeArguments"
    // JavaP.g:1847:1: nonWildcardTypeArguments returns [List<ActualTypeArgument> element] : '<' list= typeList '>' ;
    public final AspectJLo_JavaP.nonWildcardTypeArguments_return nonWildcardTypeArguments() throws RecognitionException {
        AspectJLo_JavaP.nonWildcardTypeArguments_return retval = new AspectJLo_JavaP.nonWildcardTypeArguments_return();
        retval.start = input.LT(1);
        int nonWildcardTypeArguments_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal245=null;
        Token char_literal246=null;
        AspectJLo_JavaP.typeList_return list = null;


        Object char_literal245_tree=null;
        Object char_literal246_tree=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 140) ) { return retval; }
            // JavaP.g:1848:5: ( '<' list= typeList '>' )
            // JavaP.g:1848:9: '<' list= typeList '>'
            {
            root_0 = (Object)adaptor.nil();

            char_literal245=(Token)match(input,46,FOLLOW_46_in_nonWildcardTypeArguments10143); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal245_tree = (Object)adaptor.create(char_literal245);
            adaptor.addChild(root_0, char_literal245_tree);
            }
            pushFollow(FOLLOW_typeList_in_nonWildcardTypeArguments10147);
            list=typeList();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, list.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new ArrayList<ActualTypeArgument>();for(TypeReference tref:list.element){retval.element.add(java().createBasicTypeArgument(tref));}
            }
            char_literal246=(Token)match(input,48,FOLLOW_48_in_nonWildcardTypeArguments10150); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal246_tree = (Object)adaptor.create(char_literal246);
            adaptor.addChild(root_0, char_literal246_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 140, nonWildcardTypeArguments_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "nonWildcardTypeArguments"

    public static class superSuffix_return extends ParserRuleReturnScope {
        public TargetedExpression element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "superSuffix"
    // JavaP.g:1852:1: superSuffix returns [TargetedExpression element] : '.' name= identifierRule (args= arguments )? ;
    public final AspectJLo_JavaP.superSuffix_return superSuffix() throws RecognitionException {
        AspectJLo_JavaP.superSuffix_return retval = new AspectJLo_JavaP.superSuffix_return();
        retval.start = input.LT(1);
        int superSuffix_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal247=null;
        AspectJLoParser.identifierRule_return name = null;

        AspectJLo_JavaP.arguments_return args = null;


        Object char_literal247_tree=null;


           Token start=null;
           Token stop=null;

        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 141) ) { return retval; }
            // JavaP.g:1857:5: ( '.' name= identifierRule (args= arguments )? )
            // JavaP.g:1859:5: '.' name= identifierRule (args= arguments )?
            {
            root_0 = (Object)adaptor.nil();

            char_literal247=(Token)match(input,35,FOLLOW_35_in_superSuffix10196); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal247_tree = (Object)adaptor.create(char_literal247);
            adaptor.addChild(root_0, char_literal247_tree);
            }
            pushFollow(FOLLOW_identifierRule_in_superSuffix10200);
            name=gAspectJLo.identifierRule();

            state._fsp--;
            if (state.failed) return retval;
            if ( state.backtracking==0 ) adaptor.addChild(root_0, name.getTree());
            if ( state.backtracking==0 ) {
              retval.element = new NamedTargetExpression((name!=null?input.toString(name.start,name.stop):null));
                                       start = name.start;
                                       stop = name.start;
            }
            // JavaP.g:1862:9: (args= arguments )?
            int alt170=2;
            int LA170_0 = input.LA(1);

            if ( (LA170_0==72) ) {
                alt170=1;
            }
            switch (alt170) {
                case 1 :
                    // JavaP.g:1862:10: args= arguments
                    {
                    pushFollow(FOLLOW_arguments_in_superSuffix10216);
                    args=arguments();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, args.getTree());
                    if ( state.backtracking==0 ) {
                      retval.element = invocation((name!=null?input.toString(name.start,name.stop):null),null);
                                ((RegularMethodInvocation)retval.element).addAllArguments(args.element);
                                stop = args.stop;
                                
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
              setLocation(retval.element,start,stop);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 141, superSuffix_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "superSuffix"

    public static class arguments_return extends ParserRuleReturnScope {
        public List<Expression> element;
        Object tree;
        public Object getTree() { return tree; }
    };

    // $ANTLR start "arguments"
    // JavaP.g:1871:1: arguments returns [List<Expression> element] : '(' (list= expressionList )? ')' ;
    public final AspectJLo_JavaP.arguments_return arguments() throws RecognitionException {
        AspectJLo_JavaP.arguments_return retval = new AspectJLo_JavaP.arguments_return();
        retval.start = input.LT(1);
        int arguments_StartIndex = input.index();
        Object root_0 = null;

        Token char_literal248=null;
        Token char_literal249=null;
        AspectJLo_JavaP.expressionList_return list = null;


        Object char_literal248_tree=null;
        Object char_literal249_tree=null;

        retval.element = new ArrayList<Expression>();
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 142) ) { return retval; }
            // JavaP.g:1873:5: ( '(' (list= expressionList )? ')' )
            // JavaP.g:1873:9: '(' (list= expressionList )? ')'
            {
            root_0 = (Object)adaptor.nil();

            char_literal248=(Token)match(input,72,FOLLOW_72_in_arguments10276); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal248_tree = (Object)adaptor.create(char_literal248);
            adaptor.addChild(root_0, char_literal248_tree);
            }
            // JavaP.g:1873:13: (list= expressionList )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==Identifier||(LA171_0>=FloatingPointLiteral && LA171_0<=DecimalLiteral)||(LA171_0>=Export && LA171_0<=Overrides)||LA171_0==53||(LA171_0>=62 && LA171_0<=69)||(LA171_0>=71 && LA171_0<=72)||(LA171_0>=75 && LA171_0<=78)||(LA171_0>=111 && LA171_0<=112)||(LA171_0>=115 && LA171_0<=120)||(LA171_0>=122 && LA171_0<=125)) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // JavaP.g:1873:14: list= expressionList
                    {
                    pushFollow(FOLLOW_expressionList_in_arguments10281);
                    list=expressionList();

                    state._fsp--;
                    if (state.failed) return retval;
                    if ( state.backtracking==0 ) adaptor.addChild(root_0, list.getTree());
                    if ( state.backtracking==0 ) {
                       for(Expression ex: list.element) {retval.element.add(ex);}
                    }

                    }
                    break;

            }

            char_literal249=(Token)match(input,73,FOLLOW_73_in_arguments10288); if (state.failed) return retval;
            if ( state.backtracking==0 ) {
            char_literal249_tree = (Object)adaptor.create(char_literal249);
            adaptor.addChild(root_0, char_literal249_tree);
            }

            }

            retval.stop = input.LT(-1);

            if ( state.backtracking==0 ) {

            retval.tree = (Object)adaptor.rulePostProcessing(root_0);
            adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
    	retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);

        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 142, arguments_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end "arguments"

    // $ANTLR start synpred5_JavaP
    public final void synpred5_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.packageDeclaration_return np = null;

        AspectJLo_JavaP.importDeclaration_return imp = null;

        AspectJLo_JavaP.typeDeclaration_return typech = null;

        AspectJLo_JavaP.classOrInterfaceDeclaration_return cd = null;


        // JavaP.g:356:10: ( annotations (np= packageDeclaration (imp= importDeclaration )* (typech= typeDeclaration )* | cd= classOrInterfaceDeclaration (typech= typeDeclaration )* ) )
        // JavaP.g:356:10: annotations (np= packageDeclaration (imp= importDeclaration )* (typech= typeDeclaration )* | cd= classOrInterfaceDeclaration (typech= typeDeclaration )* )
        {
        pushFollow(FOLLOW_annotations_in_synpred5_JavaP141);
        annotations();

        state._fsp--;
        if (state.failed) return ;
        // JavaP.g:357:9: (np= packageDeclaration (imp= importDeclaration )* (typech= typeDeclaration )* | cd= classOrInterfaceDeclaration (typech= typeDeclaration )* )
        int alt177=2;
        int LA177_0 = input.LA(1);

        if ( (LA177_0==31) ) {
            alt177=1;
        }
        else if ( (LA177_0==ENUM||LA177_0==34||(LA177_0>=37 && LA177_0<=43)||LA177_0==52||LA177_0==79) ) {
            alt177=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 177, 0, input);

            throw nvae;
        }
        switch (alt177) {
            case 1 :
                // JavaP.g:357:13: np= packageDeclaration (imp= importDeclaration )* (typech= typeDeclaration )*
                {
                pushFollow(FOLLOW_packageDeclaration_in_synpred5_JavaP157);
                np=packageDeclaration();

                state._fsp--;
                if (state.failed) return ;
                // JavaP.g:362:13: (imp= importDeclaration )*
                loop174:
                do {
                    int alt174=2;
                    int LA174_0 = input.LA(1);

                    if ( (LA174_0==33) ) {
                        alt174=1;
                    }


                    switch (alt174) {
                	case 1 :
                	    // JavaP.g:362:14: imp= importDeclaration
                	    {
                	    pushFollow(FOLLOW_importDeclaration_in_synpred5_JavaP193);
                	    imp=importDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    break loop174;
                    }
                } while (true);

                // JavaP.g:363:13: (typech= typeDeclaration )*
                loop175:
                do {
                    int alt175=2;
                    int LA175_0 = input.LA(1);

                    if ( (LA175_0==ENUM||LA175_0==32||LA175_0==34||(LA175_0>=37 && LA175_0<=43)||LA175_0==52||LA175_0==79) ) {
                        alt175=1;
                    }


                    switch (alt175) {
                	case 1 :
                	    // JavaP.g:363:14: typech= typeDeclaration
                	    {
                	    pushFollow(FOLLOW_typeDeclaration_in_synpred5_JavaP214);
                	    typech=typeDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    break loop175;
                    }
                } while (true);


                }
                break;
            case 2 :
                // JavaP.g:367:13: cd= classOrInterfaceDeclaration (typech= typeDeclaration )*
                {
                pushFollow(FOLLOW_classOrInterfaceDeclaration_in_synpred5_JavaP263);
                cd=classOrInterfaceDeclaration();

                state._fsp--;
                if (state.failed) return ;
                // JavaP.g:373:13: (typech= typeDeclaration )*
                loop176:
                do {
                    int alt176=2;
                    int LA176_0 = input.LA(1);

                    if ( (LA176_0==ENUM||LA176_0==32||LA176_0==34||(LA176_0>=37 && LA176_0<=43)||LA176_0==52||LA176_0==79) ) {
                        alt176=1;
                    }


                    switch (alt176) {
                	case 1 :
                	    // JavaP.g:373:14: typech= typeDeclaration
                	    {
                	    pushFollow(FOLLOW_typeDeclaration_in_synpred5_JavaP298);
                	    typech=typeDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }
                	    break;

                	default :
                	    break loop176;
                    }
                } while (true);


                }
                break;

        }


        }
    }
    // $ANTLR end synpred5_JavaP

    // $ANTLR start synpred52_JavaP
    public final void synpred52_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.methodDeclaration_return method = null;


        // JavaP.g:693:9: (method= methodDeclaration )
        // JavaP.g:693:9: method= methodDeclaration
        {
        pushFollow(FOLLOW_methodDeclaration_in_synpred52_JavaP2448);
        method=methodDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred52_JavaP

    // $ANTLR start synpred60_JavaP
    public final void synpred60_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.interfaceConstant_return cst = null;


        // JavaP.g:753:9: (cst= interfaceConstant )
        // JavaP.g:753:9: cst= interfaceConstant
        {
        pushFollow(FOLLOW_interfaceConstant_in_synpred60_JavaP2886);
        cst=interfaceConstant();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred60_JavaP

    // $ANTLR start synpred105_JavaP
    public final void synpred105_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.variableModifiers_return mods = null;

        AspectJLo_JavaP.type_return t = null;

        AspectJLo_JavaP.variableDeclaratorId_return id = null;

        AspectJLo_JavaP.formalParameterDecls_return decls = null;


        // JavaP.g:1010:9: (mods= variableModifiers t= type id= variableDeclaratorId ( ',' decls= formalParameterDecls )? )
        // JavaP.g:1010:9: mods= variableModifiers t= type id= variableDeclaratorId ( ',' decls= formalParameterDecls )?
        {
        pushFollow(FOLLOW_variableModifiers_in_synpred105_JavaP4611);
        mods=variableModifiers();

        state._fsp--;
        if (state.failed) return ;
        pushFollow(FOLLOW_type_in_synpred105_JavaP4615);
        t=type();

        state._fsp--;
        if (state.failed) return ;
        pushFollow(FOLLOW_variableDeclaratorId_in_synpred105_JavaP4619);
        id=variableDeclaratorId();

        state._fsp--;
        if (state.failed) return ;
        // JavaP.g:1011:9: ( ',' decls= formalParameterDecls )?
        int alt184=2;
        int LA184_0 = input.LA(1);

        if ( (LA184_0==47) ) {
            alt184=1;
        }
        switch (alt184) {
            case 1 :
                // JavaP.g:1011:10: ',' decls= formalParameterDecls
                {
                match(input,47,FOLLOW_47_in_synpred105_JavaP4631); if (state.failed) return ;
                pushFollow(FOLLOW_formalParameterDecls_in_synpred105_JavaP4635);
                decls=formalParameterDecls();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred105_JavaP

    // $ANTLR start synpred106_JavaP
    public final void synpred106_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.explicitConstructorInvocation_return inv = null;


        // JavaP.g:1035:11: (inv= explicitConstructorInvocation )
        // JavaP.g:1035:11: inv= explicitConstructorInvocation
        {
        pushFollow(FOLLOW_explicitConstructorInvocation_in_synpred106_JavaP4758);
        inv=explicitConstructorInvocation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred106_JavaP

    // $ANTLR start synpred109_JavaP
    public final void synpred109_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.arguments_return args = null;


        // JavaP.g:1041:9: ( ( nonWildcardTypeArguments )? 'this' args= arguments ';' )
        // JavaP.g:1041:9: ( nonWildcardTypeArguments )? 'this' args= arguments ';'
        {
        // JavaP.g:1041:9: ( nonWildcardTypeArguments )?
        int alt185=2;
        int LA185_0 = input.LA(1);

        if ( (LA185_0==46) ) {
            alt185=1;
        }
        switch (alt185) {
            case 1 :
                // JavaP.g:0:0: nonWildcardTypeArguments
                {
                pushFollow(FOLLOW_nonWildcardTypeArguments_in_synpred109_JavaP4810);
                nonWildcardTypeArguments();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }

        match(input,75,FOLLOW_75_in_synpred109_JavaP4813); if (state.failed) return ;
        pushFollow(FOLLOW_arguments_in_synpred109_JavaP4817);
        args=arguments();

        state._fsp--;
        if (state.failed) return ;
        match(input,32,FOLLOW_32_in_synpred109_JavaP4819); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred109_JavaP

    // $ANTLR start synpred121_JavaP
    public final void synpred121_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.annotation_return a = null;


        // JavaP.g:1090:10: (a= annotation )
        // JavaP.g:1090:10: a= annotation
        {
        pushFollow(FOLLOW_annotation_in_synpred121_JavaP5130);
        a=annotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred121_JavaP

    // $ANTLR start synpred144_JavaP
    public final void synpred144_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.localVariableDeclarationStatement_return local = null;


        // JavaP.g:1187:9: (local= localVariableDeclarationStatement )
        // JavaP.g:1187:9: local= localVariableDeclarationStatement
        {
        pushFollow(FOLLOW_localVariableDeclarationStatement_in_synpred144_JavaP5851);
        local=localVariableDeclarationStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred144_JavaP

    // $ANTLR start synpred145_JavaP
    public final void synpred145_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.classOrInterfaceDeclaration_return cd = null;


        // JavaP.g:1188:9: (cd= classOrInterfaceDeclaration )
        // JavaP.g:1188:9: cd= classOrInterfaceDeclaration
        {
        pushFollow(FOLLOW_classOrInterfaceDeclaration_in_synpred145_JavaP5865);
        cd=classOrInterfaceDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred145_JavaP

    // $ANTLR start synpred150_JavaP
    public final void synpred150_JavaP_fragment() throws RecognitionException {   
        Token elsekey=null;
        AspectJLo_JavaP.statement_return ifelse = null;


        // JavaP.g:1211:72: (elsekey= 'else' ifelse= statement )
        // JavaP.g:1211:72: elsekey= 'else' ifelse= statement
        {
        elsekey=(Token)match(input,83,FOLLOW_83_in_synpred150_JavaP6089); if (state.failed) return ;
        pushFollow(FOLLOW_statement_in_synpred150_JavaP6093);
        ifelse=statement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred150_JavaP

    // $ANTLR start synpred155_JavaP
    public final void synpred155_JavaP_fragment() throws RecognitionException {   
        Token finkey=null;
        AspectJLo_JavaP.catches_return cts = null;

        AspectJLo_JavaP.block_return trybl = null;


        // JavaP.g:1231:11: (cts= catches finkey= 'finally' trybl= block )
        // JavaP.g:1231:11: cts= catches finkey= 'finally' trybl= block
        {
        pushFollow(FOLLOW_catches_in_synpred155_JavaP6251);
        cts=catches();

        state._fsp--;
        if (state.failed) return ;
        finkey=(Token)match(input,88,FOLLOW_88_in_synpred155_JavaP6255); if (state.failed) return ;
        pushFollow(FOLLOW_block_in_synpred155_JavaP6259);
        trybl=block();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred155_JavaP

    // $ANTLR start synpred156_JavaP
    public final void synpred156_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.catches_return ctss = null;


        // JavaP.g:1236:11: (ctss= catches )
        // JavaP.g:1236:11: ctss= catches
        {
        pushFollow(FOLLOW_catches_in_synpred156_JavaP6287);
        ctss=catches();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred156_JavaP

    // $ANTLR start synpred172_JavaP
    public final void synpred172_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.constantExpression_return csexpr = null;


        // JavaP.g:1305:9: ( 'case' csexpr= constantExpression ':' )
        // JavaP.g:1305:9: 'case' csexpr= constantExpression ':'
        {
        match(input,95,FOLLOW_95_in_synpred172_JavaP6892); if (state.failed) return ;
        pushFollow(FOLLOW_constantExpression_in_synpred172_JavaP6896);
        csexpr=constantExpression();

        state._fsp--;
        if (state.failed) return ;
        match(input,81,FOLLOW_81_in_synpred172_JavaP6898); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred172_JavaP

    // $ANTLR start synpred173_JavaP
    public final void synpred173_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.enumConstantName_return enumname = null;


        // JavaP.g:1306:9: ( 'case' enumname= enumConstantName ':' )
        // JavaP.g:1306:9: 'case' enumname= enumConstantName ':'
        {
        match(input,95,FOLLOW_95_in_synpred173_JavaP6910); if (state.failed) return ;
        pushFollow(FOLLOW_enumConstantName_in_synpred173_JavaP6914);
        enumname=enumConstantName();

        state._fsp--;
        if (state.failed) return ;
        match(input,81,FOLLOW_81_in_synpred173_JavaP6916); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred173_JavaP

    // $ANTLR start synpred174_JavaP
    public final void synpred174_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.enhancedForControl_return enh = null;


        // JavaP.g:1313:9: (enh= enhancedForControl )
        // JavaP.g:1313:9: enh= enhancedForControl
        {
        pushFollow(FOLLOW_enhancedForControl_in_synpred174_JavaP6972);
        enh=enhancedForControl();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred174_JavaP

    // $ANTLR start synpred178_JavaP
    public final void synpred178_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.localVariableDeclaration_return local = null;


        // JavaP.g:1319:9: (local= localVariableDeclaration )
        // JavaP.g:1319:9: local= localVariableDeclaration
        {
        pushFollow(FOLLOW_localVariableDeclaration_in_synpred178_JavaP7032);
        local=localVariableDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred178_JavaP

    // $ANTLR start synpred190_JavaP
    public final void synpred190_JavaP_fragment() throws RecognitionException {   
        // JavaP.g:1389:9: ( '<' '<' '=' )
        // JavaP.g:1389:10: '<' '<' '='
        {
        match(input,46,FOLLOW_46_in_synpred190_JavaP7467); if (state.failed) return ;
        match(input,46,FOLLOW_46_in_synpred190_JavaP7469); if (state.failed) return ;
        match(input,57,FOLLOW_57_in_synpred190_JavaP7471); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred190_JavaP

    // $ANTLR start synpred191_JavaP
    public final void synpred191_JavaP_fragment() throws RecognitionException {   
        // JavaP.g:1394:9: ( '>' '>' '>' '=' )
        // JavaP.g:1394:10: '>' '>' '>' '='
        {
        match(input,48,FOLLOW_48_in_synpred191_JavaP7507); if (state.failed) return ;
        match(input,48,FOLLOW_48_in_synpred191_JavaP7509); if (state.failed) return ;
        match(input,48,FOLLOW_48_in_synpred191_JavaP7511); if (state.failed) return ;
        match(input,57,FOLLOW_57_in_synpred191_JavaP7513); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred191_JavaP

    // $ANTLR start synpred192_JavaP
    public final void synpred192_JavaP_fragment() throws RecognitionException {   
        // JavaP.g:1401:9: ( '>' '>' '=' )
        // JavaP.g:1401:10: '>' '>' '='
        {
        match(input,48,FOLLOW_48_in_synpred192_JavaP7552); if (state.failed) return ;
        match(input,48,FOLLOW_48_in_synpred192_JavaP7554); if (state.failed) return ;
        match(input,57,FOLLOW_57_in_synpred192_JavaP7556); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred192_JavaP

    // $ANTLR start synpred203_JavaP
    public final void synpred203_JavaP_fragment() throws RecognitionException {   
        // JavaP.g:1492:9: ( '<' '=' )
        // JavaP.g:1492:10: '<' '='
        {
        match(input,46,FOLLOW_46_in_synpred203_JavaP8082); if (state.failed) return ;
        match(input,57,FOLLOW_57_in_synpred203_JavaP8084); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred203_JavaP

    // $ANTLR start synpred204_JavaP
    public final void synpred204_JavaP_fragment() throws RecognitionException {   
        // JavaP.g:1495:9: ( '>' '=' )
        // JavaP.g:1495:10: '>' '='
        {
        match(input,48,FOLLOW_48_in_synpred204_JavaP8116); if (state.failed) return ;
        match(input,57,FOLLOW_57_in_synpred204_JavaP8118); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred204_JavaP

    // $ANTLR start synpred207_JavaP
    public final void synpred207_JavaP_fragment() throws RecognitionException {   
        // JavaP.g:1513:9: ( '<' '<' )
        // JavaP.g:1513:10: '<' '<'
        {
        match(input,46,FOLLOW_46_in_synpred207_JavaP8232); if (state.failed) return ;
        match(input,46,FOLLOW_46_in_synpred207_JavaP8234); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred207_JavaP

    // $ANTLR start synpred208_JavaP
    public final void synpred208_JavaP_fragment() throws RecognitionException {   
        // JavaP.g:1516:9: ( '>' '>' '>' )
        // JavaP.g:1516:10: '>' '>' '>'
        {
        match(input,48,FOLLOW_48_in_synpred208_JavaP8266); if (state.failed) return ;
        match(input,48,FOLLOW_48_in_synpred208_JavaP8268); if (state.failed) return ;
        match(input,48,FOLLOW_48_in_synpred208_JavaP8270); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred208_JavaP

    // $ANTLR start synpred209_JavaP
    public final void synpred209_JavaP_fragment() throws RecognitionException {   
        // JavaP.g:1521:9: ( '>' '>' )
        // JavaP.g:1521:10: '>' '>'
        {
        match(input,48,FOLLOW_48_in_synpred209_JavaP8306); if (state.failed) return ;
        match(input,48,FOLLOW_48_in_synpred209_JavaP8308); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred209_JavaP

    // $ANTLR start synpred221_JavaP
    public final void synpred221_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.castExpression_return castex = null;


        // JavaP.g:1579:9: (castex= castExpression )
        // JavaP.g:1579:9: castex= castExpression
        {
        pushFollow(FOLLOW_castExpression_in_synpred221_JavaP8640);
        castex=castExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred221_JavaP

    // $ANTLR start synpred230_JavaP
    public final void synpred230_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.primitiveType_return tref = null;

        AspectJLo_JavaP.unaryExpression_return unex = null;


        // JavaP.g:1648:8: ( '(' tref= primitiveType ')' unex= unaryExpression )
        // JavaP.g:1648:8: '(' tref= primitiveType ')' unex= unaryExpression
        {
        match(input,72,FOLLOW_72_in_synpred230_JavaP8982); if (state.failed) return ;
        pushFollow(FOLLOW_primitiveType_in_synpred230_JavaP8986);
        tref=primitiveType();

        state._fsp--;
        if (state.failed) return ;
        match(input,73,FOLLOW_73_in_synpred230_JavaP8988); if (state.failed) return ;
        pushFollow(FOLLOW_unaryExpression_in_synpred230_JavaP8992);
        unex=unaryExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred230_JavaP

    // $ANTLR start synpred236_JavaP
    public final void synpred236_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.moreidentifierRuleSuffixRubbish_return morerubex = null;


        // JavaP.g:1673:9: (morerubex= moreidentifierRuleSuffixRubbish )
        // JavaP.g:1673:9: morerubex= moreidentifierRuleSuffixRubbish
        {
        pushFollow(FOLLOW_moreidentifierRuleSuffixRubbish_in_synpred236_JavaP9150);
        morerubex=moreidentifierRuleSuffixRubbish();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred236_JavaP

    // $ANTLR start synpred238_JavaP
    public final void synpred238_JavaP_fragment() throws RecognitionException {   
        AspectJLoParser.identifierRule_return idx = null;


        // JavaP.g:1701:5: ( '.' idx= identifierRule )
        // JavaP.g:1701:5: '.' idx= identifierRule
        {
        match(input,35,FOLLOW_35_in_synpred238_JavaP9275); if (state.failed) return ;
        pushFollow(FOLLOW_identifierRule_in_synpred238_JavaP9279);
        idx=gAspectJLo.identifierRule();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred238_JavaP

    // $ANTLR start synpred240_JavaP
    public final void synpred240_JavaP_fragment() throws RecognitionException {   
        // JavaP.g:1712:9: ( ( '[' ']' )+ '.' 'class' )
        // JavaP.g:1712:9: ( '[' ']' )+ '.' 'class'
        {
        // JavaP.g:1712:9: ( '[' ']' )+
        int cnt198=0;
        loop198:
        do {
            int alt198=2;
            int LA198_0 = input.LA(1);

            if ( (LA198_0==54) ) {
                alt198=1;
            }


            switch (alt198) {
        	case 1 :
        	    // JavaP.g:1712:10: '[' ']'
        	    {
        	    match(input,54,FOLLOW_54_in_synpred240_JavaP9311); if (state.failed) return ;
        	    match(input,55,FOLLOW_55_in_synpred240_JavaP9313); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt198 >= 1 ) break loop198;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(198, input);
                    throw eee;
            }
            cnt198++;
        } while (true);

        match(input,35,FOLLOW_35_in_synpred240_JavaP9317); if (state.failed) return ;
        match(input,43,FOLLOW_43_in_synpred240_JavaP9319); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred240_JavaP

    // $ANTLR start synpred241_JavaP
    public final void synpred241_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.arrayAccessSuffixRubbish_return arr = null;


        // JavaP.g:1714:9: (arr= arrayAccessSuffixRubbish )
        // JavaP.g:1714:9: arr= arrayAccessSuffixRubbish
        {
        pushFollow(FOLLOW_arrayAccessSuffixRubbish_in_synpred241_JavaP9340);
        arr=arrayAccessSuffixRubbish();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred241_JavaP

    // $ANTLR start synpred243_JavaP
    public final void synpred243_JavaP_fragment() throws RecognitionException {   
        Token clkw=null;

        // JavaP.g:1716:9: ( '.' clkw= 'class' )
        // JavaP.g:1716:9: '.' clkw= 'class'
        {
        match(input,35,FOLLOW_35_in_synpred243_JavaP9367); if (state.failed) return ;
        clkw=(Token)match(input,43,FOLLOW_43_in_synpred243_JavaP9371); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred243_JavaP

    // $ANTLR start synpred244_JavaP
    public final void synpred244_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.explicitGenericInvocation_return gen = null;


        // JavaP.g:1721:9: ( '.' gen= explicitGenericInvocation )
        // JavaP.g:1721:9: '.' gen= explicitGenericInvocation
        {
        match(input,35,FOLLOW_35_in_synpred244_JavaP9393); if (state.failed) return ;
        pushFollow(FOLLOW_explicitGenericInvocation_in_synpred244_JavaP9397);
        gen=explicitGenericInvocation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred244_JavaP

    // $ANTLR start synpred245_JavaP
    public final void synpred245_JavaP_fragment() throws RecognitionException {   
        Token thiskw=null;

        // JavaP.g:1722:9: ( '.' thiskw= 'this' )
        // JavaP.g:1722:9: '.' thiskw= 'this'
        {
        match(input,35,FOLLOW_35_in_synpred245_JavaP9410); if (state.failed) return ;
        thiskw=(Token)match(input,75,FOLLOW_75_in_synpred245_JavaP9414); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred245_JavaP

    // $ANTLR start synpred246_JavaP
    public final void synpred246_JavaP_fragment() throws RecognitionException {   
        Token supkw=null;
        AspectJLo_JavaP.superSuffix_return supsuf = null;


        // JavaP.g:1727:9: ( '.' supkw= 'super' supsuf= superSuffix )
        // JavaP.g:1727:9: '.' supkw= 'super' supsuf= superSuffix
        {
        match(input,35,FOLLOW_35_in_synpred246_JavaP9435); if (state.failed) return ;
        supkw=(Token)match(input,71,FOLLOW_71_in_synpred246_JavaP9439); if (state.failed) return ;
        pushFollow(FOLLOW_superSuffix_in_synpred246_JavaP9457);
        supsuf=superSuffix();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred246_JavaP

    // $ANTLR start synpred247_JavaP
    public final void synpred247_JavaP_fragment() throws RecognitionException {   
        Token newkw=null;
        AspectJLo_JavaP.innerCreator_return in = null;


        // JavaP.g:1736:9: ( '.' newkw= 'new' in= innerCreator )
        // JavaP.g:1736:9: '.' newkw= 'new' in= innerCreator
        {
        match(input,35,FOLLOW_35_in_synpred247_JavaP9469); if (state.failed) return ;
        newkw=(Token)match(input,119,FOLLOW_119_in_synpred247_JavaP9473); if (state.failed) return ;
        pushFollow(FOLLOW_innerCreator_in_synpred247_JavaP9477);
        in=innerCreator();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred247_JavaP

    // $ANTLR start synpred248_JavaP
    public final void synpred248_JavaP_fragment() throws RecognitionException {   
        AspectJLoParser.identifierRule_return id = null;


        // JavaP.g:1741:55: ( '.' id= identifierRule )
        // JavaP.g:1741:55: '.' id= identifierRule
        {
        match(input,35,FOLLOW_35_in_synpred248_JavaP9505); if (state.failed) return ;
        pushFollow(FOLLOW_identifierRule_in_synpred248_JavaP9509);
        id=gAspectJLo.identifierRule();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred248_JavaP

    // $ANTLR start synpred249_JavaP
    public final void synpred249_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.arrayAccessSuffixRubbish_return arr = null;


        // JavaP.g:1748:9: (arr= arrayAccessSuffixRubbish )
        // JavaP.g:1748:9: arr= arrayAccessSuffixRubbish
        {
        pushFollow(FOLLOW_arrayAccessSuffixRubbish_in_synpred249_JavaP9534);
        arr=arrayAccessSuffixRubbish();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred249_JavaP

    // $ANTLR start synpred251_JavaP
    public final void synpred251_JavaP_fragment() throws RecognitionException {   
        // JavaP.g:1750:9: ( '.' 'class' )
        // JavaP.g:1750:9: '.' 'class'
        {
        match(input,35,FOLLOW_35_in_synpred251_JavaP9560); if (state.failed) return ;
        match(input,43,FOLLOW_43_in_synpred251_JavaP9562); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred251_JavaP

    // $ANTLR start synpred252_JavaP
    public final void synpred252_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.explicitGenericInvocation_return gen = null;


        // JavaP.g:1751:9: ( '.' gen= explicitGenericInvocation )
        // JavaP.g:1751:9: '.' gen= explicitGenericInvocation
        {
        match(input,35,FOLLOW_35_in_synpred252_JavaP9574); if (state.failed) return ;
        pushFollow(FOLLOW_explicitGenericInvocation_in_synpred252_JavaP9578);
        gen=explicitGenericInvocation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred252_JavaP

    // $ANTLR start synpred253_JavaP
    public final void synpred253_JavaP_fragment() throws RecognitionException {   
        Token supkw=null;
        AspectJLo_JavaP.superSuffix_return supsuf = null;


        // JavaP.g:1752:9: ( '.' supkw= 'super' supsuf= superSuffix )
        // JavaP.g:1752:9: '.' supkw= 'super' supsuf= superSuffix
        {
        match(input,35,FOLLOW_35_in_synpred253_JavaP9590); if (state.failed) return ;
        supkw=(Token)match(input,71,FOLLOW_71_in_synpred253_JavaP9594); if (state.failed) return ;
        pushFollow(FOLLOW_superSuffix_in_synpred253_JavaP9598);
        supsuf=superSuffix();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred253_JavaP

    // $ANTLR start synpred254_JavaP
    public final void synpred254_JavaP_fragment() throws RecognitionException {   
        Token newkw=null;
        AspectJLo_JavaP.innerCreator_return in = null;


        // JavaP.g:1759:9: ( '.' newkw= 'new' in= innerCreator )
        // JavaP.g:1759:9: '.' newkw= 'new' in= innerCreator
        {
        match(input,35,FOLLOW_35_in_synpred254_JavaP9610); if (state.failed) return ;
        newkw=(Token)match(input,119,FOLLOW_119_in_synpred254_JavaP9614); if (state.failed) return ;
        pushFollow(FOLLOW_innerCreator_in_synpred254_JavaP9618);
        in=innerCreator();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred254_JavaP

    // $ANTLR start synpred255_JavaP
    public final void synpred255_JavaP_fragment() throws RecognitionException {   
        Token open=null;
        Token close=null;
        AspectJLoParser.expression_return arrex = null;


        // JavaP.g:1779:11: (open= '[' arrex= expression close= ']' )
        // JavaP.g:1779:11: open= '[' arrex= expression close= ']'
        {
        open=(Token)match(input,54,FOLLOW_54_in_synpred255_JavaP9692); if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred255_JavaP9696);
        arrex=gAspectJLo.expression();

        state._fsp--;
        if (state.failed) return ;
        close=(Token)match(input,55,FOLLOW_55_in_synpred255_JavaP9700); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred255_JavaP

    // $ANTLR start synpred258_JavaP
    public final void synpred258_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.createdName_return tt = null;

        AspectJLo_JavaP.arrayInitializer_return init = null;


        // JavaP.g:1798:10: (tt= createdName ( '[' ']' )+ init= arrayInitializer )
        // JavaP.g:1798:10: tt= createdName ( '[' ']' )+ init= arrayInitializer
        {
        pushFollow(FOLLOW_createdName_in_synpred258_JavaP9789);
        tt=createdName();

        state._fsp--;
        if (state.failed) return ;
        // JavaP.g:1799:14: ( '[' ']' )+
        int cnt199=0;
        loop199:
        do {
            int alt199=2;
            int LA199_0 = input.LA(1);

            if ( (LA199_0==54) ) {
                alt199=1;
            }


            switch (alt199) {
        	case 1 :
        	    // JavaP.g:1799:15: '[' ']'
        	    {
        	    match(input,54,FOLLOW_54_in_synpred258_JavaP9808); if (state.failed) return ;
        	    match(input,55,FOLLOW_55_in_synpred258_JavaP9810); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt199 >= 1 ) break loop199;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(199, input);
                    throw eee;
            }
            cnt199++;
        } while (true);

        pushFollow(FOLLOW_arrayInitializer_in_synpred258_JavaP9818);
        init=arrayInitializer();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred258_JavaP

    // $ANTLR start synpred259_JavaP
    public final void synpred259_JavaP_fragment() throws RecognitionException {   
        AspectJLoParser.expression_return exx = null;


        // JavaP.g:1802:12: ( '[' exx= expression ']' )
        // JavaP.g:1802:12: '[' exx= expression ']'
        {
        match(input,54,FOLLOW_54_in_synpred259_JavaP9859); if (state.failed) return ;
        pushFollow(FOLLOW_expression_in_synpred259_JavaP9863);
        exx=gAspectJLo.expression();

        state._fsp--;
        if (state.failed) return ;
        match(input,55,FOLLOW_55_in_synpred259_JavaP9865); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred259_JavaP

    // $ANTLR start synpred261_JavaP
    public final void synpred261_JavaP_fragment() throws RecognitionException {   
        AspectJLo_JavaP.createdName_return ttt = null;

        AspectJLoParser.expression_return exx = null;


        // JavaP.g:1801:10: (ttt= createdName ( '[' exx= expression ']' )+ ( '[' ']' )* )
        // JavaP.g:1801:10: ttt= createdName ( '[' exx= expression ']' )+ ( '[' ']' )*
        {
        pushFollow(FOLLOW_createdName_in_synpred261_JavaP9842);
        ttt=createdName();

        state._fsp--;
        if (state.failed) return ;
        // JavaP.g:1802:11: ( '[' exx= expression ']' )+
        int cnt200=0;
        loop200:
        do {
            int alt200=2;
            int LA200_0 = input.LA(1);

            if ( (LA200_0==54) ) {
                int LA200_1 = input.LA(2);

                if ( (LA200_1==Identifier||(LA200_1>=FloatingPointLiteral && LA200_1<=DecimalLiteral)||(LA200_1>=Export && LA200_1<=Overrides)||LA200_1==53||(LA200_1>=62 && LA200_1<=69)||(LA200_1>=71 && LA200_1<=72)||(LA200_1>=75 && LA200_1<=78)||(LA200_1>=111 && LA200_1<=112)||(LA200_1>=115 && LA200_1<=120)||(LA200_1>=122 && LA200_1<=125)) ) {
                    alt200=1;
                }


            }


            switch (alt200) {
        	case 1 :
        	    // JavaP.g:1802:12: '[' exx= expression ']'
        	    {
        	    match(input,54,FOLLOW_54_in_synpred261_JavaP9859); if (state.failed) return ;
        	    pushFollow(FOLLOW_expression_in_synpred261_JavaP9863);
        	    exx=gAspectJLo.expression();

        	    state._fsp--;
        	    if (state.failed) return ;
        	    match(input,55,FOLLOW_55_in_synpred261_JavaP9865); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt200 >= 1 ) break loop200;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(200, input);
                    throw eee;
            }
            cnt200++;
        } while (true);

        // JavaP.g:1803:13: ( '[' ']' )*
        loop201:
        do {
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==54) ) {
                alt201=1;
            }


            switch (alt201) {
        	case 1 :
        	    // JavaP.g:1803:14: '[' ']'
        	    {
        	    match(input,54,FOLLOW_54_in_synpred261_JavaP9885); if (state.failed) return ;
        	    match(input,55,FOLLOW_55_in_synpred261_JavaP9887); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop201;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred261_JavaP

    // Delegated rules

    public final boolean synpred230_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred230_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred190_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred190_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred249_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred249_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred245_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred245_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred172_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred172_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred255_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred255_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred247_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred247_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred155_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred155_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred174_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred174_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred207_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred207_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred156_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred156_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred191_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred191_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred246_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred246_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred203_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred203_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred106_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred106_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred252_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred252_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred178_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred178_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred251_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred251_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred254_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred254_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred238_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred238_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred145_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred145_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred243_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred243_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred248_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred248_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred204_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred204_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred236_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred150_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred150_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred258_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred258_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred244_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred244_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred173_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred173_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred259_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred259_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred208_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred208_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred209_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred209_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred261_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred261_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred241_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred241_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred240_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred240_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred253_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred253_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred192_JavaP() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred192_JavaP_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA41 dfa41 = new DFA41(this);
    protected DFA46 dfa46 = new DFA46(this);
    protected DFA82 dfa82 = new DFA82(this);
    protected DFA83 dfa83 = new DFA83(this);
    protected DFA88 dfa88 = new DFA88(this);
    protected DFA93 dfa93 = new DFA93(this);
    protected DFA94 dfa94 = new DFA94(this);
    protected DFA111 dfa111 = new DFA111(this);
    protected DFA119 dfa119 = new DFA119(this);
    protected DFA123 dfa123 = new DFA123(this);
    protected DFA127 dfa127 = new DFA127(this);
    protected DFA128 dfa128 = new DFA128(this);
    protected DFA131 dfa131 = new DFA131(this);
    protected DFA144 dfa144 = new DFA144(this);
    protected DFA152 dfa152 = new DFA152(this);
    protected DFA156 dfa156 = new DFA156(this);
    protected DFA157 dfa157 = new DFA157(this);
    protected DFA159 dfa159 = new DFA159(this);
    protected DFA160 dfa160 = new DFA160(this);
    protected DFA161 dfa161 = new DFA161(this);
    protected DFA162 dfa162 = new DFA162(this);
    protected DFA166 dfa166 = new DFA166(this);
    protected DFA164 dfa164 = new DFA164(this);
    static final String DFA41_eotS =
        "\21\uffff";
    static final String DFA41_eofS =
        "\21\uffff";
    static final String DFA41_minS =
        "\1\4\16\0\2\uffff";
    static final String DFA41_maxS =
        "\1\105\16\0\2\uffff";
    static final String DFA41_acceptS =
        "\17\uffff\1\1\1\2";
    static final String DFA41_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
        "\14\1\15\2\uffff}>";
    static final String[] DFA41_transitionS = {
            "\1\1\17\uffff\1\2\1\3\1\4\1\5\1\6\45\uffff\1\7\1\10\1\11\1"+
            "\12\1\13\1\14\1\15\1\16",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA41_eot = DFA.unpackEncodedString(DFA41_eotS);
    static final short[] DFA41_eof = DFA.unpackEncodedString(DFA41_eofS);
    static final char[] DFA41_min = DFA.unpackEncodedStringToUnsignedChars(DFA41_minS);
    static final char[] DFA41_max = DFA.unpackEncodedStringToUnsignedChars(DFA41_maxS);
    static final short[] DFA41_accept = DFA.unpackEncodedString(DFA41_acceptS);
    static final short[] DFA41_special = DFA.unpackEncodedString(DFA41_specialS);
    static final short[][] DFA41_transition;

    static {
        int numStates = DFA41_transitionS.length;
        DFA41_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA41_transition[i] = DFA.unpackEncodedString(DFA41_transitionS[i]);
        }
    }

    class DFA41 extends DFA {

        public DFA41(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 41;
            this.eot = DFA41_eot;
            this.eof = DFA41_eof;
            this.min = DFA41_min;
            this.max = DFA41_max;
            this.accept = DFA41_accept;
            this.special = DFA41_special;
            this.transition = DFA41_transition;
        }
        public String getDescription() {
            return "692:1: memberDeclaration returns [TypeElement element] : (method= methodDeclaration | field= fieldDeclaration );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA41_1 = input.LA(1);

                         
                        int index41_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index41_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA41_2 = input.LA(1);

                         
                        int index41_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index41_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA41_3 = input.LA(1);

                         
                        int index41_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index41_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA41_4 = input.LA(1);

                         
                        int index41_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index41_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA41_5 = input.LA(1);

                         
                        int index41_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index41_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA41_6 = input.LA(1);

                         
                        int index41_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index41_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA41_7 = input.LA(1);

                         
                        int index41_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index41_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA41_8 = input.LA(1);

                         
                        int index41_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index41_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA41_9 = input.LA(1);

                         
                        int index41_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index41_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA41_10 = input.LA(1);

                         
                        int index41_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index41_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA41_11 = input.LA(1);

                         
                        int index41_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index41_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA41_12 = input.LA(1);

                         
                        int index41_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index41_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA41_13 = input.LA(1);

                         
                        int index41_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index41_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA41_14 = input.LA(1);

                         
                        int index41_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred52_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index41_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 41, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA46_eotS =
        "\21\uffff";
    static final String DFA46_eofS =
        "\21\uffff";
    static final String DFA46_minS =
        "\1\4\16\0\2\uffff";
    static final String DFA46_maxS =
        "\1\105\16\0\2\uffff";
    static final String DFA46_acceptS =
        "\17\uffff\1\1\1\2";
    static final String DFA46_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
        "\14\1\15\2\uffff}>";
    static final String[] DFA46_transitionS = {
            "\1\1\17\uffff\1\2\1\3\1\4\1\5\1\6\45\uffff\1\7\1\10\1\11\1"+
            "\12\1\13\1\14\1\15\1\16",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA46_eot = DFA.unpackEncodedString(DFA46_eotS);
    static final short[] DFA46_eof = DFA.unpackEncodedString(DFA46_eofS);
    static final char[] DFA46_min = DFA.unpackEncodedStringToUnsignedChars(DFA46_minS);
    static final char[] DFA46_max = DFA.unpackEncodedStringToUnsignedChars(DFA46_maxS);
    static final short[] DFA46_accept = DFA.unpackEncodedString(DFA46_acceptS);
    static final short[] DFA46_special = DFA.unpackEncodedString(DFA46_specialS);
    static final short[][] DFA46_transition;

    static {
        int numStates = DFA46_transitionS.length;
        DFA46_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA46_transition[i] = DFA.unpackEncodedString(DFA46_transitionS[i]);
        }
    }

    class DFA46 extends DFA {

        public DFA46(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 46;
            this.eot = DFA46_eot;
            this.eof = DFA46_eof;
            this.min = DFA46_min;
            this.max = DFA46_max;
            this.accept = DFA46_accept;
            this.special = DFA46_special;
            this.transition = DFA46_transition;
        }
        public String getDescription() {
            return "752:1: interfaceMethodOrFieldDecl returns [TypeElement element] : (cst= interfaceConstant | m= interfaceMethod );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA46_1 = input.LA(1);

                         
                        int index46_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index46_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA46_2 = input.LA(1);

                         
                        int index46_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index46_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA46_3 = input.LA(1);

                         
                        int index46_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index46_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA46_4 = input.LA(1);

                         
                        int index46_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index46_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA46_5 = input.LA(1);

                         
                        int index46_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index46_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA46_6 = input.LA(1);

                         
                        int index46_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index46_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA46_7 = input.LA(1);

                         
                        int index46_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index46_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA46_8 = input.LA(1);

                         
                        int index46_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index46_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA46_9 = input.LA(1);

                         
                        int index46_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index46_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA46_10 = input.LA(1);

                         
                        int index46_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index46_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA46_11 = input.LA(1);

                         
                        int index46_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index46_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA46_12 = input.LA(1);

                         
                        int index46_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index46_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA46_13 = input.LA(1);

                         
                        int index46_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index46_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA46_14 = input.LA(1);

                         
                        int index46_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred60_JavaP()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index46_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 46, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA82_eotS =
        "\23\uffff";
    static final String DFA82_eofS =
        "\23\uffff";
    static final String DFA82_minS =
        "\1\4\20\0\2\uffff";
    static final String DFA82_maxS =
        "\1\117\20\0\2\uffff";
    static final String DFA82_acceptS =
        "\21\uffff\1\1\1\2";
    static final String DFA82_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
        "\14\1\15\1\16\1\17\2\uffff}>";
    static final String[] DFA82_transitionS = {
            "\1\3\17\uffff\1\4\1\5\1\6\1\7\1\10\20\uffff\1\1\24\uffff\1"+
            "\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\11\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA82_eot = DFA.unpackEncodedString(DFA82_eotS);
    static final short[] DFA82_eof = DFA.unpackEncodedString(DFA82_eofS);
    static final char[] DFA82_min = DFA.unpackEncodedStringToUnsignedChars(DFA82_minS);
    static final char[] DFA82_max = DFA.unpackEncodedStringToUnsignedChars(DFA82_maxS);
    static final short[] DFA82_accept = DFA.unpackEncodedString(DFA82_acceptS);
    static final short[] DFA82_special = DFA.unpackEncodedString(DFA82_specialS);
    static final short[][] DFA82_transition;

    static {
        int numStates = DFA82_transitionS.length;
        DFA82_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA82_transition[i] = DFA.unpackEncodedString(DFA82_transitionS[i]);
        }
    }

    class DFA82 extends DFA {

        public DFA82(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 82;
            this.eot = DFA82_eot;
            this.eof = DFA82_eof;
            this.min = DFA82_min;
            this.max = DFA82_max;
            this.accept = DFA82_accept;
            this.special = DFA82_special;
            this.transition = DFA82_transition;
        }
        public String getDescription() {
            return "1009:1: formalParameterDecls returns [List<FormalParameter> element] : (mods= variableModifiers t= type id= variableDeclaratorId ( ',' decls= formalParameterDecls )? | modss= variableModifiers tt= type '...' idd= variableDeclaratorId );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA82_1 = input.LA(1);

                         
                        int index82_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index82_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA82_2 = input.LA(1);

                         
                        int index82_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index82_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA82_3 = input.LA(1);

                         
                        int index82_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index82_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA82_4 = input.LA(1);

                         
                        int index82_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index82_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA82_5 = input.LA(1);

                         
                        int index82_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index82_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA82_6 = input.LA(1);

                         
                        int index82_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index82_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA82_7 = input.LA(1);

                         
                        int index82_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index82_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA82_8 = input.LA(1);

                         
                        int index82_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index82_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA82_9 = input.LA(1);

                         
                        int index82_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index82_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA82_10 = input.LA(1);

                         
                        int index82_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index82_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA82_11 = input.LA(1);

                         
                        int index82_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index82_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA82_12 = input.LA(1);

                         
                        int index82_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index82_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA82_13 = input.LA(1);

                         
                        int index82_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index82_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA82_14 = input.LA(1);

                         
                        int index82_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index82_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA82_15 = input.LA(1);

                         
                        int index82_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index82_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA82_16 = input.LA(1);

                         
                        int index82_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index82_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 82, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA83_eotS =
        "\103\uffff";
    static final String DFA83_eofS =
        "\103\uffff";
    static final String DFA83_minS =
        "\1\4\1\uffff\37\0\42\uffff";
    static final String DFA83_maxS =
        "\1\175\1\uffff\37\0\42\uffff";
    static final String DFA83_acceptS =
        "\1\uffff\1\1\37\uffff\1\2\41\uffff";
    static final String DFA83_specialS =
        "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
        "\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
        "\1\31\1\32\1\33\1\34\1\35\1\36\42\uffff}>";
    static final String[] DFA83_transitionS = {
            "\1\22\1\41\1\10\1\11\1\12\1\5\1\6\1\7\1\41\7\uffff\1\23\1\24"+
            "\1\25\1\26\1\27\7\uffff\1\41\1\uffff\1\41\2\uffff\7\41\2\uffff"+
            "\1\1\3\uffff\3\41\1\30\5\uffff\1\41\2\uffff\1\31\1\32\1\33\1"+
            "\34\1\35\1\36\1\37\1\40\1\uffff\1\4\1\3\2\uffff\1\2\1\15\1\13"+
            "\1\14\1\41\2\uffff\1\41\1\uffff\4\41\1\uffff\5\41\21\uffff\2"+
            "\41\2\uffff\4\41\1\21\1\41\1\uffff\1\41\1\16\1\17\1\20",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA83_eot = DFA.unpackEncodedString(DFA83_eotS);
    static final short[] DFA83_eof = DFA.unpackEncodedString(DFA83_eofS);
    static final char[] DFA83_min = DFA.unpackEncodedStringToUnsignedChars(DFA83_minS);
    static final char[] DFA83_max = DFA.unpackEncodedStringToUnsignedChars(DFA83_maxS);
    static final short[] DFA83_accept = DFA.unpackEncodedString(DFA83_acceptS);
    static final short[] DFA83_special = DFA.unpackEncodedString(DFA83_specialS);
    static final short[][] DFA83_transition;

    static {
        int numStates = DFA83_transitionS.length;
        DFA83_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA83_transition[i] = DFA.unpackEncodedString(DFA83_transitionS[i]);
        }
    }

    class DFA83 extends DFA {

        public DFA83(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 83;
            this.eot = DFA83_eot;
            this.eof = DFA83_eof;
            this.min = DFA83_min;
            this.max = DFA83_max;
            this.accept = DFA83_accept;
            this.special = DFA83_special;
            this.transition = DFA83_transition;
        }
        public String getDescription() {
            return "1035:10: (inv= explicitConstructorInvocation )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA83_2 = input.LA(1);

                         
                        int index83_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA83_3 = input.LA(1);

                         
                        int index83_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA83_4 = input.LA(1);

                         
                        int index83_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA83_5 = input.LA(1);

                         
                        int index83_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA83_6 = input.LA(1);

                         
                        int index83_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA83_7 = input.LA(1);

                         
                        int index83_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA83_8 = input.LA(1);

                         
                        int index83_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA83_9 = input.LA(1);

                         
                        int index83_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA83_10 = input.LA(1);

                         
                        int index83_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA83_11 = input.LA(1);

                         
                        int index83_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA83_12 = input.LA(1);

                         
                        int index83_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA83_13 = input.LA(1);

                         
                        int index83_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA83_14 = input.LA(1);

                         
                        int index83_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA83_15 = input.LA(1);

                         
                        int index83_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA83_16 = input.LA(1);

                         
                        int index83_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA83_17 = input.LA(1);

                         
                        int index83_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA83_18 = input.LA(1);

                         
                        int index83_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA83_19 = input.LA(1);

                         
                        int index83_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA83_20 = input.LA(1);

                         
                        int index83_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA83_21 = input.LA(1);

                         
                        int index83_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA83_22 = input.LA(1);

                         
                        int index83_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA83_23 = input.LA(1);

                         
                        int index83_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA83_24 = input.LA(1);

                         
                        int index83_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA83_25 = input.LA(1);

                         
                        int index83_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA83_26 = input.LA(1);

                         
                        int index83_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA83_27 = input.LA(1);

                         
                        int index83_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA83_28 = input.LA(1);

                         
                        int index83_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA83_29 = input.LA(1);

                         
                        int index83_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA83_30 = input.LA(1);

                         
                        int index83_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA83_31 = input.LA(1);

                         
                        int index83_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA83_32 = input.LA(1);

                         
                        int index83_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred106_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index83_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 83, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA88_eotS =
        "\42\uffff";
    static final String DFA88_eofS =
        "\42\uffff";
    static final String DFA88_minS =
        "\1\4\2\0\37\uffff";
    static final String DFA88_maxS =
        "\1\175\2\0\37\uffff";
    static final String DFA88_acceptS =
        "\3\uffff\1\2\35\uffff\1\1";
    static final String DFA88_specialS =
        "\1\uffff\1\0\1\1\37\uffff}>";
    static final String[] DFA88_transitionS = {
            "\1\3\1\uffff\6\3\10\uffff\5\3\25\uffff\1\1\6\uffff\1\3\10\uffff"+
            "\10\3\1\uffff\2\3\2\uffff\1\2\3\3\50\uffff\1\3\3\uffff\3\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA88_eot = DFA.unpackEncodedString(DFA88_eotS);
    static final short[] DFA88_eof = DFA.unpackEncodedString(DFA88_eofS);
    static final char[] DFA88_min = DFA.unpackEncodedStringToUnsignedChars(DFA88_minS);
    static final char[] DFA88_max = DFA.unpackEncodedStringToUnsignedChars(DFA88_maxS);
    static final short[] DFA88_accept = DFA.unpackEncodedString(DFA88_acceptS);
    static final short[] DFA88_special = DFA.unpackEncodedString(DFA88_specialS);
    static final short[][] DFA88_transition;

    static {
        int numStates = DFA88_transitionS.length;
        DFA88_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA88_transition[i] = DFA.unpackEncodedString(DFA88_transitionS[i]);
        }
    }

    class DFA88 extends DFA {

        public DFA88(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 88;
            this.eot = DFA88_eot;
            this.eof = DFA88_eof;
            this.min = DFA88_min;
            this.max = DFA88_max;
            this.accept = DFA88_accept;
            this.special = DFA88_special;
            this.transition = DFA88_transition;
        }
        public String getDescription() {
            return "1039:1: explicitConstructorInvocation returns [MethodInvocation element] : ( ( nonWildcardTypeArguments )? 'this' args= arguments ';' | (prim= primary '.' )? ( nonWildcardTypeArguments )? 'super' argsx= arguments ';' );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA88_1 = input.LA(1);

                         
                        int index88_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_JavaP()) ) {s = 33;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index88_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA88_2 = input.LA(1);

                         
                        int index88_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_JavaP()) ) {s = 33;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index88_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 88, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA93_eotS =
        "\12\uffff";
    static final String DFA93_eofS =
        "\1\1\11\uffff";
    static final String DFA93_minS =
        "\1\4\1\uffff\1\4\6\0\1\uffff";
    static final String DFA93_maxS =
        "\1\117\1\uffff\1\64\6\0\1\uffff";
    static final String DFA93_acceptS =
        "\1\uffff\1\2\7\uffff\1\1";
    static final String DFA93_specialS =
        "\3\uffff\1\1\1\5\1\2\1\3\1\0\1\4\1\uffff}>";
    static final String[] DFA93_transitionS = {
            "\2\1\16\uffff\5\1\6\uffff\1\1\2\uffff\1\1\2\uffff\7\1\10\uffff"+
            "\1\1\32\uffff\1\2",
            "",
            "\1\3\17\uffff\1\4\1\5\1\6\1\7\1\10\33\uffff\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA93_eot = DFA.unpackEncodedString(DFA93_eotS);
    static final short[] DFA93_eof = DFA.unpackEncodedString(DFA93_eofS);
    static final char[] DFA93_min = DFA.unpackEncodedStringToUnsignedChars(DFA93_minS);
    static final char[] DFA93_max = DFA.unpackEncodedStringToUnsignedChars(DFA93_maxS);
    static final short[] DFA93_accept = DFA.unpackEncodedString(DFA93_acceptS);
    static final short[] DFA93_special = DFA.unpackEncodedString(DFA93_specialS);
    static final short[][] DFA93_transition;

    static {
        int numStates = DFA93_transitionS.length;
        DFA93_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA93_transition[i] = DFA.unpackEncodedString(DFA93_transitionS[i]);
        }
    }

    class DFA93 extends DFA {

        public DFA93(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 93;
            this.eot = DFA93_eot;
            this.eof = DFA93_eof;
            this.min = DFA93_min;
            this.max = DFA93_max;
            this.accept = DFA93_accept;
            this.special = DFA93_special;
            this.transition = DFA93_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1090:9: (a= annotation )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA93_7 = input.LA(1);

                         
                        int index93_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index93_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA93_3 = input.LA(1);

                         
                        int index93_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index93_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA93_5 = input.LA(1);

                         
                        int index93_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index93_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA93_6 = input.LA(1);

                         
                        int index93_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index93_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA93_8 = input.LA(1);

                         
                        int index93_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index93_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA93_4 = input.LA(1);

                         
                        int index93_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index93_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 93, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA94_eotS =
        "\12\uffff";
    static final String DFA94_eofS =
        "\12\uffff";
    static final String DFA94_minS =
        "\1\4\6\43\3\uffff";
    static final String DFA94_maxS =
        "\1\175\6\164\3\uffff";
    static final String DFA94_acceptS =
        "\7\uffff\1\2\1\3\1\1";
    static final String DFA94_specialS =
        "\12\uffff}>";
    static final String[] DFA94_transitionS = {
            "\1\1\1\uffff\6\7\10\uffff\1\2\1\3\1\4\1\5\1\6\31\uffff\1\7"+
            "\2\uffff\1\7\10\uffff\10\7\1\uffff\2\7\1\10\1\uffff\5\7\37\uffff"+
            "\2\7\2\uffff\5\7\3\uffff\3\7",
            "\2\7\11\uffff\1\7\1\uffff\2\7\4\uffff\1\7\2\uffff\1\11\14"+
            "\uffff\1\7\1\uffff\2\7\36\uffff\15\7",
            "\2\7\11\uffff\1\7\1\uffff\2\7\4\uffff\1\7\2\uffff\1\11\14"+
            "\uffff\1\7\1\uffff\2\7\36\uffff\15\7",
            "\2\7\11\uffff\1\7\1\uffff\2\7\4\uffff\1\7\2\uffff\1\11\14"+
            "\uffff\1\7\1\uffff\2\7\36\uffff\15\7",
            "\2\7\11\uffff\1\7\1\uffff\2\7\4\uffff\1\7\2\uffff\1\11\14"+
            "\uffff\1\7\1\uffff\2\7\36\uffff\15\7",
            "\2\7\11\uffff\1\7\1\uffff\2\7\4\uffff\1\7\2\uffff\1\11\14"+
            "\uffff\1\7\1\uffff\2\7\36\uffff\15\7",
            "\2\7\11\uffff\1\7\1\uffff\2\7\4\uffff\1\7\2\uffff\1\11\14"+
            "\uffff\1\7\1\uffff\2\7\36\uffff\15\7",
            "",
            "",
            ""
    };

    static final short[] DFA94_eot = DFA.unpackEncodedString(DFA94_eotS);
    static final short[] DFA94_eof = DFA.unpackEncodedString(DFA94_eofS);
    static final char[] DFA94_min = DFA.unpackEncodedStringToUnsignedChars(DFA94_minS);
    static final char[] DFA94_max = DFA.unpackEncodedStringToUnsignedChars(DFA94_maxS);
    static final short[] DFA94_accept = DFA.unpackEncodedString(DFA94_acceptS);
    static final short[] DFA94_special = DFA.unpackEncodedString(DFA94_specialS);
    static final short[][] DFA94_transition;

    static {
        int numStates = DFA94_transitionS.length;
        DFA94_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA94_transition[i] = DFA.unpackEncodedString(DFA94_transitionS[i]);
        }
    }

    class DFA94 extends DFA {

        public DFA94(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 94;
            this.eot = DFA94_eot;
            this.eof = DFA94_eof;
            this.min = DFA94_min;
            this.max = DFA94_max;
            this.accept = DFA94_accept;
            this.special = DFA94_special;
            this.transition = DFA94_transition;
        }
        public String getDescription() {
            return "1094:86: ( elementValuePairs | elementValue )?";
        }
    }
    static final String DFA111_eotS =
        "\102\uffff";
    static final String DFA111_eofS =
        "\102\uffff";
    static final String DFA111_minS =
        "\1\4\20\0\61\uffff";
    static final String DFA111_maxS =
        "\1\175\20\0\61\uffff";
    static final String DFA111_acceptS =
        "\21\uffff\1\2\10\uffff\1\3\46\uffff\1\1";
    static final String DFA111_specialS =
        "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
        "\14\1\15\1\16\1\17\61\uffff}>";
    static final String[] DFA111_transitionS = {
            "\1\3\1\21\7\32\7\uffff\1\4\1\5\1\6\1\7\1\10\7\uffff\1\32\1"+
            "\uffff\1\21\2\uffff\4\21\1\1\2\21\6\uffff\1\32\1\uffff\1\21"+
            "\1\32\5\uffff\1\32\2\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17"+
            "\1\20\1\uffff\2\32\2\uffff\4\32\1\2\2\uffff\1\32\1\uffff\4\32"+
            "\1\uffff\5\32\21\uffff\2\32\2\uffff\6\32\1\uffff\4\32",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA111_eot = DFA.unpackEncodedString(DFA111_eotS);
    static final short[] DFA111_eof = DFA.unpackEncodedString(DFA111_eofS);
    static final char[] DFA111_min = DFA.unpackEncodedStringToUnsignedChars(DFA111_minS);
    static final char[] DFA111_max = DFA.unpackEncodedStringToUnsignedChars(DFA111_maxS);
    static final short[] DFA111_accept = DFA.unpackEncodedString(DFA111_acceptS);
    static final short[] DFA111_special = DFA.unpackEncodedString(DFA111_specialS);
    static final short[][] DFA111_transition;

    static {
        int numStates = DFA111_transitionS.length;
        DFA111_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA111_transition[i] = DFA.unpackEncodedString(DFA111_transitionS[i]);
        }
    }

    class DFA111 extends DFA {

        public DFA111(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 111;
            this.eot = DFA111_eot;
            this.eof = DFA111_eof;
            this.min = DFA111_min;
            this.max = DFA111_max;
            this.accept = DFA111_accept;
            this.special = DFA111_special;
            this.transition = DFA111_transition;
        }
        public String getDescription() {
            return "1185:1: blockStatement returns [Statement element] : (local= localVariableDeclarationStatement | cd= classOrInterfaceDeclaration | stat= statement );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA111_1 = input.LA(1);

                         
                        int index111_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_JavaP()) ) {s = 65;}

                        else if ( (synpred145_JavaP()) ) {s = 17;}

                         
                        input.seek(index111_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA111_2 = input.LA(1);

                         
                        int index111_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_JavaP()) ) {s = 65;}

                        else if ( (synpred145_JavaP()) ) {s = 17;}

                         
                        input.seek(index111_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA111_3 = input.LA(1);

                         
                        int index111_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_JavaP()) ) {s = 65;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index111_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA111_4 = input.LA(1);

                         
                        int index111_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_JavaP()) ) {s = 65;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index111_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA111_5 = input.LA(1);

                         
                        int index111_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_JavaP()) ) {s = 65;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index111_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA111_6 = input.LA(1);

                         
                        int index111_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_JavaP()) ) {s = 65;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index111_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA111_7 = input.LA(1);

                         
                        int index111_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_JavaP()) ) {s = 65;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index111_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA111_8 = input.LA(1);

                         
                        int index111_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_JavaP()) ) {s = 65;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index111_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA111_9 = input.LA(1);

                         
                        int index111_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_JavaP()) ) {s = 65;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index111_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA111_10 = input.LA(1);

                         
                        int index111_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_JavaP()) ) {s = 65;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index111_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA111_11 = input.LA(1);

                         
                        int index111_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_JavaP()) ) {s = 65;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index111_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA111_12 = input.LA(1);

                         
                        int index111_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_JavaP()) ) {s = 65;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index111_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA111_13 = input.LA(1);

                         
                        int index111_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_JavaP()) ) {s = 65;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index111_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA111_14 = input.LA(1);

                         
                        int index111_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_JavaP()) ) {s = 65;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index111_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA111_15 = input.LA(1);

                         
                        int index111_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_JavaP()) ) {s = 65;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index111_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA111_16 = input.LA(1);

                         
                        int index111_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred144_JavaP()) ) {s = 65;}

                        else if ( (true) ) {s = 26;}

                         
                        input.seek(index111_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 111, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA119_eotS =
        "\27\uffff";
    static final String DFA119_eofS =
        "\27\uffff";
    static final String DFA119_minS =
        "\1\4\17\uffff\6\40\1\uffff";
    static final String DFA119_maxS =
        "\1\175\17\uffff\6\164\1\uffff";
    static final String DFA119_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1"+
        "\15\1\16\1\17\6\uffff\1\20";
    static final String DFA119_specialS =
        "\27\uffff}>";
    static final String[] DFA119_transitionS = {
            "\1\20\1\uffff\6\17\1\2\7\uffff\1\21\1\22\1\23\1\24\1\25\7\uffff"+
            "\1\16\21\uffff\1\1\2\uffff\1\17\5\uffff\1\11\2\uffff\10\17\1"+
            "\uffff\2\17\2\uffff\4\17\3\uffff\1\3\1\uffff\1\4\1\5\1\6\1\7"+
            "\1\uffff\1\10\1\12\1\13\1\14\1\15\21\uffff\2\17\2\uffff\6\17"+
            "\1\uffff\4\17",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\17\2\uffff\2\17\11\uffff\1\17\1\uffff\2\17\4\uffff\1\17"+
            "\2\uffff\1\17\14\uffff\1\17\1\uffff\1\17\10\uffff\1\26\16\uffff"+
            "\25\17",
            "\1\17\2\uffff\2\17\11\uffff\1\17\1\uffff\2\17\4\uffff\1\17"+
            "\2\uffff\1\17\14\uffff\1\17\1\uffff\1\17\10\uffff\1\26\16\uffff"+
            "\25\17",
            "\1\17\2\uffff\2\17\11\uffff\1\17\1\uffff\2\17\4\uffff\1\17"+
            "\2\uffff\1\17\14\uffff\1\17\1\uffff\1\17\10\uffff\1\26\16\uffff"+
            "\25\17",
            "\1\17\2\uffff\2\17\11\uffff\1\17\1\uffff\2\17\4\uffff\1\17"+
            "\2\uffff\1\17\14\uffff\1\17\1\uffff\1\17\10\uffff\1\26\16\uffff"+
            "\25\17",
            "\1\17\2\uffff\2\17\11\uffff\1\17\1\uffff\2\17\4\uffff\1\17"+
            "\2\uffff\1\17\14\uffff\1\17\1\uffff\1\17\10\uffff\1\26\16\uffff"+
            "\25\17",
            "\1\17\2\uffff\2\17\11\uffff\1\17\1\uffff\2\17\4\uffff\1\17"+
            "\2\uffff\1\17\14\uffff\1\17\1\uffff\1\17\10\uffff\1\26\16\uffff"+
            "\25\17",
            ""
    };

    static final short[] DFA119_eot = DFA.unpackEncodedString(DFA119_eotS);
    static final short[] DFA119_eof = DFA.unpackEncodedString(DFA119_eofS);
    static final char[] DFA119_min = DFA.unpackEncodedStringToUnsignedChars(DFA119_minS);
    static final char[] DFA119_max = DFA.unpackEncodedStringToUnsignedChars(DFA119_maxS);
    static final short[] DFA119_accept = DFA.unpackEncodedString(DFA119_acceptS);
    static final short[] DFA119_special = DFA.unpackEncodedString(DFA119_specialS);
    static final short[][] DFA119_transition;

    static {
        int numStates = DFA119_transitionS.length;
        DFA119_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA119_transition[i] = DFA.unpackEncodedString(DFA119_transitionS[i]);
        }
    }

    class DFA119 extends DFA {

        public DFA119(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 119;
            this.eot = DFA119_eot;
            this.eof = DFA119_eof;
            this.min = DFA119_min;
            this.max = DFA119_max;
            this.accept = DFA119_accept;
            this.special = DFA119_special;
            this.transition = DFA119_transition;
        }
        public String getDescription() {
            return "1206:1: statement returns [Statement element] : (bl= block | ASSERT asexpr= expression ( ':' asexprx= expression )? ';' | ifkey= 'if' ifexpr= parExpression ifif= statement ( options {k=1; } : elsekey= 'else' ifelse= statement )? | forkey= 'for' '(' forc= forControl ')' forstat= statement | whilkey= 'while' wexs= parExpression wstat= statement | dokey= 'do' dostat= statement whilekey= 'while' doex= parExpression ';' | trykey= 'try' traaibl= block (cts= catches finkey= 'finally' trybl= block | ctss= catches | finnkey= 'finally' trybll= block ) | switchkey= 'switch' swexpr= parExpression '{' cases= switchBlockStatementGroups '}' | synkey= 'synchronized' synexpr= parExpression synstat= block | retkey= 'return' (retex= expression )? ';' | throwkey= 'throw' threx= expression ';' | breakkey= 'break' (name= identifierRule )? ';' | continuekey= 'continue' (name= identifierRule )? ';' | ';' | stattex= statementExpression ';' | name= identifierRule ':' labstat= statement );";
        }
    }
    static final String DFA123_eotS =
        "\14\uffff";
    static final String DFA123_eofS =
        "\14\uffff";
    static final String DFA123_minS =
        "\1\120\1\4\2\uffff\6\43\1\0\1\uffff";
    static final String DFA123_maxS =
        "\1\137\1\175\2\uffff\6\164\1\0\1\uffff";
    static final String DFA123_acceptS =
        "\2\uffff\1\3\1\1\7\uffff\1\2";
    static final String DFA123_specialS =
        "\12\uffff\1\0\1\uffff}>";
    static final String[] DFA123_transitionS = {
            "\1\2\16\uffff\1\1",
            "\1\4\1\uffff\6\3\10\uffff\1\5\1\6\1\7\1\10\1\11\34\uffff\1"+
            "\3\10\uffff\10\3\1\uffff\2\3\2\uffff\4\3\40\uffff\2\3\2\uffff"+
            "\6\3\1\uffff\4\3",
            "",
            "",
            "\2\3\11\uffff\1\3\1\uffff\2\3\4\uffff\1\3\2\uffff\1\3\14\uffff"+
            "\1\3\1\uffff\1\3\10\uffff\1\12\16\uffff\25\3",
            "\2\3\11\uffff\1\3\1\uffff\2\3\4\uffff\1\3\2\uffff\1\3\14\uffff"+
            "\1\3\1\uffff\1\3\10\uffff\1\12\16\uffff\25\3",
            "\2\3\11\uffff\1\3\1\uffff\2\3\4\uffff\1\3\2\uffff\1\3\14\uffff"+
            "\1\3\1\uffff\1\3\10\uffff\1\12\16\uffff\25\3",
            "\2\3\11\uffff\1\3\1\uffff\2\3\4\uffff\1\3\2\uffff\1\3\14\uffff"+
            "\1\3\1\uffff\1\3\10\uffff\1\12\16\uffff\25\3",
            "\2\3\11\uffff\1\3\1\uffff\2\3\4\uffff\1\3\2\uffff\1\3\14\uffff"+
            "\1\3\1\uffff\1\3\10\uffff\1\12\16\uffff\25\3",
            "\2\3\11\uffff\1\3\1\uffff\2\3\4\uffff\1\3\2\uffff\1\3\14\uffff"+
            "\1\3\1\uffff\1\3\10\uffff\1\12\16\uffff\25\3",
            "\1\uffff",
            ""
    };

    static final short[] DFA123_eot = DFA.unpackEncodedString(DFA123_eotS);
    static final short[] DFA123_eof = DFA.unpackEncodedString(DFA123_eofS);
    static final char[] DFA123_min = DFA.unpackEncodedStringToUnsignedChars(DFA123_minS);
    static final char[] DFA123_max = DFA.unpackEncodedStringToUnsignedChars(DFA123_maxS);
    static final short[] DFA123_accept = DFA.unpackEncodedString(DFA123_acceptS);
    static final short[] DFA123_special = DFA.unpackEncodedString(DFA123_specialS);
    static final short[][] DFA123_transition;

    static {
        int numStates = DFA123_transitionS.length;
        DFA123_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA123_transition[i] = DFA.unpackEncodedString(DFA123_transitionS[i]);
        }
    }

    class DFA123 extends DFA {

        public DFA123(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 123;
            this.eot = DFA123_eot;
            this.eof = DFA123_eof;
            this.min = DFA123_min;
            this.max = DFA123_max;
            this.accept = DFA123_accept;
            this.special = DFA123_special;
            this.transition = DFA123_transition;
        }
        public String getDescription() {
            return "1303:1: switchLabel returns [SwitchLabel element] : ( 'case' csexpr= constantExpression ':' | 'case' enumname= enumConstantName ':' | 'default' ':' );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA123_10 = input.LA(1);

                         
                        int index123_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred172_JavaP()) ) {s = 3;}

                        else if ( (synpred173_JavaP()) ) {s = 11;}

                         
                        input.seek(index123_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 123, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA127_eotS =
        "\u0623\uffff";
    static final String DFA127_eofS =
        "\u0623\uffff";
    static final String DFA127_minS =
        "\21\4\32\uffff\31\4\6\40\35\uffff\3\4\6\40\35\uffff\3\4\6\40\35"+
        "\uffff\3\4\6\40\35\uffff\3\4\6\40\35\uffff\3\4\6\40\35\uffff\1\67"+
        "\6\40\1\uffff\1\67\6\40\1\uffff\1\67\6\40\1\uffff\1\67\6\40\1\uffff"+
        "\1\67\6\40\1\uffff\1\67\6\40\1\uffff\1\67\6\40\1\uffff\1\67\6\40"+
        "\1\uffff\u00f0\0\2\uffff\17\0\33\uffff\6\0\1\uffff\1\0\47\uffff"+
        "\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0"+
        "\4\uffff\17\0\33\uffff\6\0\1\uffff\1\0\47\uffff\3\0\2\uffff\3\0"+
        "\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\4\uffff\17\0\33"+
        "\uffff\6\0\1\uffff\1\0\47\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff"+
        "\3\0\2\uffff\3\0\2\uffff\3\0\4\uffff\17\0\33\uffff\6\0\1\uffff\1"+
        "\0\47\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0"+
        "\2\uffff\3\0\4\uffff\17\0\33\uffff\6\0\1\uffff\1\0\47\uffff\3\0"+
        "\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\4\uffff"+
        "\17\0\33\uffff\6\0\1\uffff\1\0\47\uffff\3\0\2\uffff\3\0\2\uffff"+
        "\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\4\0\2\uffff\3\0"+
        "\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\4\0\2\uffff"+
        "\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\4\0"+
        "\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff"+
        "\4\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0"+
        "\2\uffff\4\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff"+
        "\3\0\2\uffff\4\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0"+
        "\2\uffff\3\0\2\uffff\4\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff"+
        "\3\0\2\uffff\3\0\2\uffff\4\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0"+
        "\2\uffff\3\0\2\uffff\3\0\2\uffff";
    static final String DFA127_maxS =
        "\1\175\1\117\1\30\6\164\10\66\32\uffff\16\66\1\117\1\30\6\117\1"+
        "\175\1\167\1\175\6\121\35\uffff\1\175\1\167\1\175\6\121\35\uffff"+
        "\1\175\1\167\1\175\6\121\35\uffff\1\175\1\167\1\175\6\121\35\uffff"+
        "\1\175\1\167\1\175\6\121\35\uffff\1\175\1\167\1\175\6\121\35\uffff"+
        "\1\67\6\121\1\uffff\1\67\6\121\1\uffff\1\67\6\121\1\uffff\1\67\6"+
        "\121\1\uffff\1\67\6\121\1\uffff\1\67\6\121\1\uffff\1\67\6\121\1"+
        "\uffff\1\67\6\121\1\uffff\u00f0\0\2\uffff\17\0\33\uffff\6\0\1\uffff"+
        "\1\0\47\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3"+
        "\0\2\uffff\3\0\4\uffff\17\0\33\uffff\6\0\1\uffff\1\0\47\uffff\3"+
        "\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\4"+
        "\uffff\17\0\33\uffff\6\0\1\uffff\1\0\47\uffff\3\0\2\uffff\3\0\2"+
        "\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\4\uffff\17\0\33\uffff"+
        "\6\0\1\uffff\1\0\47\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3"+
        "\0\2\uffff\3\0\2\uffff\3\0\4\uffff\17\0\33\uffff\6\0\1\uffff\1\0"+
        "\47\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2"+
        "\uffff\3\0\4\uffff\17\0\33\uffff\6\0\1\uffff\1\0\47\uffff\3\0\2"+
        "\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff"+
        "\4\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0"+
        "\2\uffff\4\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff"+
        "\3\0\2\uffff\4\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0"+
        "\2\uffff\3\0\2\uffff\4\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff"+
        "\3\0\2\uffff\3\0\2\uffff\4\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0"+
        "\2\uffff\3\0\2\uffff\3\0\2\uffff\4\0\2\uffff\3\0\2\uffff\3\0\2\uffff"+
        "\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\4\0\2\uffff\3\0\2\uffff\3\0"+
        "\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\4\0\2\uffff\3\0\2\uffff"+
        "\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff\3\0\2\uffff";
    static final String DFA127_acceptS =
        "\21\uffff\1\2\u02a1\uffff\1\1\u036f\uffff";
    static final String DFA127_specialS =
        "\u0165\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13"+
        "\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
        "\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45"+
        "\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62"+
        "\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77"+
        "\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112"+
        "\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125"+
        "\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140"+
        "\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153"+
        "\1\154\1\155\1\156\1\157\1\160\1\161\1\162\1\163\1\164\1\165\1\166"+
        "\1\167\1\170\1\171\1\172\1\173\1\174\1\175\1\176\1\177\1\u0080\1"+
        "\u0081\1\u0082\1\u0083\1\u0084\1\u0085\1\u0086\1\u0087\1\u0088\1"+
        "\u0089\1\u008a\1\u008b\1\u008c\1\u008d\1\u008e\1\u008f\1\u0090\1"+
        "\u0091\1\u0092\1\u0093\1\u0094\1\u0095\1\u0096\1\u0097\1\u0098\1"+
        "\u0099\1\u009a\1\u009b\1\u009c\1\u009d\1\u009e\1\u009f\1\u00a0\1"+
        "\u00a1\1\u00a2\1\u00a3\1\u00a4\1\u00a5\1\u00a6\1\u00a7\1\u00a8\1"+
        "\u00a9\1\u00aa\1\u00ab\1\u00ac\1\u00ad\1\u00ae\1\u00af\1\u00b0\1"+
        "\u00b1\1\u00b2\1\u00b3\1\u00b4\1\u00b5\1\u00b6\1\u00b7\1\u00b8\1"+
        "\u00b9\1\u00ba\1\u00bb\1\u00bc\1\u00bd\1\u00be\1\u00bf\1\u00c0\1"+
        "\u00c1\1\u00c2\1\u00c3\1\u00c4\1\u00c5\1\u00c6\1\u00c7\1\u00c8\1"+
        "\u00c9\1\u00ca\1\u00cb\1\u00cc\1\u00cd\1\u00ce\1\u00cf\1\u00d0\1"+
        "\u00d1\1\u00d2\1\u00d3\1\u00d4\1\u00d5\1\u00d6\1\u00d7\1\u00d8\1"+
        "\u00d9\1\u00da\1\u00db\1\u00dc\1\u00dd\1\u00de\1\u00df\1\u00e0\1"+
        "\u00e1\1\u00e2\1\u00e3\1\u00e4\1\u00e5\1\u00e6\1\u00e7\1\u00e8\1"+
        "\u00e9\1\u00ea\1\u00eb\1\u00ec\1\u00ed\1\u00ee\1\u00ef\2\uffff\1"+
        "\u00f0\1\u00f1\1\u00f2\1\u00f3\1\u00f4\1\u00f5\1\u00f6\1\u00f7\1"+
        "\u00f8\1\u00f9\1\u00fa\1\u00fb\1\u00fc\1\u00fd\1\u00fe\33\uffff"+
        "\1\u00ff\1\u0100\1\u0101\1\u0102\1\u0103\1\u0104\1\uffff\1\u0105"+
        "\47\uffff\1\u0106\1\u0107\1\u0108\2\uffff\1\u0109\1\u010a\1\u010b"+
        "\2\uffff\1\u010c\1\u010d\1\u010e\2\uffff\1\u010f\1\u0110\1\u0111"+
        "\2\uffff\1\u0112\1\u0113\1\u0114\2\uffff\1\u0115\1\u0116\1\u0117"+
        "\4\uffff\1\u0118\1\u0119\1\u011a\1\u011b\1\u011c\1\u011d\1\u011e"+
        "\1\u011f\1\u0120\1\u0121\1\u0122\1\u0123\1\u0124\1\u0125\1\u0126"+
        "\33\uffff\1\u0127\1\u0128\1\u0129\1\u012a\1\u012b\1\u012c\1\uffff"+
        "\1\u012d\47\uffff\1\u012e\1\u012f\1\u0130\2\uffff\1\u0131\1\u0132"+
        "\1\u0133\2\uffff\1\u0134\1\u0135\1\u0136\2\uffff\1\u0137\1\u0138"+
        "\1\u0139\2\uffff\1\u013a\1\u013b\1\u013c\2\uffff\1\u013d\1\u013e"+
        "\1\u013f\4\uffff\1\u0140\1\u0141\1\u0142\1\u0143\1\u0144\1\u0145"+
        "\1\u0146\1\u0147\1\u0148\1\u0149\1\u014a\1\u014b\1\u014c\1\u014d"+
        "\1\u014e\33\uffff\1\u014f\1\u0150\1\u0151\1\u0152\1\u0153\1\u0154"+
        "\1\uffff\1\u0155\47\uffff\1\u0156\1\u0157\1\u0158\2\uffff\1\u0159"+
        "\1\u015a\1\u015b\2\uffff\1\u015c\1\u015d\1\u015e\2\uffff\1\u015f"+
        "\1\u0160\1\u0161\2\uffff\1\u0162\1\u0163\1\u0164\2\uffff\1\u0165"+
        "\1\u0166\1\u0167\4\uffff\1\u0168\1\u0169\1\u016a\1\u016b\1\u016c"+
        "\1\u016d\1\u016e\1\u016f\1\u0170\1\u0171\1\u0172\1\u0173\1\u0174"+
        "\1\u0175\1\u0176\33\uffff\1\u0177\1\u0178\1\u0179\1\u017a\1\u017b"+
        "\1\u017c\1\uffff\1\u017d\47\uffff\1\u017e\1\u017f\1\u0180\2\uffff"+
        "\1\u0181\1\u0182\1\u0183\2\uffff\1\u0184\1\u0185\1\u0186\2\uffff"+
        "\1\u0187\1\u0188\1\u0189\2\uffff\1\u018a\1\u018b\1\u018c\2\uffff"+
        "\1\u018d\1\u018e\1\u018f\4\uffff\1\u0190\1\u0191\1\u0192\1\u0193"+
        "\1\u0194\1\u0195\1\u0196\1\u0197\1\u0198\1\u0199\1\u019a\1\u019b"+
        "\1\u019c\1\u019d\1\u019e\33\uffff\1\u019f\1\u01a0\1\u01a1\1\u01a2"+
        "\1\u01a3\1\u01a4\1\uffff\1\u01a5\47\uffff\1\u01a6\1\u01a7\1\u01a8"+
        "\2\uffff\1\u01a9\1\u01aa\1\u01ab\2\uffff\1\u01ac\1\u01ad\1\u01ae"+
        "\2\uffff\1\u01af\1\u01b0\1\u01b1\2\uffff\1\u01b2\1\u01b3\1\u01b4"+
        "\2\uffff\1\u01b5\1\u01b6\1\u01b7\4\uffff\1\u01b8\1\u01b9\1\u01ba"+
        "\1\u01bb\1\u01bc\1\u01bd\1\u01be\1\u01bf\1\u01c0\1\u01c1\1\u01c2"+
        "\1\u01c3\1\u01c4\1\u01c5\1\u01c6\33\uffff\1\u01c7\1\u01c8\1\u01c9"+
        "\1\u01ca\1\u01cb\1\u01cc\1\uffff\1\u01cd\47\uffff\1\u01ce\1\u01cf"+
        "\1\u01d0\2\uffff\1\u01d1\1\u01d2\1\u01d3\2\uffff\1\u01d4\1\u01d5"+
        "\1\u01d6\2\uffff\1\u01d7\1\u01d8\1\u01d9\2\uffff\1\u01da\1\u01db"+
        "\1\u01dc\2\uffff\1\u01dd\1\u01de\1\u01df\2\uffff\1\u01e0\1\u01e1"+
        "\1\u01e2\1\u01e3\2\uffff\1\u01e4\1\u01e5\1\u01e6\2\uffff\1\u01e7"+
        "\1\u01e8\1\u01e9\2\uffff\1\u01ea\1\u01eb\1\u01ec\2\uffff\1\u01ed"+
        "\1\u01ee\1\u01ef\2\uffff\1\u01f0\1\u01f1\1\u01f2\2\uffff\1\u01f3"+
        "\1\u01f4\1\u01f5\1\u01f6\2\uffff\1\u01f7\1\u01f8\1\u01f9\2\uffff"+
        "\1\u01fa\1\u01fb\1\u01fc\2\uffff\1\u01fd\1\u01fe\1\u01ff\2\uffff"+
        "\1\u0200\1\u0201\1\u0202\2\uffff\1\u0203\1\u0204\1\u0205\2\uffff"+
        "\1\u0206\1\u0207\1\u0208\1\u0209\2\uffff\1\u020a\1\u020b\1\u020c"+
        "\2\uffff\1\u020d\1\u020e\1\u020f\2\uffff\1\u0210\1\u0211\1\u0212"+
        "\2\uffff\1\u0213\1\u0214\1\u0215\2\uffff\1\u0216\1\u0217\1\u0218"+
        "\2\uffff\1\u0219\1\u021a\1\u021b\1\u021c\2\uffff\1\u021d\1\u021e"+
        "\1\u021f\2\uffff\1\u0220\1\u0221\1\u0222\2\uffff\1\u0223\1\u0224"+
        "\1\u0225\2\uffff\1\u0226\1\u0227\1\u0228\2\uffff\1\u0229\1\u022a"+
        "\1\u022b\2\uffff\1\u022c\1\u022d\1\u022e\1\u022f\2\uffff\1\u0230"+
        "\1\u0231\1\u0232\2\uffff\1\u0233\1\u0234\1\u0235\2\uffff\1\u0236"+
        "\1\u0237\1\u0238\2\uffff\1\u0239\1\u023a\1\u023b\2\uffff\1\u023c"+
        "\1\u023d\1\u023e\2\uffff\1\u023f\1\u0240\1\u0241\1\u0242\2\uffff"+
        "\1\u0243\1\u0244\1\u0245\2\uffff\1\u0246\1\u0247\1\u0248\2\uffff"+
        "\1\u0249\1\u024a\1\u024b\2\uffff\1\u024c\1\u024d\1\u024e\2\uffff"+
        "\1\u024f\1\u0250\1\u0251\2\uffff\1\u0252\1\u0253\1\u0254\1\u0255"+
        "\2\uffff\1\u0256\1\u0257\1\u0258\2\uffff\1\u0259\1\u025a\1\u025b"+
        "\2\uffff\1\u025c\1\u025d\1\u025e\2\uffff\1\u025f\1\u0260\1\u0261"+
        "\2\uffff\1\u0262\1\u0263\1\u0264\2\uffff\1\u0265\1\u0266\1\u0267"+
        "\1\u0268\2\uffff\1\u0269\1\u026a\1\u026b\2\uffff\1\u026c\1\u026d"+
        "\1\u026e\2\uffff\1\u026f\1\u0270\1\u0271\2\uffff\1\u0272\1\u0273"+
        "\1\u0274\2\uffff\1\u0275\1\u0276\1\u0277\2\uffff}>";
    static final String[] DFA127_transitionS = {
            "\1\3\1\uffff\6\21\10\uffff\1\4\1\5\1\6\1\7\1\10\7\uffff\1\21"+
            "\10\uffff\1\1\13\uffff\1\21\10\uffff\1\11\1\12\1\13\1\14\1\15"+
            "\1\16\1\17\1\20\1\uffff\2\21\2\uffff\4\21\1\2\37\uffff\2\21"+
            "\2\uffff\6\21\1\uffff\4\21",
            "\1\53\17\uffff\1\54\1\55\1\56\1\57\1\60\20\uffff\1\71\24\uffff"+
            "\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\11\uffff\1\72",
            "\1\73\17\uffff\1\74\1\75\1\76\1\77\1\100",
            "\1\104\17\uffff\1\105\1\106\1\107\1\110\1\111\7\uffff\1\21"+
            "\2\uffff\1\102\1\21\11\uffff\1\101\3\21\4\uffff\1\103\2\uffff"+
            "\1\21\14\uffff\1\21\1\uffff\1\21\27\uffff\25\21",
            "\1\152\17\uffff\1\153\1\154\1\155\1\156\1\157\7\uffff\1\21"+
            "\2\uffff\1\150\1\21\11\uffff\1\147\3\21\4\uffff\1\151\2\uffff"+
            "\1\21\14\uffff\1\21\1\uffff\1\21\27\uffff\25\21",
            "\1\u0090\17\uffff\1\u0091\1\u0092\1\u0093\1\u0094\1\u0095"+
            "\7\uffff\1\21\2\uffff\1\u008e\1\21\11\uffff\1\u008d\3\21\4\uffff"+
            "\1\u008f\2\uffff\1\21\14\uffff\1\21\1\uffff\1\21\27\uffff\25"+
            "\21",
            "\1\u00b6\17\uffff\1\u00b7\1\u00b8\1\u00b9\1\u00ba\1\u00bb"+
            "\7\uffff\1\21\2\uffff\1\u00b4\1\21\11\uffff\1\u00b3\3\21\4\uffff"+
            "\1\u00b5\2\uffff\1\21\14\uffff\1\21\1\uffff\1\21\27\uffff\25"+
            "\21",
            "\1\u00dc\17\uffff\1\u00dd\1\u00de\1\u00df\1\u00e0\1\u00e1"+
            "\7\uffff\1\21\2\uffff\1\u00da\1\21\11\uffff\1\u00d9\3\21\4\uffff"+
            "\1\u00db\2\uffff\1\21\14\uffff\1\21\1\uffff\1\21\27\uffff\25"+
            "\21",
            "\1\u0102\17\uffff\1\u0103\1\u0104\1\u0105\1\u0106\1\u0107"+
            "\7\uffff\1\21\2\uffff\1\u0100\1\21\11\uffff\1\u00ff\3\21\4\uffff"+
            "\1\u0101\2\uffff\1\21\14\uffff\1\21\1\uffff\1\21\27\uffff\25"+
            "\21",
            "\1\u0126\17\uffff\1\u0127\1\u0128\1\u0129\1\u012a\1\u012b"+
            "\12\uffff\1\21\22\uffff\1\u0125",
            "\1\u012e\17\uffff\1\u012f\1\u0130\1\u0131\1\u0132\1\u0133"+
            "\12\uffff\1\21\22\uffff\1\u012d",
            "\1\u0136\17\uffff\1\u0137\1\u0138\1\u0139\1\u013a\1\u013b"+
            "\12\uffff\1\21\22\uffff\1\u0135",
            "\1\u013e\17\uffff\1\u013f\1\u0140\1\u0141\1\u0142\1\u0143"+
            "\12\uffff\1\21\22\uffff\1\u013d",
            "\1\u0146\17\uffff\1\u0147\1\u0148\1\u0149\1\u014a\1\u014b"+
            "\12\uffff\1\21\22\uffff\1\u0145",
            "\1\u014e\17\uffff\1\u014f\1\u0150\1\u0151\1\u0152\1\u0153"+
            "\12\uffff\1\21\22\uffff\1\u014d",
            "\1\u0156\17\uffff\1\u0157\1\u0158\1\u0159\1\u015a\1\u015b"+
            "\12\uffff\1\21\22\uffff\1\u0155",
            "\1\u015e\17\uffff\1\u015f\1\u0160\1\u0161\1\u0162\1\u0163"+
            "\12\uffff\1\21\22\uffff\1\u015d",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u0168\17\uffff\1\u0169\1\u016a\1\u016b\1\u016c\1\u016d"+
            "\12\uffff\1\u0166\12\uffff\1\u0165\7\uffff\1\u0167",
            "\1\u0171\17\uffff\1\u0172\1\u0173\1\u0174\1\u0175\1\u0176"+
            "\12\uffff\1\u016f\12\uffff\1\u016e\7\uffff\1\u0170",
            "\1\u017a\17\uffff\1\u017b\1\u017c\1\u017d\1\u017e\1\u017f"+
            "\12\uffff\1\u0178\12\uffff\1\u0177\7\uffff\1\u0179",
            "\1\u0183\17\uffff\1\u0184\1\u0185\1\u0186\1\u0187\1\u0188"+
            "\12\uffff\1\u0181\12\uffff\1\u0180\7\uffff\1\u0182",
            "\1\u018c\17\uffff\1\u018d\1\u018e\1\u018f\1\u0190\1\u0191"+
            "\12\uffff\1\u018a\12\uffff\1\u0189\7\uffff\1\u018b",
            "\1\u0195\17\uffff\1\u0196\1\u0197\1\u0198\1\u0199\1\u019a"+
            "\12\uffff\1\u0193\12\uffff\1\u0192\7\uffff\1\u0194",
            "\1\u019c\17\uffff\1\u019d\1\u019e\1\u019f\1\u01a0\1\u01a1"+
            "\35\uffff\1\u019b",
            "\1\u01a3\17\uffff\1\u01a4\1\u01a5\1\u01a6\1\u01a7\1\u01a8"+
            "\35\uffff\1\u01a2",
            "\1\u01aa\17\uffff\1\u01ab\1\u01ac\1\u01ad\1\u01ae\1\u01af"+
            "\35\uffff\1\u01a9",
            "\1\u01b1\17\uffff\1\u01b2\1\u01b3\1\u01b4\1\u01b5\1\u01b6"+
            "\35\uffff\1\u01b0",
            "\1\u01b8\17\uffff\1\u01b9\1\u01ba\1\u01bb\1\u01bc\1\u01bd"+
            "\35\uffff\1\u01b7",
            "\1\u01bf\17\uffff\1\u01c0\1\u01c1\1\u01c2\1\u01c3\1\u01c4"+
            "\35\uffff\1\u01be",
            "\1\u01c6\17\uffff\1\u01c7\1\u01c8\1\u01c9\1\u01ca\1\u01cb"+
            "\35\uffff\1\u01c5",
            "\1\u01cd\17\uffff\1\u01ce\1\u01cf\1\u01d0\1\u01d1\1\u01d2"+
            "\35\uffff\1\u01cc",
            "\1\u01d3\17\uffff\1\u01d4\1\u01d5\1\u01d6\1\u01d7\1\u01d8"+
            "\20\uffff\1\u01e1\24\uffff\1\u01d9\1\u01da\1\u01db\1\u01dc\1"+
            "\u01dd\1\u01de\1\u01df\1\u01e0\11\uffff\1\u01e2",
            "\1\u01e3\17\uffff\1\u01e4\1\u01e5\1\u01e6\1\u01e7\1\u01e8",
            "\1\u01eb\17\uffff\1\u01ec\1\u01ed\1\u01ee\1\u01ef\1\u01f0"+
            "\12\uffff\1\u01e9\5\uffff\1\u01f9\24\uffff\1\u01f1\1\u01f2\1"+
            "\u01f3\1\u01f4\1\u01f5\1\u01f6\1\u01f7\1\u01f8\2\uffff\1\u01ea"+
            "\6\uffff\1\u01fa",
            "\1\u01fd\17\uffff\1\u01fe\1\u01ff\1\u0200\1\u0201\1\u0202"+
            "\12\uffff\1\u01fb\5\uffff\1\u020b\24\uffff\1\u0203\1\u0204\1"+
            "\u0205\1\u0206\1\u0207\1\u0208\1\u0209\1\u020a\2\uffff\1\u01fc"+
            "\6\uffff\1\u020c",
            "\1\u020f\17\uffff\1\u0210\1\u0211\1\u0212\1\u0213\1\u0214"+
            "\12\uffff\1\u020d\5\uffff\1\u021d\24\uffff\1\u0215\1\u0216\1"+
            "\u0217\1\u0218\1\u0219\1\u021a\1\u021b\1\u021c\2\uffff\1\u020e"+
            "\6\uffff\1\u021e",
            "\1\u0221\17\uffff\1\u0222\1\u0223\1\u0224\1\u0225\1\u0226"+
            "\12\uffff\1\u021f\5\uffff\1\u022f\24\uffff\1\u0227\1\u0228\1"+
            "\u0229\1\u022a\1\u022b\1\u022c\1\u022d\1\u022e\2\uffff\1\u0220"+
            "\6\uffff\1\u0230",
            "\1\u0233\17\uffff\1\u0234\1\u0235\1\u0236\1\u0237\1\u0238"+
            "\12\uffff\1\u0231\5\uffff\1\u0241\24\uffff\1\u0239\1\u023a\1"+
            "\u023b\1\u023c\1\u023d\1\u023e\1\u023f\1\u0240\2\uffff\1\u0232"+
            "\6\uffff\1\u0242",
            "\1\u0245\17\uffff\1\u0246\1\u0247\1\u0248\1\u0249\1\u024a"+
            "\12\uffff\1\u0243\5\uffff\1\u0253\24\uffff\1\u024b\1\u024c\1"+
            "\u024d\1\u024e\1\u024f\1\u0250\1\u0251\1\u0252\2\uffff\1\u0244"+
            "\6\uffff\1\u0254",
            "\1\u0257\1\uffff\6\21\10\uffff\1\u0258\1\u0259\1\u025a\1\u025b"+
            "\1\u025c\25\uffff\1\21\6\uffff\1\21\3\uffff\1\21\4\uffff\1\u025d"+
            "\1\u025e\1\u025f\1\u0260\1\u0261\1\u0262\1\u0263\1\u0264\1\u0265"+
            "\2\21\2\uffff\4\21\40\uffff\2\21\2\uffff\5\21\3\uffff\3\21",
            "\1\u0281\17\uffff\1\u0282\1\u0283\1\u0284\1\u0285\1\u0286"+
            "\22\uffff\1\21\2\uffff\1\21\30\uffff\1\21\3\uffff\1\21\53\uffff"+
            "\1\21",
            "\1\21\1\uffff\6\21\10\uffff\5\21\34\uffff\1\21\1\uffff\1\u0288"+
            "\6\uffff\10\21\1\uffff\2\21\2\uffff\4\21\40\uffff\2\21\2\uffff"+
            "\6\21\1\uffff\4\21",
            "\1\21\16\uffff\1\u02b2\6\uffff\1\u02b0\2\uffff\1\u02b1\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u02b7\6\uffff\1\u02b5\2\uffff\1\u02b6\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u02bc\6\uffff\1\u02ba\2\uffff\1\u02bb\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u02c1\6\uffff\1\u02bf\2\uffff\1\u02c0\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u02c6\6\uffff\1\u02c4\2\uffff\1\u02c5\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u02cb\6\uffff\1\u02c9\2\uffff\1\u02ca\27"+
            "\uffff\1\u02b3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u02d0\1\uffff\6\21\10\uffff\1\u02d1\1\u02d2\1\u02d3\1\u02d4"+
            "\1\u02d5\25\uffff\1\21\6\uffff\1\21\3\uffff\1\21\4\uffff\1\u02d6"+
            "\1\u02d7\1\u02d8\1\u02d9\1\u02da\1\u02db\1\u02dc\1\u02dd\1\u02de"+
            "\2\21\2\uffff\4\21\40\uffff\2\21\2\uffff\5\21\3\uffff\3\21",
            "\1\u02fa\17\uffff\1\u02fb\1\u02fc\1\u02fd\1\u02fe\1\u02ff"+
            "\22\uffff\1\21\2\uffff\1\21\30\uffff\1\21\3\uffff\1\21\53\uffff"+
            "\1\21",
            "\1\21\1\uffff\6\21\10\uffff\5\21\34\uffff\1\21\1\uffff\1\u0301"+
            "\6\uffff\10\21\1\uffff\2\21\2\uffff\4\21\40\uffff\2\21\2\uffff"+
            "\6\21\1\uffff\4\21",
            "\1\21\16\uffff\1\u032b\6\uffff\1\u0329\2\uffff\1\u032a\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0330\6\uffff\1\u032e\2\uffff\1\u032f\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0335\6\uffff\1\u0333\2\uffff\1\u0334\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u033a\6\uffff\1\u0338\2\uffff\1\u0339\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u033f\6\uffff\1\u033d\2\uffff\1\u033e\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0344\6\uffff\1\u0342\2\uffff\1\u0343\27"+
            "\uffff\1\u02b3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u0349\1\uffff\6\21\10\uffff\1\u034a\1\u034b\1\u034c\1\u034d"+
            "\1\u034e\25\uffff\1\21\6\uffff\1\21\3\uffff\1\21\4\uffff\1\u034f"+
            "\1\u0350\1\u0351\1\u0352\1\u0353\1\u0354\1\u0355\1\u0356\1\u0357"+
            "\2\21\2\uffff\4\21\40\uffff\2\21\2\uffff\5\21\3\uffff\3\21",
            "\1\u0373\17\uffff\1\u0374\1\u0375\1\u0376\1\u0377\1\u0378"+
            "\22\uffff\1\21\2\uffff\1\21\30\uffff\1\21\3\uffff\1\21\53\uffff"+
            "\1\21",
            "\1\21\1\uffff\6\21\10\uffff\5\21\34\uffff\1\21\1\uffff\1\u037a"+
            "\6\uffff\10\21\1\uffff\2\21\2\uffff\4\21\40\uffff\2\21\2\uffff"+
            "\6\21\1\uffff\4\21",
            "\1\21\16\uffff\1\u03a4\6\uffff\1\u03a2\2\uffff\1\u03a3\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u03a9\6\uffff\1\u03a7\2\uffff\1\u03a8\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u03ae\6\uffff\1\u03ac\2\uffff\1\u03ad\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u03b3\6\uffff\1\u03b1\2\uffff\1\u03b2\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u03b8\6\uffff\1\u03b6\2\uffff\1\u03b7\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u03bd\6\uffff\1\u03bb\2\uffff\1\u03bc\27"+
            "\uffff\1\u02b3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u03c2\1\uffff\6\21\10\uffff\1\u03c3\1\u03c4\1\u03c5\1\u03c6"+
            "\1\u03c7\25\uffff\1\21\6\uffff\1\21\3\uffff\1\21\4\uffff\1\u03c8"+
            "\1\u03c9\1\u03ca\1\u03cb\1\u03cc\1\u03cd\1\u03ce\1\u03cf\1\u03d0"+
            "\2\21\2\uffff\4\21\40\uffff\2\21\2\uffff\5\21\3\uffff\3\21",
            "\1\u03ec\17\uffff\1\u03ed\1\u03ee\1\u03ef\1\u03f0\1\u03f1"+
            "\22\uffff\1\21\2\uffff\1\21\30\uffff\1\21\3\uffff\1\21\53\uffff"+
            "\1\21",
            "\1\21\1\uffff\6\21\10\uffff\5\21\34\uffff\1\21\1\uffff\1\u03f3"+
            "\6\uffff\10\21\1\uffff\2\21\2\uffff\4\21\40\uffff\2\21\2\uffff"+
            "\6\21\1\uffff\4\21",
            "\1\21\16\uffff\1\u041d\6\uffff\1\u041b\2\uffff\1\u041c\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0422\6\uffff\1\u0420\2\uffff\1\u0421\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0427\6\uffff\1\u0425\2\uffff\1\u0426\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u042c\6\uffff\1\u042a\2\uffff\1\u042b\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0431\6\uffff\1\u042f\2\uffff\1\u0430\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0436\6\uffff\1\u0434\2\uffff\1\u0435\27"+
            "\uffff\1\u02b3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u043b\1\uffff\6\21\10\uffff\1\u043c\1\u043d\1\u043e\1\u043f"+
            "\1\u0440\25\uffff\1\21\6\uffff\1\21\3\uffff\1\21\4\uffff\1\u0441"+
            "\1\u0442\1\u0443\1\u0444\1\u0445\1\u0446\1\u0447\1\u0448\1\u0449"+
            "\2\21\2\uffff\4\21\40\uffff\2\21\2\uffff\5\21\3\uffff\3\21",
            "\1\u0465\17\uffff\1\u0466\1\u0467\1\u0468\1\u0469\1\u046a"+
            "\22\uffff\1\21\2\uffff\1\21\30\uffff\1\21\3\uffff\1\21\53\uffff"+
            "\1\21",
            "\1\21\1\uffff\6\21\10\uffff\5\21\34\uffff\1\21\1\uffff\1\u046c"+
            "\6\uffff\10\21\1\uffff\2\21\2\uffff\4\21\40\uffff\2\21\2\uffff"+
            "\6\21\1\uffff\4\21",
            "\1\21\16\uffff\1\u0496\6\uffff\1\u0494\2\uffff\1\u0495\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u049b\6\uffff\1\u0499\2\uffff\1\u049a\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u04a0\6\uffff\1\u049e\2\uffff\1\u049f\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u04a5\6\uffff\1\u04a3\2\uffff\1\u04a4\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u04aa\6\uffff\1\u04a8\2\uffff\1\u04a9\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u04af\6\uffff\1\u04ad\2\uffff\1\u04ae\27"+
            "\uffff\1\u02b3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u04b4\1\uffff\6\21\10\uffff\1\u04b5\1\u04b6\1\u04b7\1\u04b8"+
            "\1\u04b9\25\uffff\1\21\6\uffff\1\21\3\uffff\1\21\4\uffff\1\u04ba"+
            "\1\u04bb\1\u04bc\1\u04bd\1\u04be\1\u04bf\1\u04c0\1\u04c1\1\u04c2"+
            "\2\21\2\uffff\4\21\40\uffff\2\21\2\uffff\5\21\3\uffff\3\21",
            "\1\u04de\17\uffff\1\u04df\1\u04e0\1\u04e1\1\u04e2\1\u04e3"+
            "\22\uffff\1\21\2\uffff\1\21\30\uffff\1\21\3\uffff\1\21\53\uffff"+
            "\1\21",
            "\1\21\1\uffff\6\21\10\uffff\5\21\34\uffff\1\21\1\uffff\1\u04e5"+
            "\6\uffff\10\21\1\uffff\2\21\2\uffff\4\21\40\uffff\2\21\2\uffff"+
            "\6\21\1\uffff\4\21",
            "\1\21\16\uffff\1\u050f\6\uffff\1\u050d\2\uffff\1\u050e\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0514\6\uffff\1\u0512\2\uffff\1\u0513\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0519\6\uffff\1\u0517\2\uffff\1\u0518\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u051e\6\uffff\1\u051c\2\uffff\1\u051d\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0523\6\uffff\1\u0521\2\uffff\1\u0522\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0528\6\uffff\1\u0526\2\uffff\1\u0527\27"+
            "\uffff\1\u02b3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\u052b",
            "\1\21\16\uffff\1\u052e\6\uffff\1\u052c\2\uffff\1\u052d\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0533\6\uffff\1\u0531\2\uffff\1\u0532\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0538\6\uffff\1\u0536\2\uffff\1\u0537\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u053d\6\uffff\1\u053b\2\uffff\1\u053c\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0542\6\uffff\1\u0540\2\uffff\1\u0541\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0547\6\uffff\1\u0545\2\uffff\1\u0546\27"+
            "\uffff\1\u02b3",
            "",
            "\1\u054a",
            "\1\21\16\uffff\1\u054d\6\uffff\1\u054b\2\uffff\1\u054c\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0552\6\uffff\1\u0550\2\uffff\1\u0551\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0557\6\uffff\1\u0555\2\uffff\1\u0556\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u055c\6\uffff\1\u055a\2\uffff\1\u055b\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0561\6\uffff\1\u055f\2\uffff\1\u0560\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0566\6\uffff\1\u0564\2\uffff\1\u0565\27"+
            "\uffff\1\u02b3",
            "",
            "\1\u0569",
            "\1\21\16\uffff\1\u056c\6\uffff\1\u056a\2\uffff\1\u056b\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0571\6\uffff\1\u056f\2\uffff\1\u0570\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0576\6\uffff\1\u0574\2\uffff\1\u0575\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u057b\6\uffff\1\u0579\2\uffff\1\u057a\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0580\6\uffff\1\u057e\2\uffff\1\u057f\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0585\6\uffff\1\u0583\2\uffff\1\u0584\27"+
            "\uffff\1\u02b3",
            "",
            "\1\u0588",
            "\1\21\16\uffff\1\u058b\6\uffff\1\u0589\2\uffff\1\u058a\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0590\6\uffff\1\u058e\2\uffff\1\u058f\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0595\6\uffff\1\u0593\2\uffff\1\u0594\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u059a\6\uffff\1\u0598\2\uffff\1\u0599\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u059f\6\uffff\1\u059d\2\uffff\1\u059e\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u05a4\6\uffff\1\u05a2\2\uffff\1\u05a3\27"+
            "\uffff\1\u02b3",
            "",
            "\1\u05a7",
            "\1\21\16\uffff\1\u05aa\6\uffff\1\u05a8\2\uffff\1\u05a9\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u05af\6\uffff\1\u05ad\2\uffff\1\u05ae\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u05b4\6\uffff\1\u05b2\2\uffff\1\u05b3\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u05b9\6\uffff\1\u05b7\2\uffff\1\u05b8\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u05be\6\uffff\1\u05bc\2\uffff\1\u05bd\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u05c3\6\uffff\1\u05c1\2\uffff\1\u05c2\27"+
            "\uffff\1\u02b3",
            "",
            "\1\u05c6",
            "\1\21\16\uffff\1\u05c9\6\uffff\1\u05c7\2\uffff\1\u05c8\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u05ce\6\uffff\1\u05cc\2\uffff\1\u05cd\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u05d3\6\uffff\1\u05d1\2\uffff\1\u05d2\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u05d8\6\uffff\1\u05d6\2\uffff\1\u05d7\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u05dd\6\uffff\1\u05db\2\uffff\1\u05dc\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u05e2\6\uffff\1\u05e0\2\uffff\1\u05e1\27"+
            "\uffff\1\u02b3",
            "",
            "\1\u05e5",
            "\1\21\16\uffff\1\u05e8\6\uffff\1\u05e6\2\uffff\1\u05e7\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u05ed\6\uffff\1\u05eb\2\uffff\1\u05ec\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u05f2\6\uffff\1\u05f0\2\uffff\1\u05f1\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u05f7\6\uffff\1\u05f5\2\uffff\1\u05f6\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u05fc\6\uffff\1\u05fa\2\uffff\1\u05fb\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0601\6\uffff\1\u05ff\2\uffff\1\u0600\27"+
            "\uffff\1\u02b3",
            "",
            "\1\u0604",
            "\1\21\16\uffff\1\u0607\6\uffff\1\u0605\2\uffff\1\u0606\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u060c\6\uffff\1\u060a\2\uffff\1\u060b\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0611\6\uffff\1\u060f\2\uffff\1\u0610\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0616\6\uffff\1\u0614\2\uffff\1\u0615\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u061b\6\uffff\1\u0619\2\uffff\1\u061a\27"+
            "\uffff\1\u02b3",
            "\1\21\16\uffff\1\u0620\6\uffff\1\u061e\2\uffff\1\u061f\27"+
            "\uffff\1\u02b3",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] DFA127_eot = DFA.unpackEncodedString(DFA127_eotS);
    static final short[] DFA127_eof = DFA.unpackEncodedString(DFA127_eofS);
    static final char[] DFA127_min = DFA.unpackEncodedStringToUnsignedChars(DFA127_minS);
    static final char[] DFA127_max = DFA.unpackEncodedStringToUnsignedChars(DFA127_maxS);
    static final short[] DFA127_accept = DFA.unpackEncodedString(DFA127_acceptS);
    static final short[] DFA127_special = DFA.unpackEncodedString(DFA127_specialS);
    static final short[][] DFA127_transition;

    static {
        int numStates = DFA127_transitionS.length;
        DFA127_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA127_transition[i] = DFA.unpackEncodedString(DFA127_transitionS[i]);
        }
    }

    class DFA127 extends DFA {

        public DFA127(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 127;
            this.eot = DFA127_eot;
            this.eof = DFA127_eof;
            this.min = DFA127_min;
            this.max = DFA127_max;
            this.accept = DFA127_accept;
            this.special = DFA127_special;
            this.transition = DFA127_transition;
        }
        public String getDescription() {
            return "1310:1: forControl returns [ForControl element] options {k=3; } : (enh= enhancedForControl | (in= forInit )? ';' (e= expression )? ';' (u= forUpdate )? );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA127_357 = input.LA(1);

                         
                        int index127_357 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_357);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA127_358 = input.LA(1);

                         
                        int index127_358 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_358);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA127_359 = input.LA(1);

                         
                        int index127_359 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_359);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA127_360 = input.LA(1);

                         
                        int index127_360 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_360);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA127_361 = input.LA(1);

                         
                        int index127_361 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_361);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA127_362 = input.LA(1);

                         
                        int index127_362 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_362);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA127_363 = input.LA(1);

                         
                        int index127_363 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_363);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA127_364 = input.LA(1);

                         
                        int index127_364 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_364);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA127_365 = input.LA(1);

                         
                        int index127_365 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_365);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA127_366 = input.LA(1);

                         
                        int index127_366 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_366);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA127_367 = input.LA(1);

                         
                        int index127_367 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_367);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA127_368 = input.LA(1);

                         
                        int index127_368 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_368);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA127_369 = input.LA(1);

                         
                        int index127_369 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_369);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA127_370 = input.LA(1);

                         
                        int index127_370 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_370);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA127_371 = input.LA(1);

                         
                        int index127_371 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_371);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA127_372 = input.LA(1);

                         
                        int index127_372 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_372);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA127_373 = input.LA(1);

                         
                        int index127_373 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_373);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA127_374 = input.LA(1);

                         
                        int index127_374 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_374);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA127_375 = input.LA(1);

                         
                        int index127_375 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_375);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA127_376 = input.LA(1);

                         
                        int index127_376 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_376);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA127_377 = input.LA(1);

                         
                        int index127_377 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_377);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA127_378 = input.LA(1);

                         
                        int index127_378 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_378);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA127_379 = input.LA(1);

                         
                        int index127_379 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_379);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA127_380 = input.LA(1);

                         
                        int index127_380 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_380);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA127_381 = input.LA(1);

                         
                        int index127_381 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_381);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA127_382 = input.LA(1);

                         
                        int index127_382 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_382);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA127_383 = input.LA(1);

                         
                        int index127_383 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_383);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA127_384 = input.LA(1);

                         
                        int index127_384 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_384);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA127_385 = input.LA(1);

                         
                        int index127_385 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_385);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA127_386 = input.LA(1);

                         
                        int index127_386 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_386);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA127_387 = input.LA(1);

                         
                        int index127_387 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_387);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA127_388 = input.LA(1);

                         
                        int index127_388 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_388);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA127_389 = input.LA(1);

                         
                        int index127_389 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_389);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA127_390 = input.LA(1);

                         
                        int index127_390 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_390);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA127_391 = input.LA(1);

                         
                        int index127_391 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_391);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA127_392 = input.LA(1);

                         
                        int index127_392 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_392);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA127_393 = input.LA(1);

                         
                        int index127_393 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_393);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA127_394 = input.LA(1);

                         
                        int index127_394 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_394);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA127_395 = input.LA(1);

                         
                        int index127_395 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_395);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA127_396 = input.LA(1);

                         
                        int index127_396 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_396);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA127_397 = input.LA(1);

                         
                        int index127_397 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_397);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA127_398 = input.LA(1);

                         
                        int index127_398 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_398);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA127_399 = input.LA(1);

                         
                        int index127_399 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_399);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA127_400 = input.LA(1);

                         
                        int index127_400 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_400);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA127_401 = input.LA(1);

                         
                        int index127_401 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_401);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA127_402 = input.LA(1);

                         
                        int index127_402 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_402);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA127_403 = input.LA(1);

                         
                        int index127_403 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_403);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA127_404 = input.LA(1);

                         
                        int index127_404 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_404);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA127_405 = input.LA(1);

                         
                        int index127_405 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_405);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA127_406 = input.LA(1);

                         
                        int index127_406 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_406);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA127_407 = input.LA(1);

                         
                        int index127_407 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_407);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA127_408 = input.LA(1);

                         
                        int index127_408 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_408);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA127_409 = input.LA(1);

                         
                        int index127_409 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_409);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA127_410 = input.LA(1);

                         
                        int index127_410 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_410);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA127_411 = input.LA(1);

                         
                        int index127_411 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_411);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA127_412 = input.LA(1);

                         
                        int index127_412 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_412);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA127_413 = input.LA(1);

                         
                        int index127_413 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_413);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA127_414 = input.LA(1);

                         
                        int index127_414 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_414);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA127_415 = input.LA(1);

                         
                        int index127_415 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_415);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA127_416 = input.LA(1);

                         
                        int index127_416 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_416);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA127_417 = input.LA(1);

                         
                        int index127_417 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_417);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA127_418 = input.LA(1);

                         
                        int index127_418 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_418);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA127_419 = input.LA(1);

                         
                        int index127_419 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_419);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA127_420 = input.LA(1);

                         
                        int index127_420 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_420);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA127_421 = input.LA(1);

                         
                        int index127_421 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_421);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA127_422 = input.LA(1);

                         
                        int index127_422 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_422);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA127_423 = input.LA(1);

                         
                        int index127_423 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_423);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA127_424 = input.LA(1);

                         
                        int index127_424 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_424);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA127_425 = input.LA(1);

                         
                        int index127_425 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_425);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA127_426 = input.LA(1);

                         
                        int index127_426 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_426);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA127_427 = input.LA(1);

                         
                        int index127_427 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_427);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA127_428 = input.LA(1);

                         
                        int index127_428 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_428);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA127_429 = input.LA(1);

                         
                        int index127_429 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_429);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA127_430 = input.LA(1);

                         
                        int index127_430 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_430);
                        if ( s>=0 ) return s;
                        break;
                    case 74 : 
                        int LA127_431 = input.LA(1);

                         
                        int index127_431 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_431);
                        if ( s>=0 ) return s;
                        break;
                    case 75 : 
                        int LA127_432 = input.LA(1);

                         
                        int index127_432 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_432);
                        if ( s>=0 ) return s;
                        break;
                    case 76 : 
                        int LA127_433 = input.LA(1);

                         
                        int index127_433 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_433);
                        if ( s>=0 ) return s;
                        break;
                    case 77 : 
                        int LA127_434 = input.LA(1);

                         
                        int index127_434 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_434);
                        if ( s>=0 ) return s;
                        break;
                    case 78 : 
                        int LA127_435 = input.LA(1);

                         
                        int index127_435 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_435);
                        if ( s>=0 ) return s;
                        break;
                    case 79 : 
                        int LA127_436 = input.LA(1);

                         
                        int index127_436 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_436);
                        if ( s>=0 ) return s;
                        break;
                    case 80 : 
                        int LA127_437 = input.LA(1);

                         
                        int index127_437 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_437);
                        if ( s>=0 ) return s;
                        break;
                    case 81 : 
                        int LA127_438 = input.LA(1);

                         
                        int index127_438 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_438);
                        if ( s>=0 ) return s;
                        break;
                    case 82 : 
                        int LA127_439 = input.LA(1);

                         
                        int index127_439 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_439);
                        if ( s>=0 ) return s;
                        break;
                    case 83 : 
                        int LA127_440 = input.LA(1);

                         
                        int index127_440 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_440);
                        if ( s>=0 ) return s;
                        break;
                    case 84 : 
                        int LA127_441 = input.LA(1);

                         
                        int index127_441 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_441);
                        if ( s>=0 ) return s;
                        break;
                    case 85 : 
                        int LA127_442 = input.LA(1);

                         
                        int index127_442 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_442);
                        if ( s>=0 ) return s;
                        break;
                    case 86 : 
                        int LA127_443 = input.LA(1);

                         
                        int index127_443 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_443);
                        if ( s>=0 ) return s;
                        break;
                    case 87 : 
                        int LA127_444 = input.LA(1);

                         
                        int index127_444 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_444);
                        if ( s>=0 ) return s;
                        break;
                    case 88 : 
                        int LA127_445 = input.LA(1);

                         
                        int index127_445 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_445);
                        if ( s>=0 ) return s;
                        break;
                    case 89 : 
                        int LA127_446 = input.LA(1);

                         
                        int index127_446 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_446);
                        if ( s>=0 ) return s;
                        break;
                    case 90 : 
                        int LA127_447 = input.LA(1);

                         
                        int index127_447 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_447);
                        if ( s>=0 ) return s;
                        break;
                    case 91 : 
                        int LA127_448 = input.LA(1);

                         
                        int index127_448 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_448);
                        if ( s>=0 ) return s;
                        break;
                    case 92 : 
                        int LA127_449 = input.LA(1);

                         
                        int index127_449 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_449);
                        if ( s>=0 ) return s;
                        break;
                    case 93 : 
                        int LA127_450 = input.LA(1);

                         
                        int index127_450 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_450);
                        if ( s>=0 ) return s;
                        break;
                    case 94 : 
                        int LA127_451 = input.LA(1);

                         
                        int index127_451 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_451);
                        if ( s>=0 ) return s;
                        break;
                    case 95 : 
                        int LA127_452 = input.LA(1);

                         
                        int index127_452 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_452);
                        if ( s>=0 ) return s;
                        break;
                    case 96 : 
                        int LA127_453 = input.LA(1);

                         
                        int index127_453 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_453);
                        if ( s>=0 ) return s;
                        break;
                    case 97 : 
                        int LA127_454 = input.LA(1);

                         
                        int index127_454 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_454);
                        if ( s>=0 ) return s;
                        break;
                    case 98 : 
                        int LA127_455 = input.LA(1);

                         
                        int index127_455 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_455);
                        if ( s>=0 ) return s;
                        break;
                    case 99 : 
                        int LA127_456 = input.LA(1);

                         
                        int index127_456 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_456);
                        if ( s>=0 ) return s;
                        break;
                    case 100 : 
                        int LA127_457 = input.LA(1);

                         
                        int index127_457 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_457);
                        if ( s>=0 ) return s;
                        break;
                    case 101 : 
                        int LA127_458 = input.LA(1);

                         
                        int index127_458 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_458);
                        if ( s>=0 ) return s;
                        break;
                    case 102 : 
                        int LA127_459 = input.LA(1);

                         
                        int index127_459 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_459);
                        if ( s>=0 ) return s;
                        break;
                    case 103 : 
                        int LA127_460 = input.LA(1);

                         
                        int index127_460 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_460);
                        if ( s>=0 ) return s;
                        break;
                    case 104 : 
                        int LA127_461 = input.LA(1);

                         
                        int index127_461 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_461);
                        if ( s>=0 ) return s;
                        break;
                    case 105 : 
                        int LA127_462 = input.LA(1);

                         
                        int index127_462 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_462);
                        if ( s>=0 ) return s;
                        break;
                    case 106 : 
                        int LA127_463 = input.LA(1);

                         
                        int index127_463 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_463);
                        if ( s>=0 ) return s;
                        break;
                    case 107 : 
                        int LA127_464 = input.LA(1);

                         
                        int index127_464 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_464);
                        if ( s>=0 ) return s;
                        break;
                    case 108 : 
                        int LA127_465 = input.LA(1);

                         
                        int index127_465 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_465);
                        if ( s>=0 ) return s;
                        break;
                    case 109 : 
                        int LA127_466 = input.LA(1);

                         
                        int index127_466 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_466);
                        if ( s>=0 ) return s;
                        break;
                    case 110 : 
                        int LA127_467 = input.LA(1);

                         
                        int index127_467 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_467);
                        if ( s>=0 ) return s;
                        break;
                    case 111 : 
                        int LA127_468 = input.LA(1);

                         
                        int index127_468 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_468);
                        if ( s>=0 ) return s;
                        break;
                    case 112 : 
                        int LA127_469 = input.LA(1);

                         
                        int index127_469 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_469);
                        if ( s>=0 ) return s;
                        break;
                    case 113 : 
                        int LA127_470 = input.LA(1);

                         
                        int index127_470 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_470);
                        if ( s>=0 ) return s;
                        break;
                    case 114 : 
                        int LA127_471 = input.LA(1);

                         
                        int index127_471 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_471);
                        if ( s>=0 ) return s;
                        break;
                    case 115 : 
                        int LA127_472 = input.LA(1);

                         
                        int index127_472 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_472);
                        if ( s>=0 ) return s;
                        break;
                    case 116 : 
                        int LA127_473 = input.LA(1);

                         
                        int index127_473 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_473);
                        if ( s>=0 ) return s;
                        break;
                    case 117 : 
                        int LA127_474 = input.LA(1);

                         
                        int index127_474 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_474);
                        if ( s>=0 ) return s;
                        break;
                    case 118 : 
                        int LA127_475 = input.LA(1);

                         
                        int index127_475 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_475);
                        if ( s>=0 ) return s;
                        break;
                    case 119 : 
                        int LA127_476 = input.LA(1);

                         
                        int index127_476 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_476);
                        if ( s>=0 ) return s;
                        break;
                    case 120 : 
                        int LA127_477 = input.LA(1);

                         
                        int index127_477 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_477);
                        if ( s>=0 ) return s;
                        break;
                    case 121 : 
                        int LA127_478 = input.LA(1);

                         
                        int index127_478 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_478);
                        if ( s>=0 ) return s;
                        break;
                    case 122 : 
                        int LA127_479 = input.LA(1);

                         
                        int index127_479 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_479);
                        if ( s>=0 ) return s;
                        break;
                    case 123 : 
                        int LA127_480 = input.LA(1);

                         
                        int index127_480 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_480);
                        if ( s>=0 ) return s;
                        break;
                    case 124 : 
                        int LA127_481 = input.LA(1);

                         
                        int index127_481 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_481);
                        if ( s>=0 ) return s;
                        break;
                    case 125 : 
                        int LA127_482 = input.LA(1);

                         
                        int index127_482 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_482);
                        if ( s>=0 ) return s;
                        break;
                    case 126 : 
                        int LA127_483 = input.LA(1);

                         
                        int index127_483 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_483);
                        if ( s>=0 ) return s;
                        break;
                    case 127 : 
                        int LA127_484 = input.LA(1);

                         
                        int index127_484 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_484);
                        if ( s>=0 ) return s;
                        break;
                    case 128 : 
                        int LA127_485 = input.LA(1);

                         
                        int index127_485 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_485);
                        if ( s>=0 ) return s;
                        break;
                    case 129 : 
                        int LA127_486 = input.LA(1);

                         
                        int index127_486 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_486);
                        if ( s>=0 ) return s;
                        break;
                    case 130 : 
                        int LA127_487 = input.LA(1);

                         
                        int index127_487 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_487);
                        if ( s>=0 ) return s;
                        break;
                    case 131 : 
                        int LA127_488 = input.LA(1);

                         
                        int index127_488 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_488);
                        if ( s>=0 ) return s;
                        break;
                    case 132 : 
                        int LA127_489 = input.LA(1);

                         
                        int index127_489 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_489);
                        if ( s>=0 ) return s;
                        break;
                    case 133 : 
                        int LA127_490 = input.LA(1);

                         
                        int index127_490 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_490);
                        if ( s>=0 ) return s;
                        break;
                    case 134 : 
                        int LA127_491 = input.LA(1);

                         
                        int index127_491 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_491);
                        if ( s>=0 ) return s;
                        break;
                    case 135 : 
                        int LA127_492 = input.LA(1);

                         
                        int index127_492 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_492);
                        if ( s>=0 ) return s;
                        break;
                    case 136 : 
                        int LA127_493 = input.LA(1);

                         
                        int index127_493 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_493);
                        if ( s>=0 ) return s;
                        break;
                    case 137 : 
                        int LA127_494 = input.LA(1);

                         
                        int index127_494 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_494);
                        if ( s>=0 ) return s;
                        break;
                    case 138 : 
                        int LA127_495 = input.LA(1);

                         
                        int index127_495 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_495);
                        if ( s>=0 ) return s;
                        break;
                    case 139 : 
                        int LA127_496 = input.LA(1);

                         
                        int index127_496 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_496);
                        if ( s>=0 ) return s;
                        break;
                    case 140 : 
                        int LA127_497 = input.LA(1);

                         
                        int index127_497 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_497);
                        if ( s>=0 ) return s;
                        break;
                    case 141 : 
                        int LA127_498 = input.LA(1);

                         
                        int index127_498 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_498);
                        if ( s>=0 ) return s;
                        break;
                    case 142 : 
                        int LA127_499 = input.LA(1);

                         
                        int index127_499 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_499);
                        if ( s>=0 ) return s;
                        break;
                    case 143 : 
                        int LA127_500 = input.LA(1);

                         
                        int index127_500 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_500);
                        if ( s>=0 ) return s;
                        break;
                    case 144 : 
                        int LA127_501 = input.LA(1);

                         
                        int index127_501 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_501);
                        if ( s>=0 ) return s;
                        break;
                    case 145 : 
                        int LA127_502 = input.LA(1);

                         
                        int index127_502 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_502);
                        if ( s>=0 ) return s;
                        break;
                    case 146 : 
                        int LA127_503 = input.LA(1);

                         
                        int index127_503 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_503);
                        if ( s>=0 ) return s;
                        break;
                    case 147 : 
                        int LA127_504 = input.LA(1);

                         
                        int index127_504 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_504);
                        if ( s>=0 ) return s;
                        break;
                    case 148 : 
                        int LA127_505 = input.LA(1);

                         
                        int index127_505 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_505);
                        if ( s>=0 ) return s;
                        break;
                    case 149 : 
                        int LA127_506 = input.LA(1);

                         
                        int index127_506 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_506);
                        if ( s>=0 ) return s;
                        break;
                    case 150 : 
                        int LA127_507 = input.LA(1);

                         
                        int index127_507 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_507);
                        if ( s>=0 ) return s;
                        break;
                    case 151 : 
                        int LA127_508 = input.LA(1);

                         
                        int index127_508 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_508);
                        if ( s>=0 ) return s;
                        break;
                    case 152 : 
                        int LA127_509 = input.LA(1);

                         
                        int index127_509 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_509);
                        if ( s>=0 ) return s;
                        break;
                    case 153 : 
                        int LA127_510 = input.LA(1);

                         
                        int index127_510 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_510);
                        if ( s>=0 ) return s;
                        break;
                    case 154 : 
                        int LA127_511 = input.LA(1);

                         
                        int index127_511 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_511);
                        if ( s>=0 ) return s;
                        break;
                    case 155 : 
                        int LA127_512 = input.LA(1);

                         
                        int index127_512 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_512);
                        if ( s>=0 ) return s;
                        break;
                    case 156 : 
                        int LA127_513 = input.LA(1);

                         
                        int index127_513 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_513);
                        if ( s>=0 ) return s;
                        break;
                    case 157 : 
                        int LA127_514 = input.LA(1);

                         
                        int index127_514 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_514);
                        if ( s>=0 ) return s;
                        break;
                    case 158 : 
                        int LA127_515 = input.LA(1);

                         
                        int index127_515 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_515);
                        if ( s>=0 ) return s;
                        break;
                    case 159 : 
                        int LA127_516 = input.LA(1);

                         
                        int index127_516 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_516);
                        if ( s>=0 ) return s;
                        break;
                    case 160 : 
                        int LA127_517 = input.LA(1);

                         
                        int index127_517 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_517);
                        if ( s>=0 ) return s;
                        break;
                    case 161 : 
                        int LA127_518 = input.LA(1);

                         
                        int index127_518 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_518);
                        if ( s>=0 ) return s;
                        break;
                    case 162 : 
                        int LA127_519 = input.LA(1);

                         
                        int index127_519 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_519);
                        if ( s>=0 ) return s;
                        break;
                    case 163 : 
                        int LA127_520 = input.LA(1);

                         
                        int index127_520 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_520);
                        if ( s>=0 ) return s;
                        break;
                    case 164 : 
                        int LA127_521 = input.LA(1);

                         
                        int index127_521 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_521);
                        if ( s>=0 ) return s;
                        break;
                    case 165 : 
                        int LA127_522 = input.LA(1);

                         
                        int index127_522 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_522);
                        if ( s>=0 ) return s;
                        break;
                    case 166 : 
                        int LA127_523 = input.LA(1);

                         
                        int index127_523 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_523);
                        if ( s>=0 ) return s;
                        break;
                    case 167 : 
                        int LA127_524 = input.LA(1);

                         
                        int index127_524 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_524);
                        if ( s>=0 ) return s;
                        break;
                    case 168 : 
                        int LA127_525 = input.LA(1);

                         
                        int index127_525 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_525);
                        if ( s>=0 ) return s;
                        break;
                    case 169 : 
                        int LA127_526 = input.LA(1);

                         
                        int index127_526 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_526);
                        if ( s>=0 ) return s;
                        break;
                    case 170 : 
                        int LA127_527 = input.LA(1);

                         
                        int index127_527 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_527);
                        if ( s>=0 ) return s;
                        break;
                    case 171 : 
                        int LA127_528 = input.LA(1);

                         
                        int index127_528 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_528);
                        if ( s>=0 ) return s;
                        break;
                    case 172 : 
                        int LA127_529 = input.LA(1);

                         
                        int index127_529 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_529);
                        if ( s>=0 ) return s;
                        break;
                    case 173 : 
                        int LA127_530 = input.LA(1);

                         
                        int index127_530 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_530);
                        if ( s>=0 ) return s;
                        break;
                    case 174 : 
                        int LA127_531 = input.LA(1);

                         
                        int index127_531 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_531);
                        if ( s>=0 ) return s;
                        break;
                    case 175 : 
                        int LA127_532 = input.LA(1);

                         
                        int index127_532 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_532);
                        if ( s>=0 ) return s;
                        break;
                    case 176 : 
                        int LA127_533 = input.LA(1);

                         
                        int index127_533 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_533);
                        if ( s>=0 ) return s;
                        break;
                    case 177 : 
                        int LA127_534 = input.LA(1);

                         
                        int index127_534 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_534);
                        if ( s>=0 ) return s;
                        break;
                    case 178 : 
                        int LA127_535 = input.LA(1);

                         
                        int index127_535 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_535);
                        if ( s>=0 ) return s;
                        break;
                    case 179 : 
                        int LA127_536 = input.LA(1);

                         
                        int index127_536 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_536);
                        if ( s>=0 ) return s;
                        break;
                    case 180 : 
                        int LA127_537 = input.LA(1);

                         
                        int index127_537 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_537);
                        if ( s>=0 ) return s;
                        break;
                    case 181 : 
                        int LA127_538 = input.LA(1);

                         
                        int index127_538 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_538);
                        if ( s>=0 ) return s;
                        break;
                    case 182 : 
                        int LA127_539 = input.LA(1);

                         
                        int index127_539 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_539);
                        if ( s>=0 ) return s;
                        break;
                    case 183 : 
                        int LA127_540 = input.LA(1);

                         
                        int index127_540 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_540);
                        if ( s>=0 ) return s;
                        break;
                    case 184 : 
                        int LA127_541 = input.LA(1);

                         
                        int index127_541 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_541);
                        if ( s>=0 ) return s;
                        break;
                    case 185 : 
                        int LA127_542 = input.LA(1);

                         
                        int index127_542 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_542);
                        if ( s>=0 ) return s;
                        break;
                    case 186 : 
                        int LA127_543 = input.LA(1);

                         
                        int index127_543 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_543);
                        if ( s>=0 ) return s;
                        break;
                    case 187 : 
                        int LA127_544 = input.LA(1);

                         
                        int index127_544 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_544);
                        if ( s>=0 ) return s;
                        break;
                    case 188 : 
                        int LA127_545 = input.LA(1);

                         
                        int index127_545 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_545);
                        if ( s>=0 ) return s;
                        break;
                    case 189 : 
                        int LA127_546 = input.LA(1);

                         
                        int index127_546 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_546);
                        if ( s>=0 ) return s;
                        break;
                    case 190 : 
                        int LA127_547 = input.LA(1);

                         
                        int index127_547 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_547);
                        if ( s>=0 ) return s;
                        break;
                    case 191 : 
                        int LA127_548 = input.LA(1);

                         
                        int index127_548 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_548);
                        if ( s>=0 ) return s;
                        break;
                    case 192 : 
                        int LA127_549 = input.LA(1);

                         
                        int index127_549 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_549);
                        if ( s>=0 ) return s;
                        break;
                    case 193 : 
                        int LA127_550 = input.LA(1);

                         
                        int index127_550 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_550);
                        if ( s>=0 ) return s;
                        break;
                    case 194 : 
                        int LA127_551 = input.LA(1);

                         
                        int index127_551 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_551);
                        if ( s>=0 ) return s;
                        break;
                    case 195 : 
                        int LA127_552 = input.LA(1);

                         
                        int index127_552 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_552);
                        if ( s>=0 ) return s;
                        break;
                    case 196 : 
                        int LA127_553 = input.LA(1);

                         
                        int index127_553 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_553);
                        if ( s>=0 ) return s;
                        break;
                    case 197 : 
                        int LA127_554 = input.LA(1);

                         
                        int index127_554 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_554);
                        if ( s>=0 ) return s;
                        break;
                    case 198 : 
                        int LA127_555 = input.LA(1);

                         
                        int index127_555 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_555);
                        if ( s>=0 ) return s;
                        break;
                    case 199 : 
                        int LA127_556 = input.LA(1);

                         
                        int index127_556 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_556);
                        if ( s>=0 ) return s;
                        break;
                    case 200 : 
                        int LA127_557 = input.LA(1);

                         
                        int index127_557 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_557);
                        if ( s>=0 ) return s;
                        break;
                    case 201 : 
                        int LA127_558 = input.LA(1);

                         
                        int index127_558 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_558);
                        if ( s>=0 ) return s;
                        break;
                    case 202 : 
                        int LA127_559 = input.LA(1);

                         
                        int index127_559 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_559);
                        if ( s>=0 ) return s;
                        break;
                    case 203 : 
                        int LA127_560 = input.LA(1);

                         
                        int index127_560 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_560);
                        if ( s>=0 ) return s;
                        break;
                    case 204 : 
                        int LA127_561 = input.LA(1);

                         
                        int index127_561 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_561);
                        if ( s>=0 ) return s;
                        break;
                    case 205 : 
                        int LA127_562 = input.LA(1);

                         
                        int index127_562 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_562);
                        if ( s>=0 ) return s;
                        break;
                    case 206 : 
                        int LA127_563 = input.LA(1);

                         
                        int index127_563 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_563);
                        if ( s>=0 ) return s;
                        break;
                    case 207 : 
                        int LA127_564 = input.LA(1);

                         
                        int index127_564 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_564);
                        if ( s>=0 ) return s;
                        break;
                    case 208 : 
                        int LA127_565 = input.LA(1);

                         
                        int index127_565 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_565);
                        if ( s>=0 ) return s;
                        break;
                    case 209 : 
                        int LA127_566 = input.LA(1);

                         
                        int index127_566 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_566);
                        if ( s>=0 ) return s;
                        break;
                    case 210 : 
                        int LA127_567 = input.LA(1);

                         
                        int index127_567 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_567);
                        if ( s>=0 ) return s;
                        break;
                    case 211 : 
                        int LA127_568 = input.LA(1);

                         
                        int index127_568 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_568);
                        if ( s>=0 ) return s;
                        break;
                    case 212 : 
                        int LA127_569 = input.LA(1);

                         
                        int index127_569 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_569);
                        if ( s>=0 ) return s;
                        break;
                    case 213 : 
                        int LA127_570 = input.LA(1);

                         
                        int index127_570 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_570);
                        if ( s>=0 ) return s;
                        break;
                    case 214 : 
                        int LA127_571 = input.LA(1);

                         
                        int index127_571 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_571);
                        if ( s>=0 ) return s;
                        break;
                    case 215 : 
                        int LA127_572 = input.LA(1);

                         
                        int index127_572 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_572);
                        if ( s>=0 ) return s;
                        break;
                    case 216 : 
                        int LA127_573 = input.LA(1);

                         
                        int index127_573 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_573);
                        if ( s>=0 ) return s;
                        break;
                    case 217 : 
                        int LA127_574 = input.LA(1);

                         
                        int index127_574 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_574);
                        if ( s>=0 ) return s;
                        break;
                    case 218 : 
                        int LA127_575 = input.LA(1);

                         
                        int index127_575 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_575);
                        if ( s>=0 ) return s;
                        break;
                    case 219 : 
                        int LA127_576 = input.LA(1);

                         
                        int index127_576 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_576);
                        if ( s>=0 ) return s;
                        break;
                    case 220 : 
                        int LA127_577 = input.LA(1);

                         
                        int index127_577 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_577);
                        if ( s>=0 ) return s;
                        break;
                    case 221 : 
                        int LA127_578 = input.LA(1);

                         
                        int index127_578 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_578);
                        if ( s>=0 ) return s;
                        break;
                    case 222 : 
                        int LA127_579 = input.LA(1);

                         
                        int index127_579 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_579);
                        if ( s>=0 ) return s;
                        break;
                    case 223 : 
                        int LA127_580 = input.LA(1);

                         
                        int index127_580 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_580);
                        if ( s>=0 ) return s;
                        break;
                    case 224 : 
                        int LA127_581 = input.LA(1);

                         
                        int index127_581 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_581);
                        if ( s>=0 ) return s;
                        break;
                    case 225 : 
                        int LA127_582 = input.LA(1);

                         
                        int index127_582 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_582);
                        if ( s>=0 ) return s;
                        break;
                    case 226 : 
                        int LA127_583 = input.LA(1);

                         
                        int index127_583 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_583);
                        if ( s>=0 ) return s;
                        break;
                    case 227 : 
                        int LA127_584 = input.LA(1);

                         
                        int index127_584 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_584);
                        if ( s>=0 ) return s;
                        break;
                    case 228 : 
                        int LA127_585 = input.LA(1);

                         
                        int index127_585 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_585);
                        if ( s>=0 ) return s;
                        break;
                    case 229 : 
                        int LA127_586 = input.LA(1);

                         
                        int index127_586 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_586);
                        if ( s>=0 ) return s;
                        break;
                    case 230 : 
                        int LA127_587 = input.LA(1);

                         
                        int index127_587 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_587);
                        if ( s>=0 ) return s;
                        break;
                    case 231 : 
                        int LA127_588 = input.LA(1);

                         
                        int index127_588 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_588);
                        if ( s>=0 ) return s;
                        break;
                    case 232 : 
                        int LA127_589 = input.LA(1);

                         
                        int index127_589 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_589);
                        if ( s>=0 ) return s;
                        break;
                    case 233 : 
                        int LA127_590 = input.LA(1);

                         
                        int index127_590 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_590);
                        if ( s>=0 ) return s;
                        break;
                    case 234 : 
                        int LA127_591 = input.LA(1);

                         
                        int index127_591 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_591);
                        if ( s>=0 ) return s;
                        break;
                    case 235 : 
                        int LA127_592 = input.LA(1);

                         
                        int index127_592 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_592);
                        if ( s>=0 ) return s;
                        break;
                    case 236 : 
                        int LA127_593 = input.LA(1);

                         
                        int index127_593 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_593);
                        if ( s>=0 ) return s;
                        break;
                    case 237 : 
                        int LA127_594 = input.LA(1);

                         
                        int index127_594 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_594);
                        if ( s>=0 ) return s;
                        break;
                    case 238 : 
                        int LA127_595 = input.LA(1);

                         
                        int index127_595 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_595);
                        if ( s>=0 ) return s;
                        break;
                    case 239 : 
                        int LA127_596 = input.LA(1);

                         
                        int index127_596 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_596);
                        if ( s>=0 ) return s;
                        break;
                    case 240 : 
                        int LA127_599 = input.LA(1);

                         
                        int index127_599 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_599);
                        if ( s>=0 ) return s;
                        break;
                    case 241 : 
                        int LA127_600 = input.LA(1);

                         
                        int index127_600 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_600);
                        if ( s>=0 ) return s;
                        break;
                    case 242 : 
                        int LA127_601 = input.LA(1);

                         
                        int index127_601 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_601);
                        if ( s>=0 ) return s;
                        break;
                    case 243 : 
                        int LA127_602 = input.LA(1);

                         
                        int index127_602 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_602);
                        if ( s>=0 ) return s;
                        break;
                    case 244 : 
                        int LA127_603 = input.LA(1);

                         
                        int index127_603 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_603);
                        if ( s>=0 ) return s;
                        break;
                    case 245 : 
                        int LA127_604 = input.LA(1);

                         
                        int index127_604 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_604);
                        if ( s>=0 ) return s;
                        break;
                    case 246 : 
                        int LA127_605 = input.LA(1);

                         
                        int index127_605 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_605);
                        if ( s>=0 ) return s;
                        break;
                    case 247 : 
                        int LA127_606 = input.LA(1);

                         
                        int index127_606 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_606);
                        if ( s>=0 ) return s;
                        break;
                    case 248 : 
                        int LA127_607 = input.LA(1);

                         
                        int index127_607 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_607);
                        if ( s>=0 ) return s;
                        break;
                    case 249 : 
                        int LA127_608 = input.LA(1);

                         
                        int index127_608 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_608);
                        if ( s>=0 ) return s;
                        break;
                    case 250 : 
                        int LA127_609 = input.LA(1);

                         
                        int index127_609 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_609);
                        if ( s>=0 ) return s;
                        break;
                    case 251 : 
                        int LA127_610 = input.LA(1);

                         
                        int index127_610 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_610);
                        if ( s>=0 ) return s;
                        break;
                    case 252 : 
                        int LA127_611 = input.LA(1);

                         
                        int index127_611 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_611);
                        if ( s>=0 ) return s;
                        break;
                    case 253 : 
                        int LA127_612 = input.LA(1);

                         
                        int index127_612 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_612);
                        if ( s>=0 ) return s;
                        break;
                    case 254 : 
                        int LA127_613 = input.LA(1);

                         
                        int index127_613 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_613);
                        if ( s>=0 ) return s;
                        break;
                    case 255 : 
                        int LA127_641 = input.LA(1);

                         
                        int index127_641 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_641);
                        if ( s>=0 ) return s;
                        break;
                    case 256 : 
                        int LA127_642 = input.LA(1);

                         
                        int index127_642 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_642);
                        if ( s>=0 ) return s;
                        break;
                    case 257 : 
                        int LA127_643 = input.LA(1);

                         
                        int index127_643 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_643);
                        if ( s>=0 ) return s;
                        break;
                    case 258 : 
                        int LA127_644 = input.LA(1);

                         
                        int index127_644 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_644);
                        if ( s>=0 ) return s;
                        break;
                    case 259 : 
                        int LA127_645 = input.LA(1);

                         
                        int index127_645 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_645);
                        if ( s>=0 ) return s;
                        break;
                    case 260 : 
                        int LA127_646 = input.LA(1);

                         
                        int index127_646 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_646);
                        if ( s>=0 ) return s;
                        break;
                    case 261 : 
                        int LA127_648 = input.LA(1);

                         
                        int index127_648 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_648);
                        if ( s>=0 ) return s;
                        break;
                    case 262 : 
                        int LA127_688 = input.LA(1);

                         
                        int index127_688 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_688);
                        if ( s>=0 ) return s;
                        break;
                    case 263 : 
                        int LA127_689 = input.LA(1);

                         
                        int index127_689 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_689);
                        if ( s>=0 ) return s;
                        break;
                    case 264 : 
                        int LA127_690 = input.LA(1);

                         
                        int index127_690 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_690);
                        if ( s>=0 ) return s;
                        break;
                    case 265 : 
                        int LA127_693 = input.LA(1);

                         
                        int index127_693 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_693);
                        if ( s>=0 ) return s;
                        break;
                    case 266 : 
                        int LA127_694 = input.LA(1);

                         
                        int index127_694 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_694);
                        if ( s>=0 ) return s;
                        break;
                    case 267 : 
                        int LA127_695 = input.LA(1);

                         
                        int index127_695 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_695);
                        if ( s>=0 ) return s;
                        break;
                    case 268 : 
                        int LA127_698 = input.LA(1);

                         
                        int index127_698 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_698);
                        if ( s>=0 ) return s;
                        break;
                    case 269 : 
                        int LA127_699 = input.LA(1);

                         
                        int index127_699 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_699);
                        if ( s>=0 ) return s;
                        break;
                    case 270 : 
                        int LA127_700 = input.LA(1);

                         
                        int index127_700 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_700);
                        if ( s>=0 ) return s;
                        break;
                    case 271 : 
                        int LA127_703 = input.LA(1);

                         
                        int index127_703 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_703);
                        if ( s>=0 ) return s;
                        break;
                    case 272 : 
                        int LA127_704 = input.LA(1);

                         
                        int index127_704 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_704);
                        if ( s>=0 ) return s;
                        break;
                    case 273 : 
                        int LA127_705 = input.LA(1);

                         
                        int index127_705 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_705);
                        if ( s>=0 ) return s;
                        break;
                    case 274 : 
                        int LA127_708 = input.LA(1);

                         
                        int index127_708 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_708);
                        if ( s>=0 ) return s;
                        break;
                    case 275 : 
                        int LA127_709 = input.LA(1);

                         
                        int index127_709 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_709);
                        if ( s>=0 ) return s;
                        break;
                    case 276 : 
                        int LA127_710 = input.LA(1);

                         
                        int index127_710 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_710);
                        if ( s>=0 ) return s;
                        break;
                    case 277 : 
                        int LA127_713 = input.LA(1);

                         
                        int index127_713 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_713);
                        if ( s>=0 ) return s;
                        break;
                    case 278 : 
                        int LA127_714 = input.LA(1);

                         
                        int index127_714 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_714);
                        if ( s>=0 ) return s;
                        break;
                    case 279 : 
                        int LA127_715 = input.LA(1);

                         
                        int index127_715 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_715);
                        if ( s>=0 ) return s;
                        break;
                    case 280 : 
                        int LA127_720 = input.LA(1);

                         
                        int index127_720 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_720);
                        if ( s>=0 ) return s;
                        break;
                    case 281 : 
                        int LA127_721 = input.LA(1);

                         
                        int index127_721 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_721);
                        if ( s>=0 ) return s;
                        break;
                    case 282 : 
                        int LA127_722 = input.LA(1);

                         
                        int index127_722 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_722);
                        if ( s>=0 ) return s;
                        break;
                    case 283 : 
                        int LA127_723 = input.LA(1);

                         
                        int index127_723 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_723);
                        if ( s>=0 ) return s;
                        break;
                    case 284 : 
                        int LA127_724 = input.LA(1);

                         
                        int index127_724 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_724);
                        if ( s>=0 ) return s;
                        break;
                    case 285 : 
                        int LA127_725 = input.LA(1);

                         
                        int index127_725 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_725);
                        if ( s>=0 ) return s;
                        break;
                    case 286 : 
                        int LA127_726 = input.LA(1);

                         
                        int index127_726 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_726);
                        if ( s>=0 ) return s;
                        break;
                    case 287 : 
                        int LA127_727 = input.LA(1);

                         
                        int index127_727 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_727);
                        if ( s>=0 ) return s;
                        break;
                    case 288 : 
                        int LA127_728 = input.LA(1);

                         
                        int index127_728 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_728);
                        if ( s>=0 ) return s;
                        break;
                    case 289 : 
                        int LA127_729 = input.LA(1);

                         
                        int index127_729 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_729);
                        if ( s>=0 ) return s;
                        break;
                    case 290 : 
                        int LA127_730 = input.LA(1);

                         
                        int index127_730 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_730);
                        if ( s>=0 ) return s;
                        break;
                    case 291 : 
                        int LA127_731 = input.LA(1);

                         
                        int index127_731 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_731);
                        if ( s>=0 ) return s;
                        break;
                    case 292 : 
                        int LA127_732 = input.LA(1);

                         
                        int index127_732 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_732);
                        if ( s>=0 ) return s;
                        break;
                    case 293 : 
                        int LA127_733 = input.LA(1);

                         
                        int index127_733 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_733);
                        if ( s>=0 ) return s;
                        break;
                    case 294 : 
                        int LA127_734 = input.LA(1);

                         
                        int index127_734 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_734);
                        if ( s>=0 ) return s;
                        break;
                    case 295 : 
                        int LA127_762 = input.LA(1);

                         
                        int index127_762 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_762);
                        if ( s>=0 ) return s;
                        break;
                    case 296 : 
                        int LA127_763 = input.LA(1);

                         
                        int index127_763 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_763);
                        if ( s>=0 ) return s;
                        break;
                    case 297 : 
                        int LA127_764 = input.LA(1);

                         
                        int index127_764 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_764);
                        if ( s>=0 ) return s;
                        break;
                    case 298 : 
                        int LA127_765 = input.LA(1);

                         
                        int index127_765 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_765);
                        if ( s>=0 ) return s;
                        break;
                    case 299 : 
                        int LA127_766 = input.LA(1);

                         
                        int index127_766 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_766);
                        if ( s>=0 ) return s;
                        break;
                    case 300 : 
                        int LA127_767 = input.LA(1);

                         
                        int index127_767 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_767);
                        if ( s>=0 ) return s;
                        break;
                    case 301 : 
                        int LA127_769 = input.LA(1);

                         
                        int index127_769 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_769);
                        if ( s>=0 ) return s;
                        break;
                    case 302 : 
                        int LA127_809 = input.LA(1);

                         
                        int index127_809 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_809);
                        if ( s>=0 ) return s;
                        break;
                    case 303 : 
                        int LA127_810 = input.LA(1);

                         
                        int index127_810 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_810);
                        if ( s>=0 ) return s;
                        break;
                    case 304 : 
                        int LA127_811 = input.LA(1);

                         
                        int index127_811 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_811);
                        if ( s>=0 ) return s;
                        break;
                    case 305 : 
                        int LA127_814 = input.LA(1);

                         
                        int index127_814 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_814);
                        if ( s>=0 ) return s;
                        break;
                    case 306 : 
                        int LA127_815 = input.LA(1);

                         
                        int index127_815 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_815);
                        if ( s>=0 ) return s;
                        break;
                    case 307 : 
                        int LA127_816 = input.LA(1);

                         
                        int index127_816 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_816);
                        if ( s>=0 ) return s;
                        break;
                    case 308 : 
                        int LA127_819 = input.LA(1);

                         
                        int index127_819 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_819);
                        if ( s>=0 ) return s;
                        break;
                    case 309 : 
                        int LA127_820 = input.LA(1);

                         
                        int index127_820 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_820);
                        if ( s>=0 ) return s;
                        break;
                    case 310 : 
                        int LA127_821 = input.LA(1);

                         
                        int index127_821 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_821);
                        if ( s>=0 ) return s;
                        break;
                    case 311 : 
                        int LA127_824 = input.LA(1);

                         
                        int index127_824 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_824);
                        if ( s>=0 ) return s;
                        break;
                    case 312 : 
                        int LA127_825 = input.LA(1);

                         
                        int index127_825 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_825);
                        if ( s>=0 ) return s;
                        break;
                    case 313 : 
                        int LA127_826 = input.LA(1);

                         
                        int index127_826 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_826);
                        if ( s>=0 ) return s;
                        break;
                    case 314 : 
                        int LA127_829 = input.LA(1);

                         
                        int index127_829 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_829);
                        if ( s>=0 ) return s;
                        break;
                    case 315 : 
                        int LA127_830 = input.LA(1);

                         
                        int index127_830 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_830);
                        if ( s>=0 ) return s;
                        break;
                    case 316 : 
                        int LA127_831 = input.LA(1);

                         
                        int index127_831 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_831);
                        if ( s>=0 ) return s;
                        break;
                    case 317 : 
                        int LA127_834 = input.LA(1);

                         
                        int index127_834 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_834);
                        if ( s>=0 ) return s;
                        break;
                    case 318 : 
                        int LA127_835 = input.LA(1);

                         
                        int index127_835 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_835);
                        if ( s>=0 ) return s;
                        break;
                    case 319 : 
                        int LA127_836 = input.LA(1);

                         
                        int index127_836 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_836);
                        if ( s>=0 ) return s;
                        break;
                    case 320 : 
                        int LA127_841 = input.LA(1);

                         
                        int index127_841 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_841);
                        if ( s>=0 ) return s;
                        break;
                    case 321 : 
                        int LA127_842 = input.LA(1);

                         
                        int index127_842 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_842);
                        if ( s>=0 ) return s;
                        break;
                    case 322 : 
                        int LA127_843 = input.LA(1);

                         
                        int index127_843 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_843);
                        if ( s>=0 ) return s;
                        break;
                    case 323 : 
                        int LA127_844 = input.LA(1);

                         
                        int index127_844 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_844);
                        if ( s>=0 ) return s;
                        break;
                    case 324 : 
                        int LA127_845 = input.LA(1);

                         
                        int index127_845 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_845);
                        if ( s>=0 ) return s;
                        break;
                    case 325 : 
                        int LA127_846 = input.LA(1);

                         
                        int index127_846 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_846);
                        if ( s>=0 ) return s;
                        break;
                    case 326 : 
                        int LA127_847 = input.LA(1);

                         
                        int index127_847 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_847);
                        if ( s>=0 ) return s;
                        break;
                    case 327 : 
                        int LA127_848 = input.LA(1);

                         
                        int index127_848 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_848);
                        if ( s>=0 ) return s;
                        break;
                    case 328 : 
                        int LA127_849 = input.LA(1);

                         
                        int index127_849 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_849);
                        if ( s>=0 ) return s;
                        break;
                    case 329 : 
                        int LA127_850 = input.LA(1);

                         
                        int index127_850 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_850);
                        if ( s>=0 ) return s;
                        break;
                    case 330 : 
                        int LA127_851 = input.LA(1);

                         
                        int index127_851 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_851);
                        if ( s>=0 ) return s;
                        break;
                    case 331 : 
                        int LA127_852 = input.LA(1);

                         
                        int index127_852 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_852);
                        if ( s>=0 ) return s;
                        break;
                    case 332 : 
                        int LA127_853 = input.LA(1);

                         
                        int index127_853 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_853);
                        if ( s>=0 ) return s;
                        break;
                    case 333 : 
                        int LA127_854 = input.LA(1);

                         
                        int index127_854 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_854);
                        if ( s>=0 ) return s;
                        break;
                    case 334 : 
                        int LA127_855 = input.LA(1);

                         
                        int index127_855 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_855);
                        if ( s>=0 ) return s;
                        break;
                    case 335 : 
                        int LA127_883 = input.LA(1);

                         
                        int index127_883 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_883);
                        if ( s>=0 ) return s;
                        break;
                    case 336 : 
                        int LA127_884 = input.LA(1);

                         
                        int index127_884 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_884);
                        if ( s>=0 ) return s;
                        break;
                    case 337 : 
                        int LA127_885 = input.LA(1);

                         
                        int index127_885 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_885);
                        if ( s>=0 ) return s;
                        break;
                    case 338 : 
                        int LA127_886 = input.LA(1);

                         
                        int index127_886 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_886);
                        if ( s>=0 ) return s;
                        break;
                    case 339 : 
                        int LA127_887 = input.LA(1);

                         
                        int index127_887 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_887);
                        if ( s>=0 ) return s;
                        break;
                    case 340 : 
                        int LA127_888 = input.LA(1);

                         
                        int index127_888 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_888);
                        if ( s>=0 ) return s;
                        break;
                    case 341 : 
                        int LA127_890 = input.LA(1);

                         
                        int index127_890 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_890);
                        if ( s>=0 ) return s;
                        break;
                    case 342 : 
                        int LA127_930 = input.LA(1);

                         
                        int index127_930 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_930);
                        if ( s>=0 ) return s;
                        break;
                    case 343 : 
                        int LA127_931 = input.LA(1);

                         
                        int index127_931 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_931);
                        if ( s>=0 ) return s;
                        break;
                    case 344 : 
                        int LA127_932 = input.LA(1);

                         
                        int index127_932 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_932);
                        if ( s>=0 ) return s;
                        break;
                    case 345 : 
                        int LA127_935 = input.LA(1);

                         
                        int index127_935 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_935);
                        if ( s>=0 ) return s;
                        break;
                    case 346 : 
                        int LA127_936 = input.LA(1);

                         
                        int index127_936 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_936);
                        if ( s>=0 ) return s;
                        break;
                    case 347 : 
                        int LA127_937 = input.LA(1);

                         
                        int index127_937 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_937);
                        if ( s>=0 ) return s;
                        break;
                    case 348 : 
                        int LA127_940 = input.LA(1);

                         
                        int index127_940 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_940);
                        if ( s>=0 ) return s;
                        break;
                    case 349 : 
                        int LA127_941 = input.LA(1);

                         
                        int index127_941 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_941);
                        if ( s>=0 ) return s;
                        break;
                    case 350 : 
                        int LA127_942 = input.LA(1);

                         
                        int index127_942 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_942);
                        if ( s>=0 ) return s;
                        break;
                    case 351 : 
                        int LA127_945 = input.LA(1);

                         
                        int index127_945 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_945);
                        if ( s>=0 ) return s;
                        break;
                    case 352 : 
                        int LA127_946 = input.LA(1);

                         
                        int index127_946 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_946);
                        if ( s>=0 ) return s;
                        break;
                    case 353 : 
                        int LA127_947 = input.LA(1);

                         
                        int index127_947 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_947);
                        if ( s>=0 ) return s;
                        break;
                    case 354 : 
                        int LA127_950 = input.LA(1);

                         
                        int index127_950 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_950);
                        if ( s>=0 ) return s;
                        break;
                    case 355 : 
                        int LA127_951 = input.LA(1);

                         
                        int index127_951 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_951);
                        if ( s>=0 ) return s;
                        break;
                    case 356 : 
                        int LA127_952 = input.LA(1);

                         
                        int index127_952 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_952);
                        if ( s>=0 ) return s;
                        break;
                    case 357 : 
                        int LA127_955 = input.LA(1);

                         
                        int index127_955 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_955);
                        if ( s>=0 ) return s;
                        break;
                    case 358 : 
                        int LA127_956 = input.LA(1);

                         
                        int index127_956 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_956);
                        if ( s>=0 ) return s;
                        break;
                    case 359 : 
                        int LA127_957 = input.LA(1);

                         
                        int index127_957 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_957);
                        if ( s>=0 ) return s;
                        break;
                    case 360 : 
                        int LA127_962 = input.LA(1);

                         
                        int index127_962 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_962);
                        if ( s>=0 ) return s;
                        break;
                    case 361 : 
                        int LA127_963 = input.LA(1);

                         
                        int index127_963 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_963);
                        if ( s>=0 ) return s;
                        break;
                    case 362 : 
                        int LA127_964 = input.LA(1);

                         
                        int index127_964 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_964);
                        if ( s>=0 ) return s;
                        break;
                    case 363 : 
                        int LA127_965 = input.LA(1);

                         
                        int index127_965 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_965);
                        if ( s>=0 ) return s;
                        break;
                    case 364 : 
                        int LA127_966 = input.LA(1);

                         
                        int index127_966 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_966);
                        if ( s>=0 ) return s;
                        break;
                    case 365 : 
                        int LA127_967 = input.LA(1);

                         
                        int index127_967 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_967);
                        if ( s>=0 ) return s;
                        break;
                    case 366 : 
                        int LA127_968 = input.LA(1);

                         
                        int index127_968 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_968);
                        if ( s>=0 ) return s;
                        break;
                    case 367 : 
                        int LA127_969 = input.LA(1);

                         
                        int index127_969 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_969);
                        if ( s>=0 ) return s;
                        break;
                    case 368 : 
                        int LA127_970 = input.LA(1);

                         
                        int index127_970 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_970);
                        if ( s>=0 ) return s;
                        break;
                    case 369 : 
                        int LA127_971 = input.LA(1);

                         
                        int index127_971 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_971);
                        if ( s>=0 ) return s;
                        break;
                    case 370 : 
                        int LA127_972 = input.LA(1);

                         
                        int index127_972 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_972);
                        if ( s>=0 ) return s;
                        break;
                    case 371 : 
                        int LA127_973 = input.LA(1);

                         
                        int index127_973 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_973);
                        if ( s>=0 ) return s;
                        break;
                    case 372 : 
                        int LA127_974 = input.LA(1);

                         
                        int index127_974 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_974);
                        if ( s>=0 ) return s;
                        break;
                    case 373 : 
                        int LA127_975 = input.LA(1);

                         
                        int index127_975 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_975);
                        if ( s>=0 ) return s;
                        break;
                    case 374 : 
                        int LA127_976 = input.LA(1);

                         
                        int index127_976 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_976);
                        if ( s>=0 ) return s;
                        break;
                    case 375 : 
                        int LA127_1004 = input.LA(1);

                         
                        int index127_1004 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1004);
                        if ( s>=0 ) return s;
                        break;
                    case 376 : 
                        int LA127_1005 = input.LA(1);

                         
                        int index127_1005 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1005);
                        if ( s>=0 ) return s;
                        break;
                    case 377 : 
                        int LA127_1006 = input.LA(1);

                         
                        int index127_1006 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1006);
                        if ( s>=0 ) return s;
                        break;
                    case 378 : 
                        int LA127_1007 = input.LA(1);

                         
                        int index127_1007 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1007);
                        if ( s>=0 ) return s;
                        break;
                    case 379 : 
                        int LA127_1008 = input.LA(1);

                         
                        int index127_1008 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1008);
                        if ( s>=0 ) return s;
                        break;
                    case 380 : 
                        int LA127_1009 = input.LA(1);

                         
                        int index127_1009 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1009);
                        if ( s>=0 ) return s;
                        break;
                    case 381 : 
                        int LA127_1011 = input.LA(1);

                         
                        int index127_1011 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1011);
                        if ( s>=0 ) return s;
                        break;
                    case 382 : 
                        int LA127_1051 = input.LA(1);

                         
                        int index127_1051 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1051);
                        if ( s>=0 ) return s;
                        break;
                    case 383 : 
                        int LA127_1052 = input.LA(1);

                         
                        int index127_1052 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1052);
                        if ( s>=0 ) return s;
                        break;
                    case 384 : 
                        int LA127_1053 = input.LA(1);

                         
                        int index127_1053 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1053);
                        if ( s>=0 ) return s;
                        break;
                    case 385 : 
                        int LA127_1056 = input.LA(1);

                         
                        int index127_1056 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1056);
                        if ( s>=0 ) return s;
                        break;
                    case 386 : 
                        int LA127_1057 = input.LA(1);

                         
                        int index127_1057 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1057);
                        if ( s>=0 ) return s;
                        break;
                    case 387 : 
                        int LA127_1058 = input.LA(1);

                         
                        int index127_1058 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1058);
                        if ( s>=0 ) return s;
                        break;
                    case 388 : 
                        int LA127_1061 = input.LA(1);

                         
                        int index127_1061 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1061);
                        if ( s>=0 ) return s;
                        break;
                    case 389 : 
                        int LA127_1062 = input.LA(1);

                         
                        int index127_1062 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1062);
                        if ( s>=0 ) return s;
                        break;
                    case 390 : 
                        int LA127_1063 = input.LA(1);

                         
                        int index127_1063 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1063);
                        if ( s>=0 ) return s;
                        break;
                    case 391 : 
                        int LA127_1066 = input.LA(1);

                         
                        int index127_1066 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1066);
                        if ( s>=0 ) return s;
                        break;
                    case 392 : 
                        int LA127_1067 = input.LA(1);

                         
                        int index127_1067 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1067);
                        if ( s>=0 ) return s;
                        break;
                    case 393 : 
                        int LA127_1068 = input.LA(1);

                         
                        int index127_1068 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1068);
                        if ( s>=0 ) return s;
                        break;
                    case 394 : 
                        int LA127_1071 = input.LA(1);

                         
                        int index127_1071 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1071);
                        if ( s>=0 ) return s;
                        break;
                    case 395 : 
                        int LA127_1072 = input.LA(1);

                         
                        int index127_1072 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1072);
                        if ( s>=0 ) return s;
                        break;
                    case 396 : 
                        int LA127_1073 = input.LA(1);

                         
                        int index127_1073 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1073);
                        if ( s>=0 ) return s;
                        break;
                    case 397 : 
                        int LA127_1076 = input.LA(1);

                         
                        int index127_1076 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1076);
                        if ( s>=0 ) return s;
                        break;
                    case 398 : 
                        int LA127_1077 = input.LA(1);

                         
                        int index127_1077 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1077);
                        if ( s>=0 ) return s;
                        break;
                    case 399 : 
                        int LA127_1078 = input.LA(1);

                         
                        int index127_1078 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1078);
                        if ( s>=0 ) return s;
                        break;
                    case 400 : 
                        int LA127_1083 = input.LA(1);

                         
                        int index127_1083 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1083);
                        if ( s>=0 ) return s;
                        break;
                    case 401 : 
                        int LA127_1084 = input.LA(1);

                         
                        int index127_1084 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1084);
                        if ( s>=0 ) return s;
                        break;
                    case 402 : 
                        int LA127_1085 = input.LA(1);

                         
                        int index127_1085 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1085);
                        if ( s>=0 ) return s;
                        break;
                    case 403 : 
                        int LA127_1086 = input.LA(1);

                         
                        int index127_1086 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1086);
                        if ( s>=0 ) return s;
                        break;
                    case 404 : 
                        int LA127_1087 = input.LA(1);

                         
                        int index127_1087 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1087);
                        if ( s>=0 ) return s;
                        break;
                    case 405 : 
                        int LA127_1088 = input.LA(1);

                         
                        int index127_1088 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1088);
                        if ( s>=0 ) return s;
                        break;
                    case 406 : 
                        int LA127_1089 = input.LA(1);

                         
                        int index127_1089 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1089);
                        if ( s>=0 ) return s;
                        break;
                    case 407 : 
                        int LA127_1090 = input.LA(1);

                         
                        int index127_1090 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1090);
                        if ( s>=0 ) return s;
                        break;
                    case 408 : 
                        int LA127_1091 = input.LA(1);

                         
                        int index127_1091 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1091);
                        if ( s>=0 ) return s;
                        break;
                    case 409 : 
                        int LA127_1092 = input.LA(1);

                         
                        int index127_1092 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1092);
                        if ( s>=0 ) return s;
                        break;
                    case 410 : 
                        int LA127_1093 = input.LA(1);

                         
                        int index127_1093 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1093);
                        if ( s>=0 ) return s;
                        break;
                    case 411 : 
                        int LA127_1094 = input.LA(1);

                         
                        int index127_1094 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1094);
                        if ( s>=0 ) return s;
                        break;
                    case 412 : 
                        int LA127_1095 = input.LA(1);

                         
                        int index127_1095 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1095);
                        if ( s>=0 ) return s;
                        break;
                    case 413 : 
                        int LA127_1096 = input.LA(1);

                         
                        int index127_1096 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1096);
                        if ( s>=0 ) return s;
                        break;
                    case 414 : 
                        int LA127_1097 = input.LA(1);

                         
                        int index127_1097 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1097);
                        if ( s>=0 ) return s;
                        break;
                    case 415 : 
                        int LA127_1125 = input.LA(1);

                         
                        int index127_1125 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1125);
                        if ( s>=0 ) return s;
                        break;
                    case 416 : 
                        int LA127_1126 = input.LA(1);

                         
                        int index127_1126 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1126);
                        if ( s>=0 ) return s;
                        break;
                    case 417 : 
                        int LA127_1127 = input.LA(1);

                         
                        int index127_1127 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1127);
                        if ( s>=0 ) return s;
                        break;
                    case 418 : 
                        int LA127_1128 = input.LA(1);

                         
                        int index127_1128 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1128);
                        if ( s>=0 ) return s;
                        break;
                    case 419 : 
                        int LA127_1129 = input.LA(1);

                         
                        int index127_1129 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1129);
                        if ( s>=0 ) return s;
                        break;
                    case 420 : 
                        int LA127_1130 = input.LA(1);

                         
                        int index127_1130 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1130);
                        if ( s>=0 ) return s;
                        break;
                    case 421 : 
                        int LA127_1132 = input.LA(1);

                         
                        int index127_1132 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1132);
                        if ( s>=0 ) return s;
                        break;
                    case 422 : 
                        int LA127_1172 = input.LA(1);

                         
                        int index127_1172 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1172);
                        if ( s>=0 ) return s;
                        break;
                    case 423 : 
                        int LA127_1173 = input.LA(1);

                         
                        int index127_1173 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1173);
                        if ( s>=0 ) return s;
                        break;
                    case 424 : 
                        int LA127_1174 = input.LA(1);

                         
                        int index127_1174 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1174);
                        if ( s>=0 ) return s;
                        break;
                    case 425 : 
                        int LA127_1177 = input.LA(1);

                         
                        int index127_1177 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1177);
                        if ( s>=0 ) return s;
                        break;
                    case 426 : 
                        int LA127_1178 = input.LA(1);

                         
                        int index127_1178 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1178);
                        if ( s>=0 ) return s;
                        break;
                    case 427 : 
                        int LA127_1179 = input.LA(1);

                         
                        int index127_1179 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1179);
                        if ( s>=0 ) return s;
                        break;
                    case 428 : 
                        int LA127_1182 = input.LA(1);

                         
                        int index127_1182 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1182);
                        if ( s>=0 ) return s;
                        break;
                    case 429 : 
                        int LA127_1183 = input.LA(1);

                         
                        int index127_1183 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1183);
                        if ( s>=0 ) return s;
                        break;
                    case 430 : 
                        int LA127_1184 = input.LA(1);

                         
                        int index127_1184 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1184);
                        if ( s>=0 ) return s;
                        break;
                    case 431 : 
                        int LA127_1187 = input.LA(1);

                         
                        int index127_1187 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1187);
                        if ( s>=0 ) return s;
                        break;
                    case 432 : 
                        int LA127_1188 = input.LA(1);

                         
                        int index127_1188 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1188);
                        if ( s>=0 ) return s;
                        break;
                    case 433 : 
                        int LA127_1189 = input.LA(1);

                         
                        int index127_1189 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1189);
                        if ( s>=0 ) return s;
                        break;
                    case 434 : 
                        int LA127_1192 = input.LA(1);

                         
                        int index127_1192 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1192);
                        if ( s>=0 ) return s;
                        break;
                    case 435 : 
                        int LA127_1193 = input.LA(1);

                         
                        int index127_1193 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1193);
                        if ( s>=0 ) return s;
                        break;
                    case 436 : 
                        int LA127_1194 = input.LA(1);

                         
                        int index127_1194 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1194);
                        if ( s>=0 ) return s;
                        break;
                    case 437 : 
                        int LA127_1197 = input.LA(1);

                         
                        int index127_1197 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1197);
                        if ( s>=0 ) return s;
                        break;
                    case 438 : 
                        int LA127_1198 = input.LA(1);

                         
                        int index127_1198 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1198);
                        if ( s>=0 ) return s;
                        break;
                    case 439 : 
                        int LA127_1199 = input.LA(1);

                         
                        int index127_1199 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1199);
                        if ( s>=0 ) return s;
                        break;
                    case 440 : 
                        int LA127_1204 = input.LA(1);

                         
                        int index127_1204 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1204);
                        if ( s>=0 ) return s;
                        break;
                    case 441 : 
                        int LA127_1205 = input.LA(1);

                         
                        int index127_1205 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1205);
                        if ( s>=0 ) return s;
                        break;
                    case 442 : 
                        int LA127_1206 = input.LA(1);

                         
                        int index127_1206 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1206);
                        if ( s>=0 ) return s;
                        break;
                    case 443 : 
                        int LA127_1207 = input.LA(1);

                         
                        int index127_1207 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1207);
                        if ( s>=0 ) return s;
                        break;
                    case 444 : 
                        int LA127_1208 = input.LA(1);

                         
                        int index127_1208 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1208);
                        if ( s>=0 ) return s;
                        break;
                    case 445 : 
                        int LA127_1209 = input.LA(1);

                         
                        int index127_1209 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1209);
                        if ( s>=0 ) return s;
                        break;
                    case 446 : 
                        int LA127_1210 = input.LA(1);

                         
                        int index127_1210 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1210);
                        if ( s>=0 ) return s;
                        break;
                    case 447 : 
                        int LA127_1211 = input.LA(1);

                         
                        int index127_1211 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1211);
                        if ( s>=0 ) return s;
                        break;
                    case 448 : 
                        int LA127_1212 = input.LA(1);

                         
                        int index127_1212 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1212);
                        if ( s>=0 ) return s;
                        break;
                    case 449 : 
                        int LA127_1213 = input.LA(1);

                         
                        int index127_1213 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1213);
                        if ( s>=0 ) return s;
                        break;
                    case 450 : 
                        int LA127_1214 = input.LA(1);

                         
                        int index127_1214 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1214);
                        if ( s>=0 ) return s;
                        break;
                    case 451 : 
                        int LA127_1215 = input.LA(1);

                         
                        int index127_1215 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1215);
                        if ( s>=0 ) return s;
                        break;
                    case 452 : 
                        int LA127_1216 = input.LA(1);

                         
                        int index127_1216 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1216);
                        if ( s>=0 ) return s;
                        break;
                    case 453 : 
                        int LA127_1217 = input.LA(1);

                         
                        int index127_1217 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1217);
                        if ( s>=0 ) return s;
                        break;
                    case 454 : 
                        int LA127_1218 = input.LA(1);

                         
                        int index127_1218 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1218);
                        if ( s>=0 ) return s;
                        break;
                    case 455 : 
                        int LA127_1246 = input.LA(1);

                         
                        int index127_1246 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1246);
                        if ( s>=0 ) return s;
                        break;
                    case 456 : 
                        int LA127_1247 = input.LA(1);

                         
                        int index127_1247 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1247);
                        if ( s>=0 ) return s;
                        break;
                    case 457 : 
                        int LA127_1248 = input.LA(1);

                         
                        int index127_1248 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1248);
                        if ( s>=0 ) return s;
                        break;
                    case 458 : 
                        int LA127_1249 = input.LA(1);

                         
                        int index127_1249 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1249);
                        if ( s>=0 ) return s;
                        break;
                    case 459 : 
                        int LA127_1250 = input.LA(1);

                         
                        int index127_1250 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1250);
                        if ( s>=0 ) return s;
                        break;
                    case 460 : 
                        int LA127_1251 = input.LA(1);

                         
                        int index127_1251 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1251);
                        if ( s>=0 ) return s;
                        break;
                    case 461 : 
                        int LA127_1253 = input.LA(1);

                         
                        int index127_1253 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1253);
                        if ( s>=0 ) return s;
                        break;
                    case 462 : 
                        int LA127_1293 = input.LA(1);

                         
                        int index127_1293 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1293);
                        if ( s>=0 ) return s;
                        break;
                    case 463 : 
                        int LA127_1294 = input.LA(1);

                         
                        int index127_1294 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1294);
                        if ( s>=0 ) return s;
                        break;
                    case 464 : 
                        int LA127_1295 = input.LA(1);

                         
                        int index127_1295 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1295);
                        if ( s>=0 ) return s;
                        break;
                    case 465 : 
                        int LA127_1298 = input.LA(1);

                         
                        int index127_1298 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1298);
                        if ( s>=0 ) return s;
                        break;
                    case 466 : 
                        int LA127_1299 = input.LA(1);

                         
                        int index127_1299 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1299);
                        if ( s>=0 ) return s;
                        break;
                    case 467 : 
                        int LA127_1300 = input.LA(1);

                         
                        int index127_1300 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1300);
                        if ( s>=0 ) return s;
                        break;
                    case 468 : 
                        int LA127_1303 = input.LA(1);

                         
                        int index127_1303 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1303);
                        if ( s>=0 ) return s;
                        break;
                    case 469 : 
                        int LA127_1304 = input.LA(1);

                         
                        int index127_1304 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1304);
                        if ( s>=0 ) return s;
                        break;
                    case 470 : 
                        int LA127_1305 = input.LA(1);

                         
                        int index127_1305 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1305);
                        if ( s>=0 ) return s;
                        break;
                    case 471 : 
                        int LA127_1308 = input.LA(1);

                         
                        int index127_1308 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1308);
                        if ( s>=0 ) return s;
                        break;
                    case 472 : 
                        int LA127_1309 = input.LA(1);

                         
                        int index127_1309 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1309);
                        if ( s>=0 ) return s;
                        break;
                    case 473 : 
                        int LA127_1310 = input.LA(1);

                         
                        int index127_1310 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1310);
                        if ( s>=0 ) return s;
                        break;
                    case 474 : 
                        int LA127_1313 = input.LA(1);

                         
                        int index127_1313 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1313);
                        if ( s>=0 ) return s;
                        break;
                    case 475 : 
                        int LA127_1314 = input.LA(1);

                         
                        int index127_1314 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1314);
                        if ( s>=0 ) return s;
                        break;
                    case 476 : 
                        int LA127_1315 = input.LA(1);

                         
                        int index127_1315 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1315);
                        if ( s>=0 ) return s;
                        break;
                    case 477 : 
                        int LA127_1318 = input.LA(1);

                         
                        int index127_1318 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1318);
                        if ( s>=0 ) return s;
                        break;
                    case 478 : 
                        int LA127_1319 = input.LA(1);

                         
                        int index127_1319 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1319);
                        if ( s>=0 ) return s;
                        break;
                    case 479 : 
                        int LA127_1320 = input.LA(1);

                         
                        int index127_1320 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1320);
                        if ( s>=0 ) return s;
                        break;
                    case 480 : 
                        int LA127_1323 = input.LA(1);

                         
                        int index127_1323 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1323);
                        if ( s>=0 ) return s;
                        break;
                    case 481 : 
                        int LA127_1324 = input.LA(1);

                         
                        int index127_1324 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1324);
                        if ( s>=0 ) return s;
                        break;
                    case 482 : 
                        int LA127_1325 = input.LA(1);

                         
                        int index127_1325 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1325);
                        if ( s>=0 ) return s;
                        break;
                    case 483 : 
                        int LA127_1326 = input.LA(1);

                         
                        int index127_1326 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1326);
                        if ( s>=0 ) return s;
                        break;
                    case 484 : 
                        int LA127_1329 = input.LA(1);

                         
                        int index127_1329 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1329);
                        if ( s>=0 ) return s;
                        break;
                    case 485 : 
                        int LA127_1330 = input.LA(1);

                         
                        int index127_1330 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1330);
                        if ( s>=0 ) return s;
                        break;
                    case 486 : 
                        int LA127_1331 = input.LA(1);

                         
                        int index127_1331 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1331);
                        if ( s>=0 ) return s;
                        break;
                    case 487 : 
                        int LA127_1334 = input.LA(1);

                         
                        int index127_1334 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1334);
                        if ( s>=0 ) return s;
                        break;
                    case 488 : 
                        int LA127_1335 = input.LA(1);

                         
                        int index127_1335 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1335);
                        if ( s>=0 ) return s;
                        break;
                    case 489 : 
                        int LA127_1336 = input.LA(1);

                         
                        int index127_1336 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1336);
                        if ( s>=0 ) return s;
                        break;
                    case 490 : 
                        int LA127_1339 = input.LA(1);

                         
                        int index127_1339 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1339);
                        if ( s>=0 ) return s;
                        break;
                    case 491 : 
                        int LA127_1340 = input.LA(1);

                         
                        int index127_1340 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1340);
                        if ( s>=0 ) return s;
                        break;
                    case 492 : 
                        int LA127_1341 = input.LA(1);

                         
                        int index127_1341 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1341);
                        if ( s>=0 ) return s;
                        break;
                    case 493 : 
                        int LA127_1344 = input.LA(1);

                         
                        int index127_1344 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1344);
                        if ( s>=0 ) return s;
                        break;
                    case 494 : 
                        int LA127_1345 = input.LA(1);

                         
                        int index127_1345 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1345);
                        if ( s>=0 ) return s;
                        break;
                    case 495 : 
                        int LA127_1346 = input.LA(1);

                         
                        int index127_1346 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1346);
                        if ( s>=0 ) return s;
                        break;
                    case 496 : 
                        int LA127_1349 = input.LA(1);

                         
                        int index127_1349 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1349);
                        if ( s>=0 ) return s;
                        break;
                    case 497 : 
                        int LA127_1350 = input.LA(1);

                         
                        int index127_1350 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1350);
                        if ( s>=0 ) return s;
                        break;
                    case 498 : 
                        int LA127_1351 = input.LA(1);

                         
                        int index127_1351 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1351);
                        if ( s>=0 ) return s;
                        break;
                    case 499 : 
                        int LA127_1354 = input.LA(1);

                         
                        int index127_1354 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1354);
                        if ( s>=0 ) return s;
                        break;
                    case 500 : 
                        int LA127_1355 = input.LA(1);

                         
                        int index127_1355 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1355);
                        if ( s>=0 ) return s;
                        break;
                    case 501 : 
                        int LA127_1356 = input.LA(1);

                         
                        int index127_1356 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1356);
                        if ( s>=0 ) return s;
                        break;
                    case 502 : 
                        int LA127_1357 = input.LA(1);

                         
                        int index127_1357 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1357);
                        if ( s>=0 ) return s;
                        break;
                    case 503 : 
                        int LA127_1360 = input.LA(1);

                         
                        int index127_1360 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1360);
                        if ( s>=0 ) return s;
                        break;
                    case 504 : 
                        int LA127_1361 = input.LA(1);

                         
                        int index127_1361 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1361);
                        if ( s>=0 ) return s;
                        break;
                    case 505 : 
                        int LA127_1362 = input.LA(1);

                         
                        int index127_1362 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1362);
                        if ( s>=0 ) return s;
                        break;
                    case 506 : 
                        int LA127_1365 = input.LA(1);

                         
                        int index127_1365 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1365);
                        if ( s>=0 ) return s;
                        break;
                    case 507 : 
                        int LA127_1366 = input.LA(1);

                         
                        int index127_1366 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1366);
                        if ( s>=0 ) return s;
                        break;
                    case 508 : 
                        int LA127_1367 = input.LA(1);

                         
                        int index127_1367 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1367);
                        if ( s>=0 ) return s;
                        break;
                    case 509 : 
                        int LA127_1370 = input.LA(1);

                         
                        int index127_1370 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1370);
                        if ( s>=0 ) return s;
                        break;
                    case 510 : 
                        int LA127_1371 = input.LA(1);

                         
                        int index127_1371 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1371);
                        if ( s>=0 ) return s;
                        break;
                    case 511 : 
                        int LA127_1372 = input.LA(1);

                         
                        int index127_1372 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1372);
                        if ( s>=0 ) return s;
                        break;
                    case 512 : 
                        int LA127_1375 = input.LA(1);

                         
                        int index127_1375 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1375);
                        if ( s>=0 ) return s;
                        break;
                    case 513 : 
                        int LA127_1376 = input.LA(1);

                         
                        int index127_1376 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1376);
                        if ( s>=0 ) return s;
                        break;
                    case 514 : 
                        int LA127_1377 = input.LA(1);

                         
                        int index127_1377 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1377);
                        if ( s>=0 ) return s;
                        break;
                    case 515 : 
                        int LA127_1380 = input.LA(1);

                         
                        int index127_1380 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1380);
                        if ( s>=0 ) return s;
                        break;
                    case 516 : 
                        int LA127_1381 = input.LA(1);

                         
                        int index127_1381 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1381);
                        if ( s>=0 ) return s;
                        break;
                    case 517 : 
                        int LA127_1382 = input.LA(1);

                         
                        int index127_1382 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1382);
                        if ( s>=0 ) return s;
                        break;
                    case 518 : 
                        int LA127_1385 = input.LA(1);

                         
                        int index127_1385 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1385);
                        if ( s>=0 ) return s;
                        break;
                    case 519 : 
                        int LA127_1386 = input.LA(1);

                         
                        int index127_1386 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1386);
                        if ( s>=0 ) return s;
                        break;
                    case 520 : 
                        int LA127_1387 = input.LA(1);

                         
                        int index127_1387 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1387);
                        if ( s>=0 ) return s;
                        break;
                    case 521 : 
                        int LA127_1388 = input.LA(1);

                         
                        int index127_1388 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1388);
                        if ( s>=0 ) return s;
                        break;
                    case 522 : 
                        int LA127_1391 = input.LA(1);

                         
                        int index127_1391 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1391);
                        if ( s>=0 ) return s;
                        break;
                    case 523 : 
                        int LA127_1392 = input.LA(1);

                         
                        int index127_1392 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1392);
                        if ( s>=0 ) return s;
                        break;
                    case 524 : 
                        int LA127_1393 = input.LA(1);

                         
                        int index127_1393 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1393);
                        if ( s>=0 ) return s;
                        break;
                    case 525 : 
                        int LA127_1396 = input.LA(1);

                         
                        int index127_1396 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1396);
                        if ( s>=0 ) return s;
                        break;
                    case 526 : 
                        int LA127_1397 = input.LA(1);

                         
                        int index127_1397 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1397);
                        if ( s>=0 ) return s;
                        break;
                    case 527 : 
                        int LA127_1398 = input.LA(1);

                         
                        int index127_1398 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1398);
                        if ( s>=0 ) return s;
                        break;
                    case 528 : 
                        int LA127_1401 = input.LA(1);

                         
                        int index127_1401 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1401);
                        if ( s>=0 ) return s;
                        break;
                    case 529 : 
                        int LA127_1402 = input.LA(1);

                         
                        int index127_1402 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1402);
                        if ( s>=0 ) return s;
                        break;
                    case 530 : 
                        int LA127_1403 = input.LA(1);

                         
                        int index127_1403 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1403);
                        if ( s>=0 ) return s;
                        break;
                    case 531 : 
                        int LA127_1406 = input.LA(1);

                         
                        int index127_1406 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1406);
                        if ( s>=0 ) return s;
                        break;
                    case 532 : 
                        int LA127_1407 = input.LA(1);

                         
                        int index127_1407 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1407);
                        if ( s>=0 ) return s;
                        break;
                    case 533 : 
                        int LA127_1408 = input.LA(1);

                         
                        int index127_1408 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1408);
                        if ( s>=0 ) return s;
                        break;
                    case 534 : 
                        int LA127_1411 = input.LA(1);

                         
                        int index127_1411 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1411);
                        if ( s>=0 ) return s;
                        break;
                    case 535 : 
                        int LA127_1412 = input.LA(1);

                         
                        int index127_1412 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1412);
                        if ( s>=0 ) return s;
                        break;
                    case 536 : 
                        int LA127_1413 = input.LA(1);

                         
                        int index127_1413 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1413);
                        if ( s>=0 ) return s;
                        break;
                    case 537 : 
                        int LA127_1416 = input.LA(1);

                         
                        int index127_1416 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1416);
                        if ( s>=0 ) return s;
                        break;
                    case 538 : 
                        int LA127_1417 = input.LA(1);

                         
                        int index127_1417 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1417);
                        if ( s>=0 ) return s;
                        break;
                    case 539 : 
                        int LA127_1418 = input.LA(1);

                         
                        int index127_1418 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1418);
                        if ( s>=0 ) return s;
                        break;
                    case 540 : 
                        int LA127_1419 = input.LA(1);

                         
                        int index127_1419 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1419);
                        if ( s>=0 ) return s;
                        break;
                    case 541 : 
                        int LA127_1422 = input.LA(1);

                         
                        int index127_1422 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1422);
                        if ( s>=0 ) return s;
                        break;
                    case 542 : 
                        int LA127_1423 = input.LA(1);

                         
                        int index127_1423 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1423);
                        if ( s>=0 ) return s;
                        break;
                    case 543 : 
                        int LA127_1424 = input.LA(1);

                         
                        int index127_1424 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1424);
                        if ( s>=0 ) return s;
                        break;
                    case 544 : 
                        int LA127_1427 = input.LA(1);

                         
                        int index127_1427 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1427);
                        if ( s>=0 ) return s;
                        break;
                    case 545 : 
                        int LA127_1428 = input.LA(1);

                         
                        int index127_1428 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1428);
                        if ( s>=0 ) return s;
                        break;
                    case 546 : 
                        int LA127_1429 = input.LA(1);

                         
                        int index127_1429 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1429);
                        if ( s>=0 ) return s;
                        break;
                    case 547 : 
                        int LA127_1432 = input.LA(1);

                         
                        int index127_1432 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1432);
                        if ( s>=0 ) return s;
                        break;
                    case 548 : 
                        int LA127_1433 = input.LA(1);

                         
                        int index127_1433 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1433);
                        if ( s>=0 ) return s;
                        break;
                    case 549 : 
                        int LA127_1434 = input.LA(1);

                         
                        int index127_1434 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1434);
                        if ( s>=0 ) return s;
                        break;
                    case 550 : 
                        int LA127_1437 = input.LA(1);

                         
                        int index127_1437 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1437);
                        if ( s>=0 ) return s;
                        break;
                    case 551 : 
                        int LA127_1438 = input.LA(1);

                         
                        int index127_1438 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1438);
                        if ( s>=0 ) return s;
                        break;
                    case 552 : 
                        int LA127_1439 = input.LA(1);

                         
                        int index127_1439 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1439);
                        if ( s>=0 ) return s;
                        break;
                    case 553 : 
                        int LA127_1442 = input.LA(1);

                         
                        int index127_1442 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1442);
                        if ( s>=0 ) return s;
                        break;
                    case 554 : 
                        int LA127_1443 = input.LA(1);

                         
                        int index127_1443 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1443);
                        if ( s>=0 ) return s;
                        break;
                    case 555 : 
                        int LA127_1444 = input.LA(1);

                         
                        int index127_1444 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1444);
                        if ( s>=0 ) return s;
                        break;
                    case 556 : 
                        int LA127_1447 = input.LA(1);

                         
                        int index127_1447 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1447);
                        if ( s>=0 ) return s;
                        break;
                    case 557 : 
                        int LA127_1448 = input.LA(1);

                         
                        int index127_1448 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1448);
                        if ( s>=0 ) return s;
                        break;
                    case 558 : 
                        int LA127_1449 = input.LA(1);

                         
                        int index127_1449 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1449);
                        if ( s>=0 ) return s;
                        break;
                    case 559 : 
                        int LA127_1450 = input.LA(1);

                         
                        int index127_1450 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1450);
                        if ( s>=0 ) return s;
                        break;
                    case 560 : 
                        int LA127_1453 = input.LA(1);

                         
                        int index127_1453 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1453);
                        if ( s>=0 ) return s;
                        break;
                    case 561 : 
                        int LA127_1454 = input.LA(1);

                         
                        int index127_1454 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1454);
                        if ( s>=0 ) return s;
                        break;
                    case 562 : 
                        int LA127_1455 = input.LA(1);

                         
                        int index127_1455 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1455);
                        if ( s>=0 ) return s;
                        break;
                    case 563 : 
                        int LA127_1458 = input.LA(1);

                         
                        int index127_1458 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1458);
                        if ( s>=0 ) return s;
                        break;
                    case 564 : 
                        int LA127_1459 = input.LA(1);

                         
                        int index127_1459 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1459);
                        if ( s>=0 ) return s;
                        break;
                    case 565 : 
                        int LA127_1460 = input.LA(1);

                         
                        int index127_1460 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1460);
                        if ( s>=0 ) return s;
                        break;
                    case 566 : 
                        int LA127_1463 = input.LA(1);

                         
                        int index127_1463 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1463);
                        if ( s>=0 ) return s;
                        break;
                    case 567 : 
                        int LA127_1464 = input.LA(1);

                         
                        int index127_1464 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1464);
                        if ( s>=0 ) return s;
                        break;
                    case 568 : 
                        int LA127_1465 = input.LA(1);

                         
                        int index127_1465 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1465);
                        if ( s>=0 ) return s;
                        break;
                    case 569 : 
                        int LA127_1468 = input.LA(1);

                         
                        int index127_1468 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1468);
                        if ( s>=0 ) return s;
                        break;
                    case 570 : 
                        int LA127_1469 = input.LA(1);

                         
                        int index127_1469 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1469);
                        if ( s>=0 ) return s;
                        break;
                    case 571 : 
                        int LA127_1470 = input.LA(1);

                         
                        int index127_1470 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1470);
                        if ( s>=0 ) return s;
                        break;
                    case 572 : 
                        int LA127_1473 = input.LA(1);

                         
                        int index127_1473 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1473);
                        if ( s>=0 ) return s;
                        break;
                    case 573 : 
                        int LA127_1474 = input.LA(1);

                         
                        int index127_1474 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1474);
                        if ( s>=0 ) return s;
                        break;
                    case 574 : 
                        int LA127_1475 = input.LA(1);

                         
                        int index127_1475 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1475);
                        if ( s>=0 ) return s;
                        break;
                    case 575 : 
                        int LA127_1478 = input.LA(1);

                         
                        int index127_1478 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1478);
                        if ( s>=0 ) return s;
                        break;
                    case 576 : 
                        int LA127_1479 = input.LA(1);

                         
                        int index127_1479 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1479);
                        if ( s>=0 ) return s;
                        break;
                    case 577 : 
                        int LA127_1480 = input.LA(1);

                         
                        int index127_1480 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1480);
                        if ( s>=0 ) return s;
                        break;
                    case 578 : 
                        int LA127_1481 = input.LA(1);

                         
                        int index127_1481 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1481);
                        if ( s>=0 ) return s;
                        break;
                    case 579 : 
                        int LA127_1484 = input.LA(1);

                         
                        int index127_1484 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1484);
                        if ( s>=0 ) return s;
                        break;
                    case 580 : 
                        int LA127_1485 = input.LA(1);

                         
                        int index127_1485 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1485);
                        if ( s>=0 ) return s;
                        break;
                    case 581 : 
                        int LA127_1486 = input.LA(1);

                         
                        int index127_1486 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1486);
                        if ( s>=0 ) return s;
                        break;
                    case 582 : 
                        int LA127_1489 = input.LA(1);

                         
                        int index127_1489 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1489);
                        if ( s>=0 ) return s;
                        break;
                    case 583 : 
                        int LA127_1490 = input.LA(1);

                         
                        int index127_1490 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1490);
                        if ( s>=0 ) return s;
                        break;
                    case 584 : 
                        int LA127_1491 = input.LA(1);

                         
                        int index127_1491 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1491);
                        if ( s>=0 ) return s;
                        break;
                    case 585 : 
                        int LA127_1494 = input.LA(1);

                         
                        int index127_1494 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1494);
                        if ( s>=0 ) return s;
                        break;
                    case 586 : 
                        int LA127_1495 = input.LA(1);

                         
                        int index127_1495 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1495);
                        if ( s>=0 ) return s;
                        break;
                    case 587 : 
                        int LA127_1496 = input.LA(1);

                         
                        int index127_1496 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1496);
                        if ( s>=0 ) return s;
                        break;
                    case 588 : 
                        int LA127_1499 = input.LA(1);

                         
                        int index127_1499 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1499);
                        if ( s>=0 ) return s;
                        break;
                    case 589 : 
                        int LA127_1500 = input.LA(1);

                         
                        int index127_1500 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1500);
                        if ( s>=0 ) return s;
                        break;
                    case 590 : 
                        int LA127_1501 = input.LA(1);

                         
                        int index127_1501 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1501);
                        if ( s>=0 ) return s;
                        break;
                    case 591 : 
                        int LA127_1504 = input.LA(1);

                         
                        int index127_1504 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1504);
                        if ( s>=0 ) return s;
                        break;
                    case 592 : 
                        int LA127_1505 = input.LA(1);

                         
                        int index127_1505 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1505);
                        if ( s>=0 ) return s;
                        break;
                    case 593 : 
                        int LA127_1506 = input.LA(1);

                         
                        int index127_1506 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1506);
                        if ( s>=0 ) return s;
                        break;
                    case 594 : 
                        int LA127_1509 = input.LA(1);

                         
                        int index127_1509 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1509);
                        if ( s>=0 ) return s;
                        break;
                    case 595 : 
                        int LA127_1510 = input.LA(1);

                         
                        int index127_1510 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1510);
                        if ( s>=0 ) return s;
                        break;
                    case 596 : 
                        int LA127_1511 = input.LA(1);

                         
                        int index127_1511 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1511);
                        if ( s>=0 ) return s;
                        break;
                    case 597 : 
                        int LA127_1512 = input.LA(1);

                         
                        int index127_1512 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1512);
                        if ( s>=0 ) return s;
                        break;
                    case 598 : 
                        int LA127_1515 = input.LA(1);

                         
                        int index127_1515 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1515);
                        if ( s>=0 ) return s;
                        break;
                    case 599 : 
                        int LA127_1516 = input.LA(1);

                         
                        int index127_1516 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1516);
                        if ( s>=0 ) return s;
                        break;
                    case 600 : 
                        int LA127_1517 = input.LA(1);

                         
                        int index127_1517 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1517);
                        if ( s>=0 ) return s;
                        break;
                    case 601 : 
                        int LA127_1520 = input.LA(1);

                         
                        int index127_1520 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1520);
                        if ( s>=0 ) return s;
                        break;
                    case 602 : 
                        int LA127_1521 = input.LA(1);

                         
                        int index127_1521 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1521);
                        if ( s>=0 ) return s;
                        break;
                    case 603 : 
                        int LA127_1522 = input.LA(1);

                         
                        int index127_1522 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1522);
                        if ( s>=0 ) return s;
                        break;
                    case 604 : 
                        int LA127_1525 = input.LA(1);

                         
                        int index127_1525 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1525);
                        if ( s>=0 ) return s;
                        break;
                    case 605 : 
                        int LA127_1526 = input.LA(1);

                         
                        int index127_1526 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1526);
                        if ( s>=0 ) return s;
                        break;
                    case 606 : 
                        int LA127_1527 = input.LA(1);

                         
                        int index127_1527 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1527);
                        if ( s>=0 ) return s;
                        break;
                    case 607 : 
                        int LA127_1530 = input.LA(1);

                         
                        int index127_1530 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1530);
                        if ( s>=0 ) return s;
                        break;
                    case 608 : 
                        int LA127_1531 = input.LA(1);

                         
                        int index127_1531 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1531);
                        if ( s>=0 ) return s;
                        break;
                    case 609 : 
                        int LA127_1532 = input.LA(1);

                         
                        int index127_1532 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1532);
                        if ( s>=0 ) return s;
                        break;
                    case 610 : 
                        int LA127_1535 = input.LA(1);

                         
                        int index127_1535 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1535);
                        if ( s>=0 ) return s;
                        break;
                    case 611 : 
                        int LA127_1536 = input.LA(1);

                         
                        int index127_1536 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1536);
                        if ( s>=0 ) return s;
                        break;
                    case 612 : 
                        int LA127_1537 = input.LA(1);

                         
                        int index127_1537 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1537);
                        if ( s>=0 ) return s;
                        break;
                    case 613 : 
                        int LA127_1540 = input.LA(1);

                         
                        int index127_1540 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1540);
                        if ( s>=0 ) return s;
                        break;
                    case 614 : 
                        int LA127_1541 = input.LA(1);

                         
                        int index127_1541 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1541);
                        if ( s>=0 ) return s;
                        break;
                    case 615 : 
                        int LA127_1542 = input.LA(1);

                         
                        int index127_1542 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1542);
                        if ( s>=0 ) return s;
                        break;
                    case 616 : 
                        int LA127_1543 = input.LA(1);

                         
                        int index127_1543 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1543);
                        if ( s>=0 ) return s;
                        break;
                    case 617 : 
                        int LA127_1546 = input.LA(1);

                         
                        int index127_1546 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1546);
                        if ( s>=0 ) return s;
                        break;
                    case 618 : 
                        int LA127_1547 = input.LA(1);

                         
                        int index127_1547 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1547);
                        if ( s>=0 ) return s;
                        break;
                    case 619 : 
                        int LA127_1548 = input.LA(1);

                         
                        int index127_1548 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1548);
                        if ( s>=0 ) return s;
                        break;
                    case 620 : 
                        int LA127_1551 = input.LA(1);

                         
                        int index127_1551 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1551);
                        if ( s>=0 ) return s;
                        break;
                    case 621 : 
                        int LA127_1552 = input.LA(1);

                         
                        int index127_1552 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1552);
                        if ( s>=0 ) return s;
                        break;
                    case 622 : 
                        int LA127_1553 = input.LA(1);

                         
                        int index127_1553 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1553);
                        if ( s>=0 ) return s;
                        break;
                    case 623 : 
                        int LA127_1556 = input.LA(1);

                         
                        int index127_1556 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1556);
                        if ( s>=0 ) return s;
                        break;
                    case 624 : 
                        int LA127_1557 = input.LA(1);

                         
                        int index127_1557 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1557);
                        if ( s>=0 ) return s;
                        break;
                    case 625 : 
                        int LA127_1558 = input.LA(1);

                         
                        int index127_1558 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1558);
                        if ( s>=0 ) return s;
                        break;
                    case 626 : 
                        int LA127_1561 = input.LA(1);

                         
                        int index127_1561 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1561);
                        if ( s>=0 ) return s;
                        break;
                    case 627 : 
                        int LA127_1562 = input.LA(1);

                         
                        int index127_1562 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1562);
                        if ( s>=0 ) return s;
                        break;
                    case 628 : 
                        int LA127_1563 = input.LA(1);

                         
                        int index127_1563 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1563);
                        if ( s>=0 ) return s;
                        break;
                    case 629 : 
                        int LA127_1566 = input.LA(1);

                         
                        int index127_1566 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1566);
                        if ( s>=0 ) return s;
                        break;
                    case 630 : 
                        int LA127_1567 = input.LA(1);

                         
                        int index127_1567 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1567);
                        if ( s>=0 ) return s;
                        break;
                    case 631 : 
                        int LA127_1568 = input.LA(1);

                         
                        int index127_1568 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred174_JavaP()) ) {s = 691;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index127_1568);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 127, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA128_eotS =
        "\52\uffff";
    static final String DFA128_eofS =
        "\52\uffff";
    static final String DFA128_minS =
        "\1\4\2\uffff\16\0\31\uffff";
    static final String DFA128_maxS =
        "\1\175\2\uffff\16\0\31\uffff";
    static final String DFA128_acceptS =
        "\1\uffff\1\1\17\uffff\1\2\30\uffff";
    static final String DFA128_specialS =
        "\3\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
        "\14\1\15\31\uffff}>";
    static final String[] DFA128_transitionS = {
            "\1\3\1\uffff\6\21\10\uffff\1\4\1\5\1\6\1\7\1\10\20\uffff\1"+
            "\1\13\uffff\1\21\10\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17"+
            "\1\20\1\uffff\2\21\2\uffff\4\21\1\1\37\uffff\2\21\2\uffff\6"+
            "\21\1\uffff\4\21",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA128_eot = DFA.unpackEncodedString(DFA128_eotS);
    static final short[] DFA128_eof = DFA.unpackEncodedString(DFA128_eofS);
    static final char[] DFA128_min = DFA.unpackEncodedStringToUnsignedChars(DFA128_minS);
    static final char[] DFA128_max = DFA.unpackEncodedStringToUnsignedChars(DFA128_maxS);
    static final short[] DFA128_accept = DFA.unpackEncodedString(DFA128_acceptS);
    static final short[] DFA128_special = DFA.unpackEncodedString(DFA128_specialS);
    static final short[][] DFA128_transition;

    static {
        int numStates = DFA128_transitionS.length;
        DFA128_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA128_transition[i] = DFA.unpackEncodedString(DFA128_transitionS[i]);
        }
    }

    class DFA128 extends DFA {

        public DFA128(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 128;
            this.eot = DFA128_eot;
            this.eof = DFA128_eof;
            this.min = DFA128_min;
            this.max = DFA128_max;
            this.accept = DFA128_accept;
            this.special = DFA128_special;
            this.transition = DFA128_transition;
        }
        public String getDescription() {
            return "1317:1: forInit returns [ForInit element] : (local= localVariableDeclaration | el= expressionList );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA128_3 = input.LA(1);

                         
                        int index128_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA128_4 = input.LA(1);

                         
                        int index128_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA128_5 = input.LA(1);

                         
                        int index128_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA128_6 = input.LA(1);

                         
                        int index128_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA128_7 = input.LA(1);

                         
                        int index128_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA128_8 = input.LA(1);

                         
                        int index128_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA128_9 = input.LA(1);

                         
                        int index128_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_9);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA128_10 = input.LA(1);

                         
                        int index128_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_10);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA128_11 = input.LA(1);

                         
                        int index128_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_11);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA128_12 = input.LA(1);

                         
                        int index128_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_12);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA128_13 = input.LA(1);

                         
                        int index128_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_13);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA128_14 = input.LA(1);

                         
                        int index128_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_14);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA128_15 = input.LA(1);

                         
                        int index128_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_15);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA128_16 = input.LA(1);

                         
                        int index128_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred178_JavaP()) ) {s = 1;}

                        else if ( (true) ) {s = 17;}

                         
                        input.seek(index128_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 128, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA131_eotS =
        "\17\uffff";
    static final String DFA131_eofS =
        "\17\uffff";
    static final String DFA131_minS =
        "\1\56\12\uffff\2\60\2\uffff";
    static final String DFA131_maxS =
        "\1\147\12\uffff\1\60\1\71\2\uffff";
    static final String DFA131_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\2\uffff\1\13"+
        "\1\14";
    static final String DFA131_specialS =
        "\1\1\13\uffff\1\0\2\uffff}>";
    static final String[] DFA131_transitionS = {
            "\1\12\1\uffff\1\13\10\uffff\1\1\46\uffff\1\2\1\3\1\4\1\5\1"+
            "\6\1\7\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\14",
            "\1\15\10\uffff\1\16",
            "",
            ""
    };

    static final short[] DFA131_eot = DFA.unpackEncodedString(DFA131_eotS);
    static final short[] DFA131_eof = DFA.unpackEncodedString(DFA131_eofS);
    static final char[] DFA131_min = DFA.unpackEncodedStringToUnsignedChars(DFA131_minS);
    static final char[] DFA131_max = DFA.unpackEncodedStringToUnsignedChars(DFA131_maxS);
    static final short[] DFA131_accept = DFA.unpackEncodedString(DFA131_acceptS);
    static final short[] DFA131_special = DFA.unpackEncodedString(DFA131_specialS);
    static final short[][] DFA131_transition;

    static {
        int numStates = DFA131_transitionS.length;
        DFA131_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA131_transition[i] = DFA.unpackEncodedString(DFA131_transitionS[i]);
        }
    }

    class DFA131 extends DFA {

        public DFA131(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 131;
            this.eot = DFA131_eot;
            this.eof = DFA131_eof;
            this.min = DFA131_min;
            this.max = DFA131_max;
            this.accept = DFA131_accept;
            this.special = DFA131_special;
            this.transition = DFA131_transition;
        }
        public String getDescription() {
            return "1379:1: assignmentOperator : ( '=' | '+=' | '-=' | '*=' | '/=' | '&=' | '|=' | '^=' | '%=' | ( '<' '<' '=' )=>t1= '<' t2= '<' t3= '=' {...}? | ( '>' '>' '>' '=' )=>t1= '>' t2= '>' t3= '>' t4= '=' {...}? | ( '>' '>' '=' )=>t1= '>' t2= '>' t3= '=' {...}?);";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA131_12 = input.LA(1);

                         
                        int index131_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA131_12==48) && (synpred191_JavaP())) {s = 13;}

                        else if ( (LA131_12==57) && (synpred192_JavaP())) {s = 14;}

                         
                        input.seek(index131_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA131_0 = input.LA(1);

                         
                        int index131_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA131_0==57) ) {s = 1;}

                        else if ( (LA131_0==96) ) {s = 2;}

                        else if ( (LA131_0==97) ) {s = 3;}

                        else if ( (LA131_0==98) ) {s = 4;}

                        else if ( (LA131_0==99) ) {s = 5;}

                        else if ( (LA131_0==100) ) {s = 6;}

                        else if ( (LA131_0==101) ) {s = 7;}

                        else if ( (LA131_0==102) ) {s = 8;}

                        else if ( (LA131_0==103) ) {s = 9;}

                        else if ( (LA131_0==46) && (synpred190_JavaP())) {s = 10;}

                        else if ( (LA131_0==48) ) {s = 11;}

                         
                        input.seek(index131_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 131, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA144_eotS =
        "\52\uffff";
    static final String DFA144_eofS =
        "\52\uffff";
    static final String DFA144_minS =
        "\1\56\1\uffff\1\60\1\4\46\uffff";
    static final String DFA144_maxS =
        "\1\60\1\uffff\1\60\1\175\46\uffff";
    static final String DFA144_acceptS =
        "\1\uffff\1\1\2\uffff\1\2\45\3";
    static final String DFA144_specialS =
        "\1\0\2\uffff\1\1\46\uffff}>";
    static final String[] DFA144_transitionS = {
            "\1\1\1\uffff\1\2",
            "",
            "\1\3",
            "\1\33\1\uffff\1\21\1\22\1\23\1\16\1\17\1\20\10\uffff\1\34"+
            "\1\35\1\36\1\37\1\40\27\uffff\1\4\4\uffff\1\41\10\uffff\1\42"+
            "\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\uffff\1\15\1\13\2\uffff"+
            "\1\14\1\26\1\24\1\25\40\uffff\1\5\1\6\2\uffff\1\7\1\10\1\11"+
            "\1\12\1\32\3\uffff\1\27\1\30\1\31",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA144_eot = DFA.unpackEncodedString(DFA144_eotS);
    static final short[] DFA144_eof = DFA.unpackEncodedString(DFA144_eofS);
    static final char[] DFA144_min = DFA.unpackEncodedStringToUnsignedChars(DFA144_minS);
    static final char[] DFA144_max = DFA.unpackEncodedStringToUnsignedChars(DFA144_maxS);
    static final short[] DFA144_accept = DFA.unpackEncodedString(DFA144_acceptS);
    static final short[] DFA144_special = DFA.unpackEncodedString(DFA144_specialS);
    static final short[][] DFA144_transition;

    static {
        int numStates = DFA144_transitionS.length;
        DFA144_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA144_transition[i] = DFA.unpackEncodedString(DFA144_transitionS[i]);
        }
    }

    class DFA144 extends DFA {

        public DFA144(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 144;
            this.eot = DFA144_eot;
            this.eof = DFA144_eof;
            this.min = DFA144_min;
            this.max = DFA144_max;
            this.accept = DFA144_accept;
            this.special = DFA144_special;
            this.transition = DFA144_transition;
        }
        public String getDescription() {
            return "1512:1: shiftOp : ( ( '<' '<' )=>t1= '<' t2= '<' {...}? | ( '>' '>' '>' )=>t1= '>' t2= '>' t3= '>' {...}? | ( '>' '>' )=>t1= '>' t2= '>' {...}?);";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA144_0 = input.LA(1);

                         
                        int index144_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA144_0==46) && (synpred207_JavaP())) {s = 1;}

                        else if ( (LA144_0==48) ) {s = 2;}

                         
                        input.seek(index144_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA144_3 = input.LA(1);

                         
                        int index144_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA144_3==48) && (synpred208_JavaP())) {s = 4;}

                        else if ( (LA144_3==111) && (synpred209_JavaP())) {s = 5;}

                        else if ( (LA144_3==112) && (synpred209_JavaP())) {s = 6;}

                        else if ( (LA144_3==115) && (synpred209_JavaP())) {s = 7;}

                        else if ( (LA144_3==116) && (synpred209_JavaP())) {s = 8;}

                        else if ( (LA144_3==117) && (synpred209_JavaP())) {s = 9;}

                        else if ( (LA144_3==118) && (synpred209_JavaP())) {s = 10;}

                        else if ( (LA144_3==72) && (synpred209_JavaP())) {s = 11;}

                        else if ( (LA144_3==75) && (synpred209_JavaP())) {s = 12;}

                        else if ( (LA144_3==71) && (synpred209_JavaP())) {s = 13;}

                        else if ( (LA144_3==HexLiteral) && (synpred209_JavaP())) {s = 14;}

                        else if ( (LA144_3==OctalLiteral) && (synpred209_JavaP())) {s = 15;}

                        else if ( (LA144_3==DecimalLiteral) && (synpred209_JavaP())) {s = 16;}

                        else if ( (LA144_3==FloatingPointLiteral) && (synpred209_JavaP())) {s = 17;}

                        else if ( (LA144_3==CharacterLiteral) && (synpred209_JavaP())) {s = 18;}

                        else if ( (LA144_3==StringLiteral) && (synpred209_JavaP())) {s = 19;}

                        else if ( (LA144_3==77) && (synpred209_JavaP())) {s = 20;}

                        else if ( (LA144_3==78) && (synpred209_JavaP())) {s = 21;}

                        else if ( (LA144_3==76) && (synpred209_JavaP())) {s = 22;}

                        else if ( (LA144_3==123) && (synpred209_JavaP())) {s = 23;}

                        else if ( (LA144_3==124) && (synpred209_JavaP())) {s = 24;}

                        else if ( (LA144_3==125) && (synpred209_JavaP())) {s = 25;}

                        else if ( (LA144_3==119) && (synpred209_JavaP())) {s = 26;}

                        else if ( (LA144_3==Identifier) && (synpred209_JavaP())) {s = 27;}

                        else if ( (LA144_3==Export) && (synpred209_JavaP())) {s = 28;}

                        else if ( (LA144_3==Connector) && (synpred209_JavaP())) {s = 29;}

                        else if ( (LA144_3==Connect) && (synpred209_JavaP())) {s = 30;}

                        else if ( (LA144_3==Name) && (synpred209_JavaP())) {s = 31;}

                        else if ( (LA144_3==Overrides) && (synpred209_JavaP())) {s = 32;}

                        else if ( (LA144_3==53) && (synpred209_JavaP())) {s = 33;}

                        else if ( (LA144_3==62) && (synpred209_JavaP())) {s = 34;}

                        else if ( (LA144_3==63) && (synpred209_JavaP())) {s = 35;}

                        else if ( (LA144_3==64) && (synpred209_JavaP())) {s = 36;}

                        else if ( (LA144_3==65) && (synpred209_JavaP())) {s = 37;}

                        else if ( (LA144_3==66) && (synpred209_JavaP())) {s = 38;}

                        else if ( (LA144_3==67) && (synpred209_JavaP())) {s = 39;}

                        else if ( (LA144_3==68) && (synpred209_JavaP())) {s = 40;}

                        else if ( (LA144_3==69) && (synpred209_JavaP())) {s = 41;}

                         
                        input.seek(index144_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 144, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA152_eotS =
        "\43\uffff";
    static final String DFA152_eofS =
        "\43\uffff";
    static final String DFA152_minS =
        "\1\4\2\uffff\1\0\37\uffff";
    static final String DFA152_maxS =
        "\1\175\2\uffff\1\0\37\uffff";
    static final String DFA152_acceptS =
        "\1\uffff\1\1\1\2\1\uffff\1\4\35\uffff\1\3";
    static final String DFA152_specialS =
        "\3\uffff\1\0\37\uffff}>";
    static final String[] DFA152_transitionS = {
            "\1\4\1\uffff\6\4\10\uffff\5\4\34\uffff\1\4\10\uffff\10\4\1"+
            "\uffff\1\4\1\3\2\uffff\4\4\46\uffff\1\1\1\2\1\4\3\uffff\3\4",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA152_eot = DFA.unpackEncodedString(DFA152_eotS);
    static final short[] DFA152_eof = DFA.unpackEncodedString(DFA152_eofS);
    static final char[] DFA152_min = DFA.unpackEncodedStringToUnsignedChars(DFA152_minS);
    static final char[] DFA152_max = DFA.unpackEncodedStringToUnsignedChars(DFA152_maxS);
    static final short[] DFA152_accept = DFA.unpackEncodedString(DFA152_acceptS);
    static final short[] DFA152_special = DFA.unpackEncodedString(DFA152_specialS);
    static final short[][] DFA152_transition;

    static {
        int numStates = DFA152_transitionS.length;
        DFA152_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA152_transition[i] = DFA.unpackEncodedString(DFA152_transitionS[i]);
        }
    }

    class DFA152 extends DFA {

        public DFA152(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 152;
            this.eot = DFA152_eot;
            this.eof = DFA152_eof;
            this.min = DFA152_min;
            this.max = DFA152_max;
            this.accept = DFA152_accept;
            this.special = DFA152_special;
            this.transition = DFA152_transition;
        }
        public String getDescription() {
            return "1563:1: unaryExpressionNotPlusMinus returns [Expression element] : (a= '~' ex= unaryExpression | b= '!' exx= unaryExpression | castex= castExpression | prim= primary (sel= selector )* (c= '++' | d= '--' )? );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA152_3 = input.LA(1);

                         
                        int index152_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred221_JavaP()) ) {s = 34;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index152_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 152, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA156_eotS =
        "\41\uffff";
    static final String DFA156_eofS =
        "\41\uffff";
    static final String DFA156_minS =
        "\1\4\20\uffff\6\0\12\uffff";
    static final String DFA156_maxS =
        "\1\175\20\uffff\6\0\12\uffff";
    static final String DFA156_acceptS =
        "\1\uffff\1\1\1\2\1\3\1\4\13\uffff\1\5\6\uffff\1\7\1\10\7\uffff"+
        "\1\6";
    static final String DFA156_specialS =
        "\21\uffff\1\0\1\1\1\2\1\3\1\4\1\5\12\uffff}>";
    static final String[] DFA156_transitionS = {
            "\1\21\1\uffff\6\4\10\uffff\1\22\1\23\1\24\1\25\1\26\34\uffff"+
            "\1\27\10\uffff\10\30\1\uffff\1\3\1\1\2\uffff\1\2\3\4\50\uffff"+
            "\1\20\3\uffff\3\4",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA156_eot = DFA.unpackEncodedString(DFA156_eotS);
    static final short[] DFA156_eof = DFA.unpackEncodedString(DFA156_eofS);
    static final char[] DFA156_min = DFA.unpackEncodedStringToUnsignedChars(DFA156_minS);
    static final char[] DFA156_max = DFA.unpackEncodedStringToUnsignedChars(DFA156_maxS);
    static final short[] DFA156_accept = DFA.unpackEncodedString(DFA156_acceptS);
    static final short[] DFA156_special = DFA.unpackEncodedString(DFA156_specialS);
    static final short[][] DFA156_transition;

    static {
        int numStates = DFA156_transitionS.length;
        DFA156_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA156_transition[i] = DFA.unpackEncodedString(DFA156_transitionS[i]);
        }
    }

    class DFA156 extends DFA {

        public DFA156(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 156;
            this.eot = DFA156_eot;
            this.eof = DFA156_eof;
            this.min = DFA156_min;
            this.max = DFA156_max;
            this.accept = DFA156_accept;
            this.special = DFA156_special;
            this.transition = DFA156_transition;
        }
        public String getDescription() {
            return "1652:1: primary returns [Expression element] : (parex= parExpression | rubex= identifierSuffixRubbush | skw= 'super' supsuf= superSuffix | nt= nonTargetPrimary | nkw= 'new' cr= creator | morerubex= moreidentifierRuleSuffixRubbish | vt= voidType '.' clkw= 'class' | tref= type '.' clkww= 'class' );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA156_17 = input.LA(1);

                         
                        int index156_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_JavaP()) ) {s = 32;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index156_17);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA156_18 = input.LA(1);

                         
                        int index156_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_JavaP()) ) {s = 32;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index156_18);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA156_19 = input.LA(1);

                         
                        int index156_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_JavaP()) ) {s = 32;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index156_19);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA156_20 = input.LA(1);

                         
                        int index156_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_JavaP()) ) {s = 32;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index156_20);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA156_21 = input.LA(1);

                         
                        int index156_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_JavaP()) ) {s = 32;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index156_21);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA156_22 = input.LA(1);

                         
                        int index156_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred236_JavaP()) ) {s = 32;}

                        else if ( (true) ) {s = 24;}

                         
                        input.seek(index156_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 156, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA157_eotS =
        "\12\uffff";
    static final String DFA157_eofS =
        "\1\1\1\uffff\1\1\7\uffff";
    static final String DFA157_minS =
        "\1\40\1\uffff\1\4\6\0\1\uffff";
    static final String DFA157_maxS =
        "\1\164\1\uffff\1\167\6\0\1\uffff";
    static final String DFA157_acceptS =
        "\1\uffff\1\2\7\uffff\1\1";
    static final String DFA157_specialS =
        "\3\uffff\1\1\1\3\1\0\1\2\1\5\1\4\1\uffff}>";
    static final String[] DFA157_transitionS = {
            "\1\1\2\uffff\1\2\1\1\11\uffff\4\1\1\uffff\1\1\2\uffff\2\1\1"+
            "\uffff\1\1\14\uffff\1\1\1\uffff\2\1\7\uffff\1\1\16\uffff\25"+
            "\1",
            "",
            "\1\3\17\uffff\1\4\1\5\1\6\1\7\1\10\22\uffff\1\1\2\uffff\1"+
            "\1\30\uffff\1\1\3\uffff\1\1\53\uffff\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA157_eot = DFA.unpackEncodedString(DFA157_eotS);
    static final short[] DFA157_eof = DFA.unpackEncodedString(DFA157_eofS);
    static final char[] DFA157_min = DFA.unpackEncodedStringToUnsignedChars(DFA157_minS);
    static final char[] DFA157_max = DFA.unpackEncodedStringToUnsignedChars(DFA157_maxS);
    static final short[] DFA157_accept = DFA.unpackEncodedString(DFA157_acceptS);
    static final short[] DFA157_special = DFA.unpackEncodedString(DFA157_specialS);
    static final short[][] DFA157_transition;

    static {
        int numStates = DFA157_transitionS.length;
        DFA157_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA157_transition[i] = DFA.unpackEncodedString(DFA157_transitionS[i]);
        }
    }

    class DFA157 extends DFA {

        public DFA157(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 157;
            this.eot = DFA157_eot;
            this.eof = DFA157_eof;
            this.min = DFA157_min;
            this.max = DFA157_max;
            this.accept = DFA157_accept;
            this.special = DFA157_special;
            this.transition = DFA157_transition;
        }
        public String getDescription() {
            return "()* loopback of 1701:4: ( '.' idx= identifierRule )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA157_5 = input.LA(1);

                         
                        int index157_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index157_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA157_3 = input.LA(1);

                         
                        int index157_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index157_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA157_6 = input.LA(1);

                         
                        int index157_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index157_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA157_4 = input.LA(1);

                         
                        int index157_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index157_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA157_8 = input.LA(1);

                         
                        int index157_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index157_8);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA157_7 = input.LA(1);

                         
                        int index157_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred238_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index157_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 157, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA159_eotS =
        "\55\uffff";
    static final String DFA159_eofS =
        "\1\4\54\uffff";
    static final String DFA159_minS =
        "\1\40\1\0\1\uffff\1\0\51\uffff";
    static final String DFA159_maxS =
        "\1\164\1\0\1\uffff\1\0\51\uffff";
    static final String DFA159_acceptS =
        "\2\uffff\1\3\1\uffff\1\11\41\uffff\1\1\1\2\1\4\1\5\1\6\1\7\1\10";
    static final String DFA159_specialS =
        "\1\uffff\1\0\1\uffff\1\1\51\uffff}>";
    static final String[] DFA159_transitionS = {
            "\1\4\2\uffff\1\3\1\4\11\uffff\4\4\1\uffff\1\4\2\uffff\1\1\1"+
            "\4\1\uffff\1\4\14\uffff\1\4\1\uffff\1\2\1\4\7\uffff\1\4\16\uffff"+
            "\25\4",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA159_eot = DFA.unpackEncodedString(DFA159_eotS);
    static final short[] DFA159_eof = DFA.unpackEncodedString(DFA159_eofS);
    static final char[] DFA159_min = DFA.unpackEncodedStringToUnsignedChars(DFA159_minS);
    static final char[] DFA159_max = DFA.unpackEncodedStringToUnsignedChars(DFA159_maxS);
    static final short[] DFA159_accept = DFA.unpackEncodedString(DFA159_acceptS);
    static final short[] DFA159_special = DFA.unpackEncodedString(DFA159_specialS);
    static final short[][] DFA159_transition;

    static {
        int numStates = DFA159_transitionS.length;
        DFA159_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA159_transition[i] = DFA.unpackEncodedString(DFA159_transitionS[i]);
        }
    }

    class DFA159 extends DFA {

        public DFA159(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 159;
            this.eot = DFA159_eot;
            this.eof = DFA159_eof;
            this.min = DFA159_min;
            this.max = DFA159_max;
            this.accept = DFA159_accept;
            this.special = DFA159_special;
            this.transition = DFA159_transition;
        }
        public String getDescription() {
            return "1712:1: ( ( '[' ']' )+ '.' 'class' | arr= arrayAccessSuffixRubbish | arg= argumentsSuffixRubbish | '.' clkw= 'class' | '.' gen= explicitGenericInvocation | '.' thiskw= 'this' | '.' supkw= 'super' supsuf= superSuffix | '.' newkw= 'new' in= innerCreator )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA159_1 = input.LA(1);

                         
                        int index159_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred240_JavaP()) ) {s = 38;}

                        else if ( (synpred241_JavaP()) ) {s = 39;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index159_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA159_3 = input.LA(1);

                         
                        int index159_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred243_JavaP()) ) {s = 40;}

                        else if ( (synpred244_JavaP()) ) {s = 41;}

                        else if ( (synpred245_JavaP()) ) {s = 42;}

                        else if ( (synpred246_JavaP()) ) {s = 43;}

                        else if ( (synpred247_JavaP()) ) {s = 44;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index159_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 159, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA160_eotS =
        "\12\uffff";
    static final String DFA160_eofS =
        "\1\1\1\uffff\1\1\7\uffff";
    static final String DFA160_minS =
        "\1\40\1\uffff\1\4\6\0\1\uffff";
    static final String DFA160_maxS =
        "\1\164\1\uffff\1\167\6\0\1\uffff";
    static final String DFA160_acceptS =
        "\1\uffff\1\2\7\uffff\1\1";
    static final String DFA160_specialS =
        "\3\uffff\1\3\1\4\1\2\1\5\1\0\1\1\1\uffff}>";
    static final String[] DFA160_transitionS = {
            "\1\1\2\uffff\1\2\1\1\11\uffff\4\1\1\uffff\1\1\2\uffff\2\1\1"+
            "\uffff\1\1\14\uffff\1\1\1\uffff\2\1\7\uffff\1\1\16\uffff\25"+
            "\1",
            "",
            "\1\3\17\uffff\1\4\1\5\1\6\1\7\1\10\22\uffff\1\1\2\uffff\1"+
            "\1\30\uffff\1\1\3\uffff\1\1\53\uffff\1\1",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] DFA160_eot = DFA.unpackEncodedString(DFA160_eotS);
    static final short[] DFA160_eof = DFA.unpackEncodedString(DFA160_eofS);
    static final char[] DFA160_min = DFA.unpackEncodedStringToUnsignedChars(DFA160_minS);
    static final char[] DFA160_max = DFA.unpackEncodedStringToUnsignedChars(DFA160_maxS);
    static final short[] DFA160_accept = DFA.unpackEncodedString(DFA160_acceptS);
    static final short[] DFA160_special = DFA.unpackEncodedString(DFA160_specialS);
    static final short[][] DFA160_transition;

    static {
        int numStates = DFA160_transitionS.length;
        DFA160_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA160_transition[i] = DFA.unpackEncodedString(DFA160_transitionS[i]);
        }
    }

    class DFA160 extends DFA {

        public DFA160(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 160;
            this.eot = DFA160_eot;
            this.eof = DFA160_eof;
            this.min = DFA160_min;
            this.max = DFA160_max;
            this.accept = DFA160_accept;
            this.special = DFA160_special;
            this.transition = DFA160_transition;
        }
        public String getDescription() {
            return "()* loopback of 1741:54: ( '.' id= identifierRule )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA160_7 = input.LA(1);

                         
                        int index160_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index160_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA160_8 = input.LA(1);

                         
                        int index160_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index160_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA160_5 = input.LA(1);

                         
                        int index160_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index160_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA160_3 = input.LA(1);

                         
                        int index160_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index160_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA160_4 = input.LA(1);

                         
                        int index160_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index160_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA160_6 = input.LA(1);

                         
                        int index160_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred248_JavaP()) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index160_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 160, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA161_eotS =
        "\53\uffff";
    static final String DFA161_eofS =
        "\1\4\52\uffff";
    static final String DFA161_minS =
        "\1\40\1\0\1\uffff\1\0\47\uffff";
    static final String DFA161_maxS =
        "\1\164\1\0\1\uffff\1\0\47\uffff";
    static final String DFA161_acceptS =
        "\2\uffff\1\2\1\uffff\1\7\41\uffff\1\1\1\3\1\4\1\5\1\6";
    static final String DFA161_specialS =
        "\1\uffff\1\0\1\uffff\1\1\47\uffff}>";
    static final String[] DFA161_transitionS = {
            "\1\4\2\uffff\1\3\1\4\11\uffff\4\4\1\uffff\1\4\2\uffff\1\1\1"+
            "\4\1\uffff\1\4\14\uffff\1\4\1\uffff\1\2\1\4\7\uffff\1\4\16\uffff"+
            "\25\4",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA161_eot = DFA.unpackEncodedString(DFA161_eotS);
    static final short[] DFA161_eof = DFA.unpackEncodedString(DFA161_eofS);
    static final char[] DFA161_min = DFA.unpackEncodedStringToUnsignedChars(DFA161_minS);
    static final char[] DFA161_max = DFA.unpackEncodedStringToUnsignedChars(DFA161_maxS);
    static final short[] DFA161_accept = DFA.unpackEncodedString(DFA161_acceptS);
    static final short[] DFA161_special = DFA.unpackEncodedString(DFA161_specialS);
    static final short[][] DFA161_transition;

    static {
        int numStates = DFA161_transitionS.length;
        DFA161_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA161_transition[i] = DFA.unpackEncodedString(DFA161_transitionS[i]);
        }
    }

    class DFA161 extends DFA {

        public DFA161(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 161;
            this.eot = DFA161_eot;
            this.eof = DFA161_eof;
            this.min = DFA161_min;
            this.max = DFA161_max;
            this.accept = DFA161_accept;
            this.special = DFA161_special;
            this.transition = DFA161_transition;
        }
        public String getDescription() {
            return "1747:4: (arr= arrayAccessSuffixRubbish | arg= argumentsSuffixRubbish | '.' 'class' | '.' gen= explicitGenericInvocation | '.' supkw= 'super' supsuf= superSuffix | '.' newkw= 'new' in= innerCreator )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA161_1 = input.LA(1);

                         
                        int index161_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred249_JavaP()) ) {s = 38;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index161_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA161_3 = input.LA(1);

                         
                        int index161_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred251_JavaP()) ) {s = 39;}

                        else if ( (synpred252_JavaP()) ) {s = 40;}

                        else if ( (synpred253_JavaP()) ) {s = 41;}

                        else if ( (synpred254_JavaP()) ) {s = 42;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index161_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 161, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA162_eotS =
        "\46\uffff";
    static final String DFA162_eofS =
        "\1\1\45\uffff";
    static final String DFA162_minS =
        "\1\40\1\uffff\1\0\43\uffff";
    static final String DFA162_maxS =
        "\1\164\1\uffff\1\0\43\uffff";
    static final String DFA162_acceptS =
        "\1\uffff\1\2\43\uffff\1\1";
    static final String DFA162_specialS =
        "\2\uffff\1\0\43\uffff}>";
    static final String[] DFA162_transitionS = {
            "\1\1\2\uffff\2\1\11\uffff\4\1\1\uffff\1\1\2\uffff\1\2\1\1\1"+
            "\uffff\1\1\14\uffff\1\1\2\uffff\1\1\7\uffff\1\1\16\uffff\25"+
            "\1",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA162_eot = DFA.unpackEncodedString(DFA162_eotS);
    static final short[] DFA162_eof = DFA.unpackEncodedString(DFA162_eofS);
    static final char[] DFA162_min = DFA.unpackEncodedStringToUnsignedChars(DFA162_minS);
    static final char[] DFA162_max = DFA.unpackEncodedStringToUnsignedChars(DFA162_maxS);
    static final short[] DFA162_accept = DFA.unpackEncodedString(DFA162_acceptS);
    static final short[] DFA162_special = DFA.unpackEncodedString(DFA162_specialS);
    static final short[][] DFA162_transition;

    static {
        int numStates = DFA162_transitionS.length;
        DFA162_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA162_transition[i] = DFA.unpackEncodedString(DFA162_transitionS[i]);
        }
    }

    class DFA162 extends DFA {

        public DFA162(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 162;
            this.eot = DFA162_eot;
            this.eof = DFA162_eof;
            this.min = DFA162_min;
            this.max = DFA162_max;
            this.accept = DFA162_accept;
            this.special = DFA162_special;
            this.transition = DFA162_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1779:10: (open= '[' arrex= expression close= ']' )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA162_2 = input.LA(1);

                         
                        int index162_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred255_JavaP()) ) {s = 37;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index162_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 162, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA166_eotS =
        "\23\uffff";
    static final String DFA166_eofS =
        "\23\uffff";
    static final String DFA166_minS =
        "\1\4\1\uffff\16\0\3\uffff";
    static final String DFA166_maxS =
        "\1\105\1\uffff\16\0\3\uffff";
    static final String DFA166_acceptS =
        "\1\uffff\1\1\16\uffff\1\2\1\3\1\4";
    static final String DFA166_specialS =
        "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1"+
        "\14\1\15\3\uffff}>";
    static final String[] DFA166_transitionS = {
            "\1\2\17\uffff\1\3\1\4\1\5\1\6\1\7\25\uffff\1\1\17\uffff\1\10"+
            "\1\11\1\12\1\13\1\14\1\15\1\16\1\17",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] DFA166_eot = DFA.unpackEncodedString(DFA166_eotS);
    static final short[] DFA166_eof = DFA.unpackEncodedString(DFA166_eofS);
    static final char[] DFA166_min = DFA.unpackEncodedStringToUnsignedChars(DFA166_minS);
    static final char[] DFA166_max = DFA.unpackEncodedStringToUnsignedChars(DFA166_maxS);
    static final short[] DFA166_accept = DFA.unpackEncodedString(DFA166_acceptS);
    static final short[] DFA166_special = DFA.unpackEncodedString(DFA166_specialS);
    static final short[][] DFA166_transition;

    static {
        int numStates = DFA166_transitionS.length;
        DFA166_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA166_transition[i] = DFA.unpackEncodedString(DFA166_transitionS[i]);
        }
    }

    class DFA166 extends DFA {

        public DFA166(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 166;
            this.eot = DFA166_eot;
            this.eof = DFA166_eof;
            this.min = DFA166_min;
            this.max = DFA166_max;
            this.accept = DFA166_accept;
            this.special = DFA166_special;
            this.transition = DFA166_transition;
        }
        public String getDescription() {
            return "1789:1: creator returns [Expression element] : (targs= nonWildcardTypeArguments tx= createdName restx= classCreatorRest | tt= createdName ( '[' ']' )+ init= arrayInitializer | ttt= createdName ( '[' exx= expression ']' )+ ( '[' ']' )* | t= createdName rest= classCreatorRest );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA166_2 = input.LA(1);

                         
                        int index166_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred258_JavaP()) ) {s = 16;}

                        else if ( (synpred261_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index166_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA166_3 = input.LA(1);

                         
                        int index166_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred258_JavaP()) ) {s = 16;}

                        else if ( (synpred261_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index166_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA166_4 = input.LA(1);

                         
                        int index166_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred258_JavaP()) ) {s = 16;}

                        else if ( (synpred261_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index166_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA166_5 = input.LA(1);

                         
                        int index166_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred258_JavaP()) ) {s = 16;}

                        else if ( (synpred261_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index166_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA166_6 = input.LA(1);

                         
                        int index166_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred258_JavaP()) ) {s = 16;}

                        else if ( (synpred261_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index166_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA166_7 = input.LA(1);

                         
                        int index166_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred258_JavaP()) ) {s = 16;}

                        else if ( (synpred261_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index166_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA166_8 = input.LA(1);

                         
                        int index166_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred258_JavaP()) ) {s = 16;}

                        else if ( (synpred261_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index166_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA166_9 = input.LA(1);

                         
                        int index166_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred258_JavaP()) ) {s = 16;}

                        else if ( (synpred261_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index166_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA166_10 = input.LA(1);

                         
                        int index166_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred258_JavaP()) ) {s = 16;}

                        else if ( (synpred261_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index166_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA166_11 = input.LA(1);

                         
                        int index166_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred258_JavaP()) ) {s = 16;}

                        else if ( (synpred261_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index166_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA166_12 = input.LA(1);

                         
                        int index166_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred258_JavaP()) ) {s = 16;}

                        else if ( (synpred261_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index166_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA166_13 = input.LA(1);

                         
                        int index166_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred258_JavaP()) ) {s = 16;}

                        else if ( (synpred261_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index166_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA166_14 = input.LA(1);

                         
                        int index166_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred258_JavaP()) ) {s = 16;}

                        else if ( (synpred261_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index166_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA166_15 = input.LA(1);

                         
                        int index166_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred258_JavaP()) ) {s = 16;}

                        else if ( (synpred261_JavaP()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index166_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 166, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String DFA164_eotS =
        "\46\uffff";
    static final String DFA164_eofS =
        "\1\2\45\uffff";
    static final String DFA164_minS =
        "\1\40\1\0\44\uffff";
    static final String DFA164_maxS =
        "\1\164\1\0\44\uffff";
    static final String DFA164_acceptS =
        "\2\uffff\1\2\42\uffff\1\1";
    static final String DFA164_specialS =
        "\1\uffff\1\0\44\uffff}>";
    static final String[] DFA164_transitionS = {
            "\1\2\2\uffff\2\2\11\uffff\4\2\1\uffff\1\2\2\uffff\1\1\1\2\1"+
            "\uffff\1\2\14\uffff\1\2\2\uffff\1\2\7\uffff\1\2\16\uffff\25"+
            "\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA164_eot = DFA.unpackEncodedString(DFA164_eotS);
    static final short[] DFA164_eof = DFA.unpackEncodedString(DFA164_eofS);
    static final char[] DFA164_min = DFA.unpackEncodedStringToUnsignedChars(DFA164_minS);
    static final char[] DFA164_max = DFA.unpackEncodedStringToUnsignedChars(DFA164_maxS);
    static final short[] DFA164_accept = DFA.unpackEncodedString(DFA164_acceptS);
    static final short[] DFA164_special = DFA.unpackEncodedString(DFA164_specialS);
    static final short[][] DFA164_transition;

    static {
        int numStates = DFA164_transitionS.length;
        DFA164_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA164_transition[i] = DFA.unpackEncodedString(DFA164_transitionS[i]);
        }
    }

    class DFA164 extends DFA {

        public DFA164(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 164;
            this.eot = DFA164_eot;
            this.eof = DFA164_eof;
            this.min = DFA164_min;
            this.max = DFA164_max;
            this.accept = DFA164_accept;
            this.special = DFA164_special;
            this.transition = DFA164_transition;
        }
        public String getDescription() {
            return "()+ loopback of 1802:11: ( '[' exx= expression ']' )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA164_1 = input.LA(1);

                         
                        int index164_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred259_JavaP()) ) {s = 37;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index164_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 164, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_31_in_packageDeclaration487 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_qualifiedName_in_packageDeclaration491 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_packageDeclaration493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_33_in_importDeclaration533 = new BitSet(new long[]{0x0000000401F00010L});
    public static final BitSet FOLLOW_34_in_importDeclaration537 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_qualifiedName_in_importDeclaration542 = new BitSet(new long[]{0x0000000900000000L});
    public static final BitSet FOLLOW_35_in_importDeclaration566 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_36_in_importDeclaration568 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_importDeclaration587 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceDeclaration_in_typeDeclaration617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_typeDeclaration629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceModifiers_in_classOrInterfaceDeclaration669 = new BitSet(new long[]{0x0010080000000020L,0x0000000000008000L});
    public static final BitSet FOLLOW_classDeclaration_in_classOrInterfaceDeclaration702 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceDeclaration_in_classOrInterfaceDeclaration738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceModifier_in_classOrInterfaceModifiers804 = new BitSet(new long[]{0x000007E400000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_annotation_in_classOrInterfaceModifier837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_classOrInterfaceModifier851 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_classOrInterfaceModifier867 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_classOrInterfaceModifier880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_classOrInterfaceModifier895 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_classOrInterfaceModifier909 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_classOrInterfaceModifier925 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_classOrInterfaceModifier942 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifier_in_modifiers977 = new BitSet(new long[]{0x3C0007E400000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_normalClassDeclaration_in_classDeclaration1009 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumDeclaration_in_classDeclaration1023 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_normalClassDeclaration1054 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_nameAndParams_in_normalClassDeclaration1058 = new BitSet(new long[]{0x0004300000000000L});
    public static final BitSet FOLLOW_44_in_normalClassDeclaration1073 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_type_in_normalClassDeclaration1077 = new BitSet(new long[]{0x0004300000000000L});
    public static final BitSet FOLLOW_45_in_normalClassDeclaration1108 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_typeList_in_normalClassDeclaration1112 = new BitSet(new long[]{0x0004300000000000L});
    public static final BitSet FOLLOW_classBody_in_normalClassDeclaration1142 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createClassHereBecauseANTLRisAnnoying_in_nameAndParams1183 = new BitSet(new long[]{0x0000400000000002L});
    public static final BitSet FOLLOW_typeParameters_in_nameAndParams1190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierRule_in_createClassHereBecauseANTLRisAnnoying1222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_typeParameters1254 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters1258 = new BitSet(new long[]{0x0001800000000000L});
    public static final BitSet FOLLOW_47_in_typeParameters1262 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_typeParameter_in_typeParameters1266 = new BitSet(new long[]{0x0001800000000000L});
    public static final BitSet FOLLOW_48_in_typeParameters1271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierRule_in_typeParameter1300 = new BitSet(new long[]{0x0000100000000002L});
    public static final BitSet FOLLOW_44_in_typeParameter1306 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_typeBound_in_typeParameter1310 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typeBound1360 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_49_in_typeBound1384 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_type_in_typeBound1388 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_ENUM_in_enumDeclaration1439 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_enumDeclaration1443 = new BitSet(new long[]{0x0004200000000000L});
    public static final BitSet FOLLOW_45_in_enumDeclaration1466 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_typeList_in_enumDeclaration1470 = new BitSet(new long[]{0x0004200000000000L});
    public static final BitSet FOLLOW_enumBody_in_enumDeclaration1545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_enumBody1575 = new BitSet(new long[]{0x0008800101F00010L,0x0000000000008000L});
    public static final BitSet FOLLOW_enumConstants_in_enumBody1580 = new BitSet(new long[]{0x0008800100000000L});
    public static final BitSet FOLLOW_47_in_enumBody1598 = new BitSet(new long[]{0x0008000100000000L});
    public static final BitSet FOLLOW_enumBodyDeclarations_in_enumBody1604 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_enumBody1610 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumConstant_in_enumConstants1635 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_47_in_enumConstants1640 = new BitSet(new long[]{0x0000000001F00010L,0x0000000000008000L});
    public static final BitSet FOLLOW_enumConstant_in_enumConstants1644 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_annotations_in_enumConstant1674 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_enumConstant1679 = new BitSet(new long[]{0x0004300000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_arguments_in_enumConstant1686 = new BitSet(new long[]{0x0004300000000002L});
    public static final BitSet FOLLOW_classBody_in_enumConstant1695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_enumBodyDeclarations1726 = new BitSet(new long[]{0x3C0407E500000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_classBodyDeclaration_in_enumBodyDeclarations1733 = new BitSet(new long[]{0x3C0407E500000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_normalInterfaceDeclaration_in_interfaceDeclaration1770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationTypeDeclaration_in_interfaceDeclaration1784 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_normalInterfaceDeclaration1815 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_normalInterfaceDeclaration1819 = new BitSet(new long[]{0x0004700000000000L});
    public static final BitSet FOLLOW_typeParameters_in_normalInterfaceDeclaration1836 = new BitSet(new long[]{0x0004300000000000L});
    public static final BitSet FOLLOW_44_in_normalInterfaceDeclaration1854 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_typeList_in_normalInterfaceDeclaration1858 = new BitSet(new long[]{0x0004300000000000L});
    public static final BitSet FOLLOW_classBody_in_normalInterfaceDeclaration1898 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typeList1940 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_47_in_typeList1944 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_type_in_typeList1948 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_50_in_classBody1979 = new BitSet(new long[]{0x3C0C07E500000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_classBodyDeclaration_in_classBody1986 = new BitSet(new long[]{0x3C0C07E500000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_51_in_classBody1992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_interfaceBody2019 = new BitSet(new long[]{0x3C0C07E500000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_interfaceBodyDeclaration_in_interfaceBody2039 = new BitSet(new long[]{0x3C0C07E500000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_51_in_interfaceBody2087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_classBodyDeclaration2120 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_classBodyDeclaration2134 = new BitSet(new long[]{0x0004000400000000L});
    public static final BitSet FOLLOW_block_in_classBodyDeclaration2139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_classBodyDeclaration2153 = new BitSet(new long[]{0xC030480001F00030L,0x010000000000803FL});
    public static final BitSet FOLLOW_memberDecl_in_classBodyDeclaration2157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_voidType_in_voidMethodDeclaration2305 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_voidMethodDeclaration2309 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_voidMethodDeclaratorRest_in_voidMethodDeclaration2320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_voidType2350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierRule_in_constructorDeclaration2391 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_constructorDeclaratorRest_in_constructorDeclaration2422 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_methodDeclaration_in_memberDeclaration2448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_fieldDeclaration_in_memberDeclaration2462 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_genericMethodOrConstructorDecl2489 = new BitSet(new long[]{0xC020000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_genericMethodOrConstructorRest_in_genericMethodOrConstructorDecl2493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_genericMethodOrConstructorRest2538 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_53_in_genericMethodOrConstructorRest2543 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_genericMethodOrConstructorRest2550 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_methodDeclaratorRest_in_genericMethodOrConstructorRest2563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierRule_in_genericMethodOrConstructorRest2575 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_constructorDeclaratorRest_in_genericMethodOrConstructorRest2588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_methodDeclaration2618 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_methodDeclaration2622 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_methodDeclaratorRest_in_methodDeclaration2635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_fieldDeclaration2660 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_variableDeclarators_in_fieldDeclaration2666 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_fieldDeclaration2670 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_interfaceBodyDeclaration2703 = new BitSet(new long[]{0xC030480001F00030L,0x000000000000803FL});
    public static final BitSet FOLLOW_interfaceMemberDecl_in_interfaceBodyDeclaration2707 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_interfaceBodyDeclaration2719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceMethodOrFieldDecl_in_interfaceMemberDecl2744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceGenericMethodDecl_in_interfaceMemberDecl2758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_voidInterfaceMethodDeclaration_in_interfaceMemberDecl2772 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceDeclaration_in_interfaceMemberDecl2786 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classDeclaration_in_interfaceMemberDecl2800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_voidType_in_voidInterfaceMethodDeclaration2836 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_voidInterfaceMethodDeclaration2840 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_voidInterfaceMethodDeclaratorRest_in_voidInterfaceMethodDeclaration2852 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceConstant_in_interfaceMethodOrFieldDecl2886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceMethod_in_interfaceMethodOrFieldDecl2900 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_interfaceConstant2936 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_constantDeclarator_in_interfaceConstant2942 = new BitSet(new long[]{0x0000800100000000L});
    public static final BitSet FOLLOW_47_in_interfaceConstant2946 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_constantDeclarator_in_interfaceConstant2950 = new BitSet(new long[]{0x0000800100000000L});
    public static final BitSet FOLLOW_32_in_interfaceConstant2956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_interfaceMethod2981 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_interfaceMethod2985 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_interfaceMethodDeclaratorRest_in_interfaceMethod2999 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formalParameters_in_methodDeclaratorRest3026 = new BitSet(new long[]{0x0144000500000000L});
    public static final BitSet FOLLOW_54_in_methodDeclaratorRest3052 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_methodDeclaratorRest3054 = new BitSet(new long[]{0x0144000500000000L});
    public static final BitSet FOLLOW_56_in_methodDeclaratorRest3082 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_qualifiedNameList_in_methodDeclaratorRest3086 = new BitSet(new long[]{0x0004000500000000L});
    public static final BitSet FOLLOW_methodBody_in_methodDeclaratorRest3106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_methodDeclaratorRest3122 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formalParameters_in_voidMethodDeclaratorRest3169 = new BitSet(new long[]{0x0104000500000000L});
    public static final BitSet FOLLOW_56_in_voidMethodDeclaratorRest3185 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_qualifiedNameList_in_voidMethodDeclaratorRest3189 = new BitSet(new long[]{0x0004000500000000L});
    public static final BitSet FOLLOW_methodBody_in_voidMethodDeclaratorRest3209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_voidMethodDeclaratorRest3225 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formalParameters_in_interfaceMethodDeclaratorRest3276 = new BitSet(new long[]{0x0140000100000000L});
    public static final BitSet FOLLOW_54_in_interfaceMethodDeclaratorRest3288 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_interfaceMethodDeclaratorRest3290 = new BitSet(new long[]{0x0140000100000000L});
    public static final BitSet FOLLOW_56_in_interfaceMethodDeclaratorRest3317 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_qualifiedNameList_in_interfaceMethodDeclaratorRest3321 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_interfaceMethodDeclaratorRest3327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeParameters_in_interfaceGenericMethodDecl3363 = new BitSet(new long[]{0xC020000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_type_in_interfaceGenericMethodDecl3366 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_53_in_interfaceGenericMethodDecl3370 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_interfaceGenericMethodDecl3373 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_interfaceMethodDeclaratorRest_in_interfaceGenericMethodDecl3383 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formalParameters_in_voidInterfaceMethodDeclaratorRest3408 = new BitSet(new long[]{0x0100000100000000L});
    public static final BitSet FOLLOW_56_in_voidInterfaceMethodDeclaratorRest3418 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_qualifiedNameList_in_voidInterfaceMethodDeclaratorRest3422 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_voidInterfaceMethodDeclaratorRest3434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formalParameters_in_constructorDeclaratorRest3459 = new BitSet(new long[]{0x0104000000000000L});
    public static final BitSet FOLLOW_56_in_constructorDeclaratorRest3469 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_qualifiedNameList_in_constructorDeclaratorRest3473 = new BitSet(new long[]{0x0104000000000000L});
    public static final BitSet FOLLOW_constructorBody_in_constructorDeclaratorRest3486 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierRule_in_constantDeclarator3521 = new BitSet(new long[]{0x0240000000000000L});
    public static final BitSet FOLLOW_54_in_constantDeclarator3525 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_constantDeclarator3527 = new BitSet(new long[]{0x0240000000000000L});
    public static final BitSet FOLLOW_57_in_constantDeclarator3533 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_variableInitializer_in_constantDeclarator3537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableDeclarator_in_variableDeclarators3577 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_47_in_variableDeclarators3581 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_variableDeclarator_in_variableDeclarators3585 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_variableDeclaratorId_in_variableDeclarator3618 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_57_in_variableDeclarator3637 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_variableInitializer_in_variableDeclarator3641 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierRule_in_variableDeclaratorId3684 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_54_in_variableDeclaratorId3687 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_variableDeclaratorId3689 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_arrayInitializer_in_variableInitializer3720 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_variableInitializer3734 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_arrayInitializer3767 = new BitSet(new long[]{0xC02C000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_variableInitializer_in_arrayInitializer3774 = new BitSet(new long[]{0x0008800000000000L});
    public static final BitSet FOLLOW_47_in_arrayInitializer3778 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_variableInitializer_in_arrayInitializer3782 = new BitSet(new long[]{0x0008800000000000L});
    public static final BitSet FOLLOW_47_in_arrayInitializer3788 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_arrayInitializer3795 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceModifier_in_modifier3826 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_modifier3838 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_modifier3850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_modifier3862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_modifier3874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierRule_in_enumConstantName3901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualifiedName_in_typeName3928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_type3958 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_54_in_type3961 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_type3963 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_primitiveType_in_type3986 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_54_in_type3989 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_type3991 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_identifierRule_in_classOrInterfaceType4020 = new BitSet(new long[]{0x0000400800000002L});
    public static final BitSet FOLLOW_typeArguments_in_classOrInterfaceType4049 = new BitSet(new long[]{0x0000000800000002L});
    public static final BitSet FOLLOW_35_in_classOrInterfaceType4092 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_classOrInterfaceType4096 = new BitSet(new long[]{0x0000400800000002L});
    public static final BitSet FOLLOW_typeArguments_in_classOrInterfaceType4125 = new BitSet(new long[]{0x0000000800000002L});
    public static final BitSet FOLLOW_62_in_primitiveType4169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_primitiveType4181 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_primitiveType4193 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_primitiveType4205 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_primitiveType4217 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_primitiveType4229 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_primitiveType4241 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_primitiveType4253 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_variableModifier4278 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotation_in_variableModifier4290 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_typeArguments4317 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000007FL});
    public static final BitSet FOLLOW_typeArgument_in_typeArguments4331 = new BitSet(new long[]{0x0001800000000000L});
    public static final BitSet FOLLOW_47_in_typeArguments4344 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000007FL});
    public static final BitSet FOLLOW_typeArgument_in_typeArguments4348 = new BitSet(new long[]{0x0001800000000000L});
    public static final BitSet FOLLOW_48_in_typeArguments4363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_typeArgument4396 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_typeArgument4408 = new BitSet(new long[]{0x0000100000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_44_in_typeArgument4445 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_71_in_typeArgument4449 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_type_in_typeArgument4466 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_qualifiedName_in_qualifiedNameList4531 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_47_in_qualifiedNameList4536 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_qualifiedName_in_qualifiedNameList4540 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_72_in_formalParameters4571 = new BitSet(new long[]{0xC000020001F00010L,0x000000000000823FL});
    public static final BitSet FOLLOW_formalParameterDecls_in_formalParameters4576 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_formalParameters4582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifiers_in_formalParameterDecls4611 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_type_in_formalParameterDecls4615 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_variableDeclaratorId_in_formalParameterDecls4619 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_47_in_formalParameterDecls4631 = new BitSet(new long[]{0xC000020001F00010L,0x000000000000803FL});
    public static final BitSet FOLLOW_formalParameterDecls_in_formalParameterDecls4635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifiers_in_formalParameterDecls4661 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_type_in_formalParameterDecls4665 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_formalParameterDecls4667 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_variableDeclaratorId_in_formalParameterDecls4671 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_block_in_methodBody4716 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_constructorBody4741 = new BitSet(new long[]{0xC82C47E501F01FD0L,0x3DF980003EF4F9BFL});
    public static final BitSet FOLLOW_explicitConstructorInvocation_in_constructorBody4758 = new BitSet(new long[]{0xC82C07E501F01FD0L,0x3DF980003EF4F9BFL});
    public static final BitSet FOLLOW_blockStatement_in_constructorBody4777 = new BitSet(new long[]{0xC82C07E501F01FD0L,0x3DF980003EF4F9BFL});
    public static final BitSet FOLLOW_51_in_constructorBody4783 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonWildcardTypeArguments_in_explicitConstructorInvocation4810 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_explicitConstructorInvocation4813 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_arguments_in_explicitConstructorInvocation4817 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_explicitConstructorInvocation4819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_in_explicitConstructorInvocation4839 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_explicitConstructorInvocation4841 = new BitSet(new long[]{0x0000400000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_nonWildcardTypeArguments_in_explicitConstructorInvocation4847 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_71_in_explicitConstructorInvocation4850 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_arguments_in_explicitConstructorInvocation4854 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_explicitConstructorInvocation4856 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierRule_in_qualifiedName4895 = new BitSet(new long[]{0x0000000800000002L});
    public static final BitSet FOLLOW_35_in_qualifiedName4899 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_qualifiedName4903 = new BitSet(new long[]{0x0000000800000002L});
    public static final BitSet FOLLOW_integerLiteral_in_literal4936 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FloatingPointLiteral_in_literal4950 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_CharacterLiteral_in_literal4964 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_StringLiteral_in_literal4978 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_booleanLiteral_in_literal4992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_literal5004 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_HexLiteral_in_integerLiteral5031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OctalLiteral_in_integerLiteral5045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_DecimalLiteral_in_integerLiteral5059 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_booleanLiteral5084 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_booleanLiteral5096 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotation_in_annotations5130 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_annotation5157 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_annotationName_in_annotation5161 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_annotation5167 = new BitSet(new long[]{0xC024000001F00FD0L,0x38F980000000FBBFL});
    public static final BitSet FOLLOW_elementValuePairs_in_annotation5171 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_elementValue_in_annotation5175 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_annotation5180 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierRule_in_annotationName5204 = new BitSet(new long[]{0x0000000800000002L});
    public static final BitSet FOLLOW_35_in_annotationName5207 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_annotationName5209 = new BitSet(new long[]{0x0000000800000002L});
    public static final BitSet FOLLOW_elementValuePair_in_elementValuePairs5230 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_47_in_elementValuePairs5233 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_elementValuePair_in_elementValuePairs5235 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_identifierRule_in_elementValuePair5256 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_elementValuePair5258 = new BitSet(new long[]{0xC024000001F00FD0L,0x38F980000000F9BFL});
    public static final BitSet FOLLOW_elementValue_in_elementValuePair5260 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditionalExpression_in_elementValue5283 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotation_in_elementValue5293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_elementValueArrayInitializer_in_elementValue5303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_elementValueArrayInitializer5326 = new BitSet(new long[]{0xC02C800001F00FD0L,0x38F980000000F9BFL});
    public static final BitSet FOLLOW_elementValue_in_elementValueArrayInitializer5329 = new BitSet(new long[]{0x0008800000000000L});
    public static final BitSet FOLLOW_47_in_elementValueArrayInitializer5332 = new BitSet(new long[]{0xC024000001F00FD0L,0x38F980000000F9BFL});
    public static final BitSet FOLLOW_elementValue_in_elementValueArrayInitializer5334 = new BitSet(new long[]{0x0008800000000000L});
    public static final BitSet FOLLOW_47_in_elementValueArrayInitializer5341 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_elementValueArrayInitializer5345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_79_in_annotationTypeDeclaration5372 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_annotationTypeDeclaration5374 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_annotationTypeDeclaration5378 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_annotationTypeBody_in_annotationTypeDeclaration5412 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_annotationTypeBody5445 = new BitSet(new long[]{0x3C0C07E500000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_annotationTypeElementDeclaration_in_annotationTypeBody5448 = new BitSet(new long[]{0x3C0C07E500000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_51_in_annotationTypeBody5452 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_modifiers_in_annotationTypeElementDeclaration5481 = new BitSet(new long[]{0xC010080001F00030L,0x000000000000803FL});
    public static final BitSet FOLLOW_annotationTypeElementRest_in_annotationTypeElementDeclaration5485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_annotationTypeElementRest5524 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_annotationMethodOrConstantRest_in_annotationTypeElementRest5528 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_annotationTypeElementRest5547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_normalClassDeclaration_in_annotationTypeElementRest5560 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_32_in_annotationTypeElementRest5563 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_normalInterfaceDeclaration_in_annotationTypeElementRest5576 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_32_in_annotationTypeElementRest5579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enumDeclaration_in_annotationTypeElementRest5592 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_32_in_annotationTypeElementRest5596 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationTypeDeclaration_in_annotationTypeElementRest5609 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_32_in_annotationTypeElementRest5613 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationMethodRest_in_annotationMethodOrConstantRest5644 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotationConstantRest_in_annotationMethodOrConstantRest5659 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierRule_in_annotationMethodRest5692 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_annotationMethodRest5694 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_annotationMethodRest5696 = new BitSet(new long[]{0x0000000000000002L,0x0000000000010000L});
    public static final BitSet FOLLOW_defaultValue_in_annotationMethodRest5710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableDeclarators_in_annotationConstantRest5744 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_defaultValue5778 = new BitSet(new long[]{0xC024000001F00FD0L,0x38F980000000F9BFL});
    public static final BitSet FOLLOW_elementValue_in_defaultValue5780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_block5805 = new BitSet(new long[]{0xC82C07E501F01FD0L,0x3DF980003EF4F9BFL});
    public static final BitSet FOLLOW_blockStatement_in_block5812 = new BitSet(new long[]{0xC82C07E501F01FD0L,0x3DF980003EF4F9BFL});
    public static final BitSet FOLLOW_51_in_block5818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localVariableDeclarationStatement_in_blockStatement5851 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceDeclaration_in_blockStatement5865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statement_in_blockStatement5879 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localVariableDeclaration_in_localVariableDeclarationStatement5911 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_localVariableDeclarationStatement5915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifiers_in_localVariableDeclaration5940 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_type_in_localVariableDeclaration5944 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_variableDeclarators_in_localVariableDeclaration5950 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifier_in_variableModifiers5996 = new BitSet(new long[]{0x0000020000000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_block_in_statement6027 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ASSERT_in_statement6039 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_expression_in_statement6043 = new BitSet(new long[]{0x0000000100000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_statement6047 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_expression_in_statement6051 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_statement6057 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_statement6069 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parExpression_in_statement6073 = new BitSet(new long[]{0xC82407E501F01FD0L,0x3DF980003EF4F9BFL});
    public static final BitSet FOLLOW_statement_in_statement6077 = new BitSet(new long[]{0x0000000000000002L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_statement6089 = new BitSet(new long[]{0xC82407E501F01FD0L,0x3DF980003EF4F9BFL});
    public static final BitSet FOLLOW_statement_in_statement6093 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_statement6119 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_statement6121 = new BitSet(new long[]{0xC024020101F00FD0L,0x3DF980000000F9BFL});
    public static final BitSet FOLLOW_forControl_in_statement6125 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_statement6127 = new BitSet(new long[]{0xC82407E501F01FD0L,0x3DF980003EF4F9BFL});
    public static final BitSet FOLLOW_statement_in_statement6131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_statement6154 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parExpression_in_statement6158 = new BitSet(new long[]{0xC82407E501F01FD0L,0x3DF980003EF4F9BFL});
    public static final BitSet FOLLOW_statement_in_statement6162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_statement6185 = new BitSet(new long[]{0xC82407E501F01FD0L,0x3DF980003EF4F9BFL});
    public static final BitSet FOLLOW_statement_in_statement6189 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_statement6193 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parExpression_in_statement6197 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_statement6199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_87_in_statement6222 = new BitSet(new long[]{0x0004000400000000L});
    public static final BitSet FOLLOW_block_in_statement6226 = new BitSet(new long[]{0x0000000000000000L,0x0000000041000000L});
    public static final BitSet FOLLOW_catches_in_statement6251 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_statement6255 = new BitSet(new long[]{0x0004000400000000L});
    public static final BitSet FOLLOW_block_in_statement6259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catches_in_statement6287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_statement6305 = new BitSet(new long[]{0x0004000400000000L});
    public static final BitSet FOLLOW_block_in_statement6309 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_89_in_statement6345 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parExpression_in_statement6349 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_50_in_statement6374 = new BitSet(new long[]{0x0008000000000000L,0x0000000080010000L});
    public static final BitSet FOLLOW_switchBlockStatementGroups_in_statement6378 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_51_in_statement6381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_statement6393 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_parExpression_in_statement6397 = new BitSet(new long[]{0x0004000400000000L});
    public static final BitSet FOLLOW_block_in_statement6401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_statement6426 = new BitSet(new long[]{0xC024000101F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_expression_in_statement6457 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_statement6463 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_91_in_statement6475 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_expression_in_statement6479 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_statement6500 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_statement6512 = new BitSet(new long[]{0x0000000101F00010L});
    public static final BitSet FOLLOW_identifierRule_in_statement6537 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_statement6543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_93_in_statement6555 = new BitSet(new long[]{0x0000000101F00010L});
    public static final BitSet FOLLOW_identifierRule_in_statement6580 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_statement6586 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_statement6596 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_statementExpression_in_statement6610 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_statement6614 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierRule_in_statement6626 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_statement6628 = new BitSet(new long[]{0xC82407E501F01FD0L,0x3DF980003EF4F9BFL});
    public static final BitSet FOLLOW_statement_in_statement6632 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catchClause_in_catches6670 = new BitSet(new long[]{0x0000000000000002L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_catchClause6707 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_72_in_catchClause6709 = new BitSet(new long[]{0xC000020001F00010L,0x000000000000803FL});
    public static final BitSet FOLLOW_formalParameter_in_catchClause6713 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_catchClause6715 = new BitSet(new long[]{0x0004000400000000L});
    public static final BitSet FOLLOW_block_in_catchClause6719 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifiers_in_formalParameter6759 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_type_in_formalParameter6763 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_variableDeclaratorId_in_formalParameter6767 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_switchCase_in_switchBlockStatementGroups6817 = new BitSet(new long[]{0x0000000000000002L,0x0000000080010000L});
    public static final BitSet FOLLOW_switchLabel_in_switchCase6856 = new BitSet(new long[]{0xC82407E501F01FD2L,0x3DF980003EF4F9BFL});
    public static final BitSet FOLLOW_blockStatement_in_switchCase6860 = new BitSet(new long[]{0xC82407E501F01FD2L,0x3DF980003EF4F9BFL});
    public static final BitSet FOLLOW_95_in_switchLabel6892 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_constantExpression_in_switchLabel6896 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_switchLabel6898 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_switchLabel6910 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_enumConstantName_in_switchLabel6914 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_switchLabel6916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_switchLabel6928 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_switchLabel6930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enhancedForControl_in_forControl6972 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_forInit_in_forControl6986 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_forControl6989 = new BitSet(new long[]{0xC024000101F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_expression_in_forControl6993 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_forControl6996 = new BitSet(new long[]{0xC024020001F00FD2L,0x3DF980000000F9BFL});
    public static final BitSet FOLLOW_forUpdate_in_forControl7000 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localVariableDeclaration_in_forInit7032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionList_in_forInit7046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localVariableDeclaration_in_enhancedForControl7081 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_enhancedForControl7083 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_expression_in_enhancedForControl7087 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expressionList_in_forUpdate7114 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_parExpression7151 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_expression_in_parExpression7155 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_parExpression7161 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_expressionList7202 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_47_in_expressionList7225 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_expression_in_expressionList7229 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_expression_in_statementExpression7258 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_constantExpression7289 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_assignmentOperator7376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_96_in_assignmentOperator7386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_97_in_assignmentOperator7396 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_assignmentOperator7406 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_99_in_assignmentOperator7416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_100_in_assignmentOperator7426 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_101_in_assignmentOperator7436 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_102_in_assignmentOperator7446 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_103_in_assignmentOperator7456 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_assignmentOperator7477 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_assignmentOperator7481 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_assignmentOperator7485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_assignmentOperator7519 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_assignmentOperator7523 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_assignmentOperator7527 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_assignmentOperator7531 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_assignmentOperator7562 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_assignmentOperator7566 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_assignmentOperator7570 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditionalOrExpression_in_conditionalExpression7605 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
    public static final BitSet FOLLOW_70_in_conditionalExpression7610 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_expression_in_conditionalExpression7614 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_conditionalExpression7616 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_expression_in_conditionalExpression7620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_conditionalAndExpression_in_conditionalOrExpression7663 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_104_in_conditionalOrExpression7669 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_conditionalAndExpression_in_conditionalOrExpression7673 = new BitSet(new long[]{0x0000000000000002L,0x0000010000000000L});
    public static final BitSet FOLLOW_inclusiveOrExpression_in_conditionalAndExpression7711 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_105_in_conditionalAndExpression7717 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_inclusiveOrExpression_in_conditionalAndExpression7721 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_exclusiveOrExpression_in_inclusiveOrExpression7759 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_106_in_inclusiveOrExpression7765 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_exclusiveOrExpression_in_inclusiveOrExpression7769 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_andExpression_in_exclusiveOrExpression7807 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_107_in_exclusiveOrExpression7813 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_andExpression_in_exclusiveOrExpression7817 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_equalityExpression_in_andExpression7851 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_49_in_andExpression7857 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_equalityExpression_in_andExpression7861 = new BitSet(new long[]{0x0002000000000002L});
    public static final BitSet FOLLOW_instanceOfExpression_in_equalityExpression7899 = new BitSet(new long[]{0x0000000000000002L,0x0000300000000000L});
    public static final BitSet FOLLOW_108_in_equalityExpression7918 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_109_in_equalityExpression7924 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_instanceOfExpression_in_equalityExpression7931 = new BitSet(new long[]{0x0000000000000002L,0x0000300000000000L});
    public static final BitSet FOLLOW_relationalExpression_in_instanceOfExpression7974 = new BitSet(new long[]{0x0000000000000002L,0x0000400000000000L});
    public static final BitSet FOLLOW_110_in_instanceOfExpression7987 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_type_in_instanceOfExpression7991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_shiftExpression_in_relationalExpression8028 = new BitSet(new long[]{0x0001400000000002L});
    public static final BitSet FOLLOW_relationalOp_in_relationalExpression8036 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_shiftExpression_in_relationalExpression8040 = new BitSet(new long[]{0x0001400000000002L});
    public static final BitSet FOLLOW_46_in_relationalOp8090 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_relationalOp8094 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_relationalOp8124 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_relationalOp8128 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_relationalOp8149 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_relationalOp8160 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_additiveExpression_in_shiftExpression8186 = new BitSet(new long[]{0x0001400000000002L});
    public static final BitSet FOLLOW_shiftOp_in_shiftExpression8194 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_additiveExpression_in_shiftExpression8198 = new BitSet(new long[]{0x0001400000000002L});
    public static final BitSet FOLLOW_46_in_shiftOp8240 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_shiftOp8244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_shiftOp8276 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_shiftOp8280 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_shiftOp8284 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_shiftOp8314 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_shiftOp8318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_multiplicativeExpression_in_additiveExpression8358 = new BitSet(new long[]{0x0000000000000002L,0x0001800000000000L});
    public static final BitSet FOLLOW_111_in_additiveExpression8365 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_112_in_additiveExpression8371 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_multiplicativeExpression_in_additiveExpression8378 = new BitSet(new long[]{0x0000000000000002L,0x0001800000000000L});
    public static final BitSet FOLLOW_unaryExpression_in_multiplicativeExpression8416 = new BitSet(new long[]{0x0000001000000002L,0x0006000000000000L});
    public static final BitSet FOLLOW_36_in_multiplicativeExpression8424 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_113_in_multiplicativeExpression8430 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_114_in_multiplicativeExpression8436 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_unaryExpression_in_multiplicativeExpression8443 = new BitSet(new long[]{0x0000001000000002L,0x0006000000000000L});
    public static final BitSet FOLLOW_111_in_unaryExpression8479 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpression8483 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_112_in_unaryExpression8495 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpression8499 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_115_in_unaryExpression8511 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpression8515 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_116_in_unaryExpression8527 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpression8531 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unaryExpressionNotPlusMinus_in_unaryExpression8545 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_117_in_unaryExpressionNotPlusMinus8582 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus8588 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_118_in_unaryExpressionNotPlusMinus8611 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_unaryExpression_in_unaryExpressionNotPlusMinus8617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_castExpression_in_unaryExpressionNotPlusMinus8640 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primary_in_unaryExpressionNotPlusMinus8654 = new BitSet(new long[]{0x0040000800000002L,0x0018000000000000L});
    public static final BitSet FOLLOW_selector_in_unaryExpressionNotPlusMinus8680 = new BitSet(new long[]{0x0040000800000002L,0x0018000000000000L});
    public static final BitSet FOLLOW_115_in_unaryExpressionNotPlusMinus8730 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_116_in_unaryExpressionNotPlusMinus8747 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_selector8787 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_selector8791 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_arguments_in_selector8814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_selector8849 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_selector8853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_selector8865 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_71_in_selector8869 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_superSuffix_in_selector8886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_selector8911 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_119_in_selector8915 = new BitSet(new long[]{0x0000400001F00010L});
    public static final BitSet FOLLOW_innerCreator_in_selector8919 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_selector8931 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_expression_in_selector8935 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_selector8939 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_castExpression8982 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_primitiveType_in_castExpression8986 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_castExpression8988 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_unaryExpression_in_castExpression8992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_castExpression9003 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_type_in_castExpression9007 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_castExpression9009 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_unaryExpressionNotPlusMinus_in_castExpression9013 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parExpression_in_primary9049 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierSuffixRubbush_in_primary9063 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_primary9078 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_superSuffix_in_primary9093 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonTargetPrimary_in_primary9116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_119_in_primary9130 = new BitSet(new long[]{0xC000400001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_creator_in_primary9136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_moreidentifierRuleSuffixRubbish_in_primary9150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_voidType_in_primary9164 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_primary9166 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_43_in_primary9170 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_type_in_primary9184 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_35_in_primary9186 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_43_in_primary9190 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_identifierRule_in_moreidentifierRuleSuffixRubbish9254 = new BitSet(new long[]{0x0040000800000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_35_in_moreidentifierRuleSuffixRubbish9275 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_moreidentifierRuleSuffixRubbish9279 = new BitSet(new long[]{0x0040000800000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_54_in_moreidentifierRuleSuffixRubbish9311 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_moreidentifierRuleSuffixRubbish9313 = new BitSet(new long[]{0x0040000800000000L});
    public static final BitSet FOLLOW_35_in_moreidentifierRuleSuffixRubbish9317 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_43_in_moreidentifierRuleSuffixRubbish9319 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arrayAccessSuffixRubbish_in_moreidentifierRuleSuffixRubbish9340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_argumentsSuffixRubbish_in_moreidentifierRuleSuffixRubbish9354 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_moreidentifierRuleSuffixRubbish9367 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_43_in_moreidentifierRuleSuffixRubbish9371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_moreidentifierRuleSuffixRubbish9393 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_explicitGenericInvocation_in_moreidentifierRuleSuffixRubbish9397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_moreidentifierRuleSuffixRubbish9410 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_moreidentifierRuleSuffixRubbish9414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_moreidentifierRuleSuffixRubbish9435 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_71_in_moreidentifierRuleSuffixRubbish9439 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_superSuffix_in_moreidentifierRuleSuffixRubbish9457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_moreidentifierRuleSuffixRubbish9469 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_119_in_moreidentifierRuleSuffixRubbish9473 = new BitSet(new long[]{0x0000400001F00010L});
    public static final BitSet FOLLOW_innerCreator_in_moreidentifierRuleSuffixRubbish9477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_identifierSuffixRubbush9501 = new BitSet(new long[]{0x0040000800000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_35_in_identifierSuffixRubbush9505 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_identifierSuffixRubbush9509 = new BitSet(new long[]{0x0040000800000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_arrayAccessSuffixRubbish_in_identifierSuffixRubbush9534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_argumentsSuffixRubbish_in_identifierSuffixRubbush9548 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_identifierSuffixRubbush9560 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_43_in_identifierSuffixRubbush9562 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_identifierSuffixRubbush9574 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_explicitGenericInvocation_in_identifierSuffixRubbush9578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_identifierSuffixRubbush9590 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_71_in_identifierSuffixRubbush9594 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_superSuffix_in_identifierSuffixRubbush9598 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_identifierSuffixRubbush9610 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_119_in_identifierSuffixRubbush9614 = new BitSet(new long[]{0x0000400001F00010L});
    public static final BitSet FOLLOW_innerCreator_in_identifierSuffixRubbush9618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_argumentsSuffixRubbish9645 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_arrayAccessSuffixRubbish9692 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_expression_in_arrayAccessSuffixRubbish9696 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_arrayAccessSuffixRubbish9700 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_nonWildcardTypeArguments_in_creator9757 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_createdName_in_creator9761 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_classCreatorRest_in_creator9765 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createdName_in_creator9789 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_creator9808 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_creator9810 = new BitSet(new long[]{0x0044000000000000L});
    public static final BitSet FOLLOW_arrayInitializer_in_creator9818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createdName_in_creator9842 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_creator9859 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_expression_in_creator9863 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_creator9865 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_54_in_creator9885 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_creator9887 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_createdName_in_creator9903 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_classCreatorRest_in_creator9907 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceType_in_createdName9956 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_primitiveType_in_createdName9970 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonWildcardTypeArguments_in_innerCreator10000 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_innerCreator10015 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_classCreatorRest_in_innerCreator10019 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arguments_in_classCreatorRest10056 = new BitSet(new long[]{0x0004300000000002L});
    public static final BitSet FOLLOW_classBody_in_classCreatorRest10062 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonWildcardTypeArguments_in_explicitGenericInvocation10096 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_explicitGenericInvocation10100 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_arguments_in_explicitGenericInvocation10104 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_nonWildcardTypeArguments10143 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_typeList_in_nonWildcardTypeArguments10147 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_nonWildcardTypeArguments10150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_superSuffix10196 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_superSuffix10200 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_arguments_in_superSuffix10216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_arguments10276 = new BitSet(new long[]{0xC024020001F00FD0L,0x3DF980000000FBBFL});
    public static final BitSet FOLLOW_expressionList_in_arguments10281 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_arguments10288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotations_in_synpred5_JavaP141 = new BitSet(new long[]{0x000007E480000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_packageDeclaration_in_synpred5_JavaP157 = new BitSet(new long[]{0x000007E700000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_importDeclaration_in_synpred5_JavaP193 = new BitSet(new long[]{0x000007E700000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_typeDeclaration_in_synpred5_JavaP214 = new BitSet(new long[]{0x000007E500000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_classOrInterfaceDeclaration_in_synpred5_JavaP263 = new BitSet(new long[]{0x000007E500000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_typeDeclaration_in_synpred5_JavaP298 = new BitSet(new long[]{0x000007E500000002L,0x0000000000008000L});
    public static final BitSet FOLLOW_methodDeclaration_in_synpred52_JavaP2448 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_interfaceConstant_in_synpred60_JavaP2886 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_variableModifiers_in_synpred105_JavaP4611 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_type_in_synpred105_JavaP4615 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_variableDeclaratorId_in_synpred105_JavaP4619 = new BitSet(new long[]{0x0000800000000002L});
    public static final BitSet FOLLOW_47_in_synpred105_JavaP4631 = new BitSet(new long[]{0xC000020001F00010L,0x000000000000803FL});
    public static final BitSet FOLLOW_formalParameterDecls_in_synpred105_JavaP4635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_explicitConstructorInvocation_in_synpred106_JavaP4758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_nonWildcardTypeArguments_in_synpred109_JavaP4810 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_synpred109_JavaP4813 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_arguments_in_synpred109_JavaP4817 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_synpred109_JavaP4819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_annotation_in_synpred121_JavaP5130 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localVariableDeclarationStatement_in_synpred144_JavaP5851 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_classOrInterfaceDeclaration_in_synpred145_JavaP5865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_synpred150_JavaP6089 = new BitSet(new long[]{0xC82407E501F01FD0L,0x3DF980003EF4F9BFL});
    public static final BitSet FOLLOW_statement_in_synpred150_JavaP6093 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catches_in_synpred155_JavaP6251 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_synpred155_JavaP6255 = new BitSet(new long[]{0x0004000400000000L});
    public static final BitSet FOLLOW_block_in_synpred155_JavaP6259 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_catches_in_synpred156_JavaP6287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_synpred172_JavaP6892 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_constantExpression_in_synpred172_JavaP6896 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_synpred172_JavaP6898 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_synpred173_JavaP6910 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_enumConstantName_in_synpred173_JavaP6914 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_synpred173_JavaP6916 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_enhancedForControl_in_synpred174_JavaP6972 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_localVariableDeclaration_in_synpred178_JavaP7032 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_synpred190_JavaP7467 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_synpred190_JavaP7469 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_synpred190_JavaP7471 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_synpred191_JavaP7507 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_synpred191_JavaP7509 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_synpred191_JavaP7511 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_synpred191_JavaP7513 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_synpred192_JavaP7552 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_synpred192_JavaP7554 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_synpred192_JavaP7556 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_synpred203_JavaP8082 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_synpred203_JavaP8084 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_synpred204_JavaP8116 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_synpred204_JavaP8118 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_synpred207_JavaP8232 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_46_in_synpred207_JavaP8234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_synpred208_JavaP8266 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_synpred208_JavaP8268 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_synpred208_JavaP8270 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_synpred209_JavaP8306 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_synpred209_JavaP8308 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_castExpression_in_synpred221_JavaP8640 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_synpred230_JavaP8982 = new BitSet(new long[]{0xC000000001F00010L,0x000000000000003FL});
    public static final BitSet FOLLOW_primitiveType_in_synpred230_JavaP8986 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_73_in_synpred230_JavaP8988 = new BitSet(new long[]{0xC020000001F00FD0L,0x38F98000000079BFL});
    public static final BitSet FOLLOW_unaryExpression_in_synpred230_JavaP8992 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_moreidentifierRuleSuffixRubbish_in_synpred236_JavaP9150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_synpred238_JavaP9275 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_synpred238_JavaP9279 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_synpred240_JavaP9311 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_synpred240_JavaP9313 = new BitSet(new long[]{0x0040000800000000L});
    public static final BitSet FOLLOW_35_in_synpred240_JavaP9317 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_43_in_synpred240_JavaP9319 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arrayAccessSuffixRubbish_in_synpred241_JavaP9340 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_synpred243_JavaP9367 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_43_in_synpred243_JavaP9371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_synpred244_JavaP9393 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_explicitGenericInvocation_in_synpred244_JavaP9397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_synpred245_JavaP9410 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_synpred245_JavaP9414 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_synpred246_JavaP9435 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_71_in_synpred246_JavaP9439 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_superSuffix_in_synpred246_JavaP9457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_synpred247_JavaP9469 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_119_in_synpred247_JavaP9473 = new BitSet(new long[]{0x0000400001F00010L});
    public static final BitSet FOLLOW_innerCreator_in_synpred247_JavaP9477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_synpred248_JavaP9505 = new BitSet(new long[]{0x0000000001F00010L});
    public static final BitSet FOLLOW_identifierRule_in_synpred248_JavaP9509 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arrayAccessSuffixRubbish_in_synpred249_JavaP9534 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_synpred251_JavaP9560 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_43_in_synpred251_JavaP9562 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_synpred252_JavaP9574 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_explicitGenericInvocation_in_synpred252_JavaP9578 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_synpred253_JavaP9590 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_71_in_synpred253_JavaP9594 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_superSuffix_in_synpred253_JavaP9598 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_synpred254_JavaP9610 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_119_in_synpred254_JavaP9614 = new BitSet(new long[]{0x0000400001F00010L});
    public static final BitSet FOLLOW_innerCreator_in_synpred254_JavaP9618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_synpred255_JavaP9692 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_expression_in_synpred255_JavaP9696 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_synpred255_JavaP9700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createdName_in_synpred258_JavaP9789 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_synpred258_JavaP9808 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_synpred258_JavaP9810 = new BitSet(new long[]{0x0044000000000000L});
    public static final BitSet FOLLOW_arrayInitializer_in_synpred258_JavaP9818 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_synpred259_JavaP9859 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_expression_in_synpred259_JavaP9863 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_synpred259_JavaP9865 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createdName_in_synpred261_JavaP9842 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_synpred261_JavaP9859 = new BitSet(new long[]{0xC024000001F00FD0L,0x3DF98000000079BFL});
    public static final BitSet FOLLOW_expression_in_synpred261_JavaP9863 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_synpred261_JavaP9865 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_54_in_synpred261_JavaP9885 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_synpred261_JavaP9887 = new BitSet(new long[]{0x0040000000000002L});

}